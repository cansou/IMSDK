// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_nearby.proto

#ifndef PROTOBUF_youme_5fnearby_2eproto__INCLUDED
#define PROTOBUF_youme_5fnearby_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <YouMeCommon/pb/youme_comm.pb.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5fnearby_2eproto();
void protobuf_AssignDesc_youme_5fnearby_2eproto();
void protobuf_ShutdownFile_youme_5fnearby_2eproto();

class GetNearbyUserReq;
class GetNearbyUserRsp;
class YoumeUserLocation;

// ===================================================================

class GetNearbyUserReq : public ::youmecommon::protobuf::MessageLite {
 public:
  GetNearbyUserReq();
  virtual ~GetNearbyUserReq();

  GetNearbyUserReq(const GetNearbyUserReq& from);

  inline GetNearbyUserReq& operator=(const GetNearbyUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetNearbyUserReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetNearbyUserReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetNearbyUserReq* other);

  // implements Message ----------------------------------------------

  inline GetNearbyUserReq* New() const { return New(NULL); }

  GetNearbyUserReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetNearbyUserReq& from);
  void MergeFrom(const GetNearbyUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNearbyUserReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required double longitude = 2;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 3;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  double latitude() const;
  void set_latitude(double value);

  // required string district_name = 4;
  bool has_district_name() const;
  void clear_district_name();
  static const int kDistrictNameFieldNumber = 4;
  const ::std::string& district_name() const;
  void set_district_name(const ::std::string& value);
  void set_district_name(const char* value);
  void set_district_name(const char* value, size_t size);
  ::std::string* mutable_district_name();
  ::std::string* release_district_name();
  void set_allocated_district_name(::std::string* district_name);

  // required uint32 adcode = 5;
  bool has_adcode() const;
  void clear_adcode();
  static const int kAdcodeFieldNumber = 5;
  ::youmecommon::protobuf::uint32 adcode() const;
  void set_adcode(::youmecommon::protobuf::uint32 value);

  // required uint32 number_limit = 6;
  bool has_number_limit() const;
  void clear_number_limit();
  static const int kNumberLimitFieldNumber = 6;
  ::youmecommon::protobuf::uint32 number_limit() const;
  void set_number_limit(::youmecommon::protobuf::uint32 value);

  // optional uint32 max_distance_limit = 7;
  bool has_max_distance_limit() const;
  void clear_max_distance_limit();
  static const int kMaxDistanceLimitFieldNumber = 7;
  ::youmecommon::protobuf::uint32 max_distance_limit() const;
  void set_max_distance_limit(::youmecommon::protobuf::uint32 value);

  // optional double min_distance_limit = 8;
  bool has_min_distance_limit() const;
  void clear_min_distance_limit();
  static const int kMinDistanceLimitFieldNumber = 8;
  double min_distance_limit() const;
  void set_min_distance_limit(double value);

  // optional .YOUMECommonProtocol.DistrictLevel district_level = 9;
  bool has_district_level() const;
  void clear_district_level();
  static const int kDistrictLevelFieldNumber = 9;
  ::YOUMECommonProtocol::DistrictLevel district_level() const;
  void set_district_level(::YOUMECommonProtocol::DistrictLevel value);

  // optional uint32 where_adcode = 10;
  bool has_where_adcode() const;
  void clear_where_adcode();
  static const int kWhereAdcodeFieldNumber = 10;
  ::youmecommon::protobuf::uint32 where_adcode() const;
  void set_where_adcode(::youmecommon::protobuf::uint32 value);

  // optional string service_area_id = 11;
  bool has_service_area_id() const;
  void clear_service_area_id();
  static const int kServiceAreaIdFieldNumber = 11;
  const ::std::string& service_area_id() const;
  void set_service_area_id(const ::std::string& value);
  void set_service_area_id(const char* value);
  void set_service_area_id(const char* value, size_t size);
  ::std::string* mutable_service_area_id();
  ::std::string* release_service_area_id();
  void set_allocated_service_area_id(::std::string* service_area_id);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetNearbyUserReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_district_name();
  inline void clear_has_district_name();
  inline void set_has_adcode();
  inline void clear_has_adcode();
  inline void set_has_number_limit();
  inline void clear_has_number_limit();
  inline void set_has_max_distance_limit();
  inline void clear_has_max_distance_limit();
  inline void set_has_min_distance_limit();
  inline void clear_has_min_distance_limit();
  inline void set_has_district_level();
  inline void clear_has_district_level();
  inline void set_has_where_adcode();
  inline void clear_has_where_adcode();
  inline void set_has_service_area_id();
  inline void clear_has_service_area_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double longitude_;
  double latitude_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::uint32 adcode_;
  ::youmecommon::protobuf::internal::ArenaStringPtr district_name_;
  ::youmecommon::protobuf::uint32 number_limit_;
  ::youmecommon::protobuf::uint32 max_distance_limit_;
  double min_distance_limit_;
  int district_level_;
  ::youmecommon::protobuf::uint32 where_adcode_;
  ::youmecommon::protobuf::internal::ArenaStringPtr service_area_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fnearby_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fnearby_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fnearby_2eproto();
  friend void protobuf_ShutdownFile_youme_5fnearby_2eproto();

  void InitAsDefaultInstance();
  static GetNearbyUserReq* default_instance_;
};
// -------------------------------------------------------------------

class YoumeUserLocation : public ::youmecommon::protobuf::MessageLite {
 public:
  YoumeUserLocation();
  virtual ~YoumeUserLocation();

  YoumeUserLocation(const YoumeUserLocation& from);

  inline YoumeUserLocation& operator=(const YoumeUserLocation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YoumeUserLocation& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YoumeUserLocation* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YoumeUserLocation* other);

  // implements Message ----------------------------------------------

  inline YoumeUserLocation* New() const { return New(NULL); }

  YoumeUserLocation* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YoumeUserLocation& from);
  void MergeFrom(const YoumeUserLocation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YoumeUserLocation* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const void* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // required double longitude = 2;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 3;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  double latitude() const;
  void set_latitude(double value);

  // required string district_name = 4;
  bool has_district_name() const;
  void clear_district_name();
  static const int kDistrictNameFieldNumber = 4;
  const ::std::string& district_name() const;
  void set_district_name(const ::std::string& value);
  void set_district_name(const char* value);
  void set_district_name(const char* value, size_t size);
  ::std::string* mutable_district_name();
  ::std::string* release_district_name();
  void set_allocated_district_name(::std::string* district_name);

  // required uint32 adcode = 5;
  bool has_adcode() const;
  void clear_adcode();
  static const int kAdcodeFieldNumber = 5;
  ::youmecommon::protobuf::uint32 adcode() const;
  void set_adcode(::youmecommon::protobuf::uint32 value);

  // required .YOUMECommonProtocol.DistrictLevel district_level = 6;
  bool has_district_level() const;
  void clear_district_level();
  static const int kDistrictLevelFieldNumber = 6;
  ::YOUMECommonProtocol::DistrictLevel district_level() const;
  void set_district_level(::YOUMECommonProtocol::DistrictLevel value);

  // required double distance = 7;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 7;
  double distance() const;
  void set_distance(double value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.YoumeUserLocation)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_district_name();
  inline void clear_has_district_name();
  inline void set_has_adcode();
  inline void clear_has_adcode();
  inline void set_has_district_level();
  inline void clear_has_district_level();
  inline void set_has_distance();
  inline void clear_has_distance();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr user_id_;
  double longitude_;
  double latitude_;
  ::youmecommon::protobuf::internal::ArenaStringPtr district_name_;
  ::youmecommon::protobuf::uint32 adcode_;
  int district_level_;
  double distance_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fnearby_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fnearby_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fnearby_2eproto();
  friend void protobuf_ShutdownFile_youme_5fnearby_2eproto();

  void InitAsDefaultInstance();
  static YoumeUserLocation* default_instance_;
};
// -------------------------------------------------------------------

class GetNearbyUserRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  GetNearbyUserRsp();
  virtual ~GetNearbyUserRsp();

  GetNearbyUserRsp(const GetNearbyUserRsp& from);

  inline GetNearbyUserRsp& operator=(const GetNearbyUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetNearbyUserRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetNearbyUserRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetNearbyUserRsp* other);

  // implements Message ----------------------------------------------

  inline GetNearbyUserRsp* New() const { return New(NULL); }

  GetNearbyUserRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetNearbyUserRsp& from);
  void MergeFrom(const GetNearbyUserRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNearbyUserRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required uint32 people_cnt = 3;
  bool has_people_cnt() const;
  void clear_people_cnt();
  static const int kPeopleCntFieldNumber = 3;
  ::youmecommon::protobuf::uint32 people_cnt() const;
  void set_people_cnt(::youmecommon::protobuf::uint32 value);

  // repeated .YOUMEServiceProtocol.YoumeUserLocation people_list = 4;
  int people_list_size() const;
  void clear_people_list();
  static const int kPeopleListFieldNumber = 4;
  const ::YOUMEServiceProtocol::YoumeUserLocation& people_list(int index) const;
  ::YOUMEServiceProtocol::YoumeUserLocation* mutable_people_list(int index);
  ::YOUMEServiceProtocol::YoumeUserLocation* add_people_list();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::YoumeUserLocation >*
      mutable_people_list();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::YoumeUserLocation >&
      people_list() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetNearbyUserRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_people_cnt();
  inline void clear_has_people_cnt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::YoumeUserLocation > people_list_;
  ::youmecommon::protobuf::uint32 people_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fnearby_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fnearby_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fnearby_2eproto();
  friend void protobuf_ShutdownFile_youme_5fnearby_2eproto();

  void InitAsDefaultInstance();
  static GetNearbyUserRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNearbyUserReq

// required int32 version = 1;
inline bool GetNearbyUserReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetNearbyUserReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetNearbyUserReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetNearbyUserReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetNearbyUserReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.version)
  return version_;
}
inline void GetNearbyUserReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.version)
}

// required double longitude = 2;
inline bool GetNearbyUserReq::has_longitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetNearbyUserReq::set_has_longitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetNearbyUserReq::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetNearbyUserReq::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double GetNearbyUserReq::longitude() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.longitude)
  return longitude_;
}
inline void GetNearbyUserReq::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.longitude)
}

// required double latitude = 3;
inline bool GetNearbyUserReq::has_latitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetNearbyUserReq::set_has_latitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetNearbyUserReq::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetNearbyUserReq::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double GetNearbyUserReq::latitude() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.latitude)
  return latitude_;
}
inline void GetNearbyUserReq::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.latitude)
}

// required string district_name = 4;
inline bool GetNearbyUserReq::has_district_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetNearbyUserReq::set_has_district_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetNearbyUserReq::clear_has_district_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetNearbyUserReq::clear_district_name() {
  district_name_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_district_name();
}
inline const ::std::string& GetNearbyUserReq::district_name() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.district_name)
  return district_name_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNearbyUserReq::set_district_name(const ::std::string& value) {
  set_has_district_name();
  district_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.district_name)
}
inline void GetNearbyUserReq::set_district_name(const char* value) {
  set_has_district_name();
  district_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetNearbyUserReq.district_name)
}
inline void GetNearbyUserReq::set_district_name(const char* value, size_t size) {
  set_has_district_name();
  district_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetNearbyUserReq.district_name)
}
inline ::std::string* GetNearbyUserReq::mutable_district_name() {
  set_has_district_name();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetNearbyUserReq.district_name)
  return district_name_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNearbyUserReq::release_district_name() {
  clear_has_district_name();
  return district_name_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNearbyUserReq::set_allocated_district_name(::std::string* district_name) {
  if (district_name != NULL) {
    set_has_district_name();
  } else {
    clear_has_district_name();
  }
  district_name_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), district_name);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetNearbyUserReq.district_name)
}

// required uint32 adcode = 5;
inline bool GetNearbyUserReq::has_adcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetNearbyUserReq::set_has_adcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetNearbyUserReq::clear_has_adcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetNearbyUserReq::clear_adcode() {
  adcode_ = 0u;
  clear_has_adcode();
}
inline ::youmecommon::protobuf::uint32 GetNearbyUserReq::adcode() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.adcode)
  return adcode_;
}
inline void GetNearbyUserReq::set_adcode(::youmecommon::protobuf::uint32 value) {
  set_has_adcode();
  adcode_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.adcode)
}

// required uint32 number_limit = 6;
inline bool GetNearbyUserReq::has_number_limit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetNearbyUserReq::set_has_number_limit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetNearbyUserReq::clear_has_number_limit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetNearbyUserReq::clear_number_limit() {
  number_limit_ = 0u;
  clear_has_number_limit();
}
inline ::youmecommon::protobuf::uint32 GetNearbyUserReq::number_limit() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.number_limit)
  return number_limit_;
}
inline void GetNearbyUserReq::set_number_limit(::youmecommon::protobuf::uint32 value) {
  set_has_number_limit();
  number_limit_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.number_limit)
}

// optional uint32 max_distance_limit = 7;
inline bool GetNearbyUserReq::has_max_distance_limit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetNearbyUserReq::set_has_max_distance_limit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetNearbyUserReq::clear_has_max_distance_limit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetNearbyUserReq::clear_max_distance_limit() {
  max_distance_limit_ = 0u;
  clear_has_max_distance_limit();
}
inline ::youmecommon::protobuf::uint32 GetNearbyUserReq::max_distance_limit() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.max_distance_limit)
  return max_distance_limit_;
}
inline void GetNearbyUserReq::set_max_distance_limit(::youmecommon::protobuf::uint32 value) {
  set_has_max_distance_limit();
  max_distance_limit_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.max_distance_limit)
}

// optional double min_distance_limit = 8;
inline bool GetNearbyUserReq::has_min_distance_limit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetNearbyUserReq::set_has_min_distance_limit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetNearbyUserReq::clear_has_min_distance_limit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetNearbyUserReq::clear_min_distance_limit() {
  min_distance_limit_ = 0;
  clear_has_min_distance_limit();
}
inline double GetNearbyUserReq::min_distance_limit() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.min_distance_limit)
  return min_distance_limit_;
}
inline void GetNearbyUserReq::set_min_distance_limit(double value) {
  set_has_min_distance_limit();
  min_distance_limit_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.min_distance_limit)
}

// optional .YOUMECommonProtocol.DistrictLevel district_level = 9;
inline bool GetNearbyUserReq::has_district_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetNearbyUserReq::set_has_district_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetNearbyUserReq::clear_has_district_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetNearbyUserReq::clear_district_level() {
  district_level_ = 1;
  clear_has_district_level();
}
inline ::YOUMECommonProtocol::DistrictLevel GetNearbyUserReq::district_level() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.district_level)
  return static_cast< ::YOUMECommonProtocol::DistrictLevel >(district_level_);
}
inline void GetNearbyUserReq::set_district_level(::YOUMECommonProtocol::DistrictLevel value) {
  assert(::YOUMECommonProtocol::DistrictLevel_IsValid(value));
  set_has_district_level();
  district_level_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.district_level)
}

// optional uint32 where_adcode = 10;
inline bool GetNearbyUserReq::has_where_adcode() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetNearbyUserReq::set_has_where_adcode() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetNearbyUserReq::clear_has_where_adcode() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetNearbyUserReq::clear_where_adcode() {
  where_adcode_ = 0u;
  clear_has_where_adcode();
}
inline ::youmecommon::protobuf::uint32 GetNearbyUserReq::where_adcode() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.where_adcode)
  return where_adcode_;
}
inline void GetNearbyUserReq::set_where_adcode(::youmecommon::protobuf::uint32 value) {
  set_has_where_adcode();
  where_adcode_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.where_adcode)
}

// optional string service_area_id = 11;
inline bool GetNearbyUserReq::has_service_area_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetNearbyUserReq::set_has_service_area_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetNearbyUserReq::clear_has_service_area_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetNearbyUserReq::clear_service_area_id() {
  service_area_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_service_area_id();
}
inline const ::std::string& GetNearbyUserReq::service_area_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserReq.service_area_id)
  return service_area_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNearbyUserReq::set_service_area_id(const ::std::string& value) {
  set_has_service_area_id();
  service_area_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserReq.service_area_id)
}
inline void GetNearbyUserReq::set_service_area_id(const char* value) {
  set_has_service_area_id();
  service_area_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetNearbyUserReq.service_area_id)
}
inline void GetNearbyUserReq::set_service_area_id(const char* value, size_t size) {
  set_has_service_area_id();
  service_area_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetNearbyUserReq.service_area_id)
}
inline ::std::string* GetNearbyUserReq::mutable_service_area_id() {
  set_has_service_area_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetNearbyUserReq.service_area_id)
  return service_area_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNearbyUserReq::release_service_area_id() {
  clear_has_service_area_id();
  return service_area_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNearbyUserReq::set_allocated_service_area_id(::std::string* service_area_id) {
  if (service_area_id != NULL) {
    set_has_service_area_id();
  } else {
    clear_has_service_area_id();
  }
  service_area_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), service_area_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetNearbyUserReq.service_area_id)
}

// -------------------------------------------------------------------

// YoumeUserLocation

// required bytes user_id = 1;
inline bool YoumeUserLocation::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YoumeUserLocation::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YoumeUserLocation::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YoumeUserLocation::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& YoumeUserLocation::user_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.YoumeUserLocation.user_id)
  return user_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YoumeUserLocation::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.YoumeUserLocation.user_id)
}
inline void YoumeUserLocation::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.YoumeUserLocation.user_id)
}
inline void YoumeUserLocation::set_user_id(const void* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.YoumeUserLocation.user_id)
}
inline ::std::string* YoumeUserLocation::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.YoumeUserLocation.user_id)
  return user_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YoumeUserLocation::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YoumeUserLocation::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.YoumeUserLocation.user_id)
}

// required double longitude = 2;
inline bool YoumeUserLocation::has_longitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YoumeUserLocation::set_has_longitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YoumeUserLocation::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YoumeUserLocation::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double YoumeUserLocation::longitude() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.YoumeUserLocation.longitude)
  return longitude_;
}
inline void YoumeUserLocation::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.YoumeUserLocation.longitude)
}

// required double latitude = 3;
inline bool YoumeUserLocation::has_latitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YoumeUserLocation::set_has_latitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YoumeUserLocation::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YoumeUserLocation::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double YoumeUserLocation::latitude() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.YoumeUserLocation.latitude)
  return latitude_;
}
inline void YoumeUserLocation::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.YoumeUserLocation.latitude)
}

// required string district_name = 4;
inline bool YoumeUserLocation::has_district_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YoumeUserLocation::set_has_district_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YoumeUserLocation::clear_has_district_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YoumeUserLocation::clear_district_name() {
  district_name_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_district_name();
}
inline const ::std::string& YoumeUserLocation::district_name() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.YoumeUserLocation.district_name)
  return district_name_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YoumeUserLocation::set_district_name(const ::std::string& value) {
  set_has_district_name();
  district_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.YoumeUserLocation.district_name)
}
inline void YoumeUserLocation::set_district_name(const char* value) {
  set_has_district_name();
  district_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.YoumeUserLocation.district_name)
}
inline void YoumeUserLocation::set_district_name(const char* value, size_t size) {
  set_has_district_name();
  district_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.YoumeUserLocation.district_name)
}
inline ::std::string* YoumeUserLocation::mutable_district_name() {
  set_has_district_name();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.YoumeUserLocation.district_name)
  return district_name_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YoumeUserLocation::release_district_name() {
  clear_has_district_name();
  return district_name_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YoumeUserLocation::set_allocated_district_name(::std::string* district_name) {
  if (district_name != NULL) {
    set_has_district_name();
  } else {
    clear_has_district_name();
  }
  district_name_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), district_name);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.YoumeUserLocation.district_name)
}

// required uint32 adcode = 5;
inline bool YoumeUserLocation::has_adcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YoumeUserLocation::set_has_adcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YoumeUserLocation::clear_has_adcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YoumeUserLocation::clear_adcode() {
  adcode_ = 0u;
  clear_has_adcode();
}
inline ::youmecommon::protobuf::uint32 YoumeUserLocation::adcode() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.YoumeUserLocation.adcode)
  return adcode_;
}
inline void YoumeUserLocation::set_adcode(::youmecommon::protobuf::uint32 value) {
  set_has_adcode();
  adcode_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.YoumeUserLocation.adcode)
}

// required .YOUMECommonProtocol.DistrictLevel district_level = 6;
inline bool YoumeUserLocation::has_district_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void YoumeUserLocation::set_has_district_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void YoumeUserLocation::clear_has_district_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void YoumeUserLocation::clear_district_level() {
  district_level_ = 1;
  clear_has_district_level();
}
inline ::YOUMECommonProtocol::DistrictLevel YoumeUserLocation::district_level() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.YoumeUserLocation.district_level)
  return static_cast< ::YOUMECommonProtocol::DistrictLevel >(district_level_);
}
inline void YoumeUserLocation::set_district_level(::YOUMECommonProtocol::DistrictLevel value) {
  assert(::YOUMECommonProtocol::DistrictLevel_IsValid(value));
  set_has_district_level();
  district_level_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.YoumeUserLocation.district_level)
}

// required double distance = 7;
inline bool YoumeUserLocation::has_distance() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void YoumeUserLocation::set_has_distance() {
  _has_bits_[0] |= 0x00000040u;
}
inline void YoumeUserLocation::clear_has_distance() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void YoumeUserLocation::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline double YoumeUserLocation::distance() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.YoumeUserLocation.distance)
  return distance_;
}
inline void YoumeUserLocation::set_distance(double value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.YoumeUserLocation.distance)
}

// -------------------------------------------------------------------

// GetNearbyUserRsp

// required int32 version = 1;
inline bool GetNearbyUserRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetNearbyUserRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetNearbyUserRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetNearbyUserRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetNearbyUserRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserRsp.version)
  return version_;
}
inline void GetNearbyUserRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserRsp.version)
}

// required int32 ret = 2;
inline bool GetNearbyUserRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetNearbyUserRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetNearbyUserRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetNearbyUserRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 GetNearbyUserRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserRsp.ret)
  return ret_;
}
inline void GetNearbyUserRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserRsp.ret)
}

// required uint32 people_cnt = 3;
inline bool GetNearbyUserRsp::has_people_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetNearbyUserRsp::set_has_people_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetNearbyUserRsp::clear_has_people_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetNearbyUserRsp::clear_people_cnt() {
  people_cnt_ = 0u;
  clear_has_people_cnt();
}
inline ::youmecommon::protobuf::uint32 GetNearbyUserRsp::people_cnt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserRsp.people_cnt)
  return people_cnt_;
}
inline void GetNearbyUserRsp::set_people_cnt(::youmecommon::protobuf::uint32 value) {
  set_has_people_cnt();
  people_cnt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetNearbyUserRsp.people_cnt)
}

// repeated .YOUMEServiceProtocol.YoumeUserLocation people_list = 4;
inline int GetNearbyUserRsp::people_list_size() const {
  return people_list_.size();
}
inline void GetNearbyUserRsp::clear_people_list() {
  people_list_.Clear();
}
inline const ::YOUMEServiceProtocol::YoumeUserLocation& GetNearbyUserRsp::people_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetNearbyUserRsp.people_list)
  return people_list_.Get(index);
}
inline ::YOUMEServiceProtocol::YoumeUserLocation* GetNearbyUserRsp::mutable_people_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetNearbyUserRsp.people_list)
  return people_list_.Mutable(index);
}
inline ::YOUMEServiceProtocol::YoumeUserLocation* GetNearbyUserRsp::add_people_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.GetNearbyUserRsp.people_list)
  return people_list_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::YoumeUserLocation >*
GetNearbyUserRsp::mutable_people_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.GetNearbyUserRsp.people_list)
  return &people_list_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::YoumeUserLocation >&
GetNearbyUserRsp::people_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.GetNearbyUserRsp.people_list)
  return people_list_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5fnearby_2eproto__INCLUDED
