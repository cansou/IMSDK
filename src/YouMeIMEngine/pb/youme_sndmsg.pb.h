// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_sndmsg.proto

#ifndef PROTOBUF_youme_5fsndmsg_2eproto__INCLUDED
#define PROTOBUF_youme_5fsndmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <YouMeCommon/pb/youme_comm.pb.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5fsndmsg_2eproto();
void protobuf_AssignDesc_youme_5fsndmsg_2eproto();
void protobuf_ShutdownFile_youme_5fsndmsg_2eproto();

class RecvType;
class RecvTypeRsp;
class RecverList;
class RoomMsgNotice;
class SendMsgReq;
class SendMsgRsp;
class SynMsgStatusReq;
class SynMsgStatusRsp;

// ===================================================================

class RecverList : public ::youmecommon::protobuf::MessageLite {
 public:
  RecverList();
  virtual ~RecverList();

  RecverList(const RecverList& from);

  inline RecverList& operator=(const RecverList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const RecverList& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RecverList* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RecverList* other);

  // implements Message ----------------------------------------------

  inline RecverList* New() const { return New(NULL); }

  RecverList* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const RecverList& from);
  void MergeFrom(const RecverList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RecverList* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes recver_id = 1;
  int recver_id_size() const;
  void clear_recver_id();
  static const int kRecverIdFieldNumber = 1;
  const ::std::string& recver_id(int index) const;
  ::std::string* mutable_recver_id(int index);
  void set_recver_id(int index, const ::std::string& value);
  void set_recver_id(int index, const char* value);
  void set_recver_id(int index, const void* value, size_t size);
  ::std::string* add_recver_id();
  void add_recver_id(const ::std::string& value);
  void add_recver_id(const char* value);
  void add_recver_id(const void* value, size_t size);
  const ::youmecommon::protobuf::RepeatedPtrField< ::std::string>& recver_id() const;
  ::youmecommon::protobuf::RepeatedPtrField< ::std::string>* mutable_recver_id();

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.RecverList)
 private:

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::RepeatedPtrField< ::std::string> recver_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fsndmsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fsndmsg_2eproto();

  void InitAsDefaultInstance();
  static RecverList* default_instance_;
};
// -------------------------------------------------------------------

class SendMsgReq : public ::youmecommon::protobuf::MessageLite {
 public:
  SendMsgReq();
  virtual ~SendMsgReq();

  SendMsgReq(const SendMsgReq& from);

  inline SendMsgReq& operator=(const SendMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const SendMsgReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SendMsgReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SendMsgReq* other);

  // implements Message ----------------------------------------------

  inline SendMsgReq* New() const { return New(NULL); }

  SendMsgReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const SendMsgReq& from);
  void MergeFrom(const SendMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendMsgReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 chat_type = 2;
  bool has_chat_type() const;
  void clear_chat_type();
  static const int kChatTypeFieldNumber = 2;
  ::youmecommon::protobuf::int32 chat_type() const;
  void set_chat_type(::youmecommon::protobuf::int32 value);

  // required bytes recv_id = 3;
  bool has_recv_id() const;
  void clear_recv_id();
  static const int kRecvIdFieldNumber = 3;
  const ::std::string& recv_id() const;
  void set_recv_id(const ::std::string& value);
  void set_recv_id(const char* value);
  void set_recv_id(const void* value, size_t size);
  ::std::string* mutable_recv_id();
  ::std::string* release_recv_id();
  void set_allocated_recv_id(::std::string* recv_id);

  // required bytes msg_content = 4;
  bool has_msg_content() const;
  void clear_msg_content();
  static const int kMsgContentFieldNumber = 4;
  const ::std::string& msg_content() const;
  void set_msg_content(const ::std::string& value);
  void set_msg_content(const char* value);
  void set_msg_content(const void* value, size_t size);
  ::std::string* mutable_msg_content();
  ::std::string* release_msg_content();
  void set_allocated_msg_content(::std::string* msg_content);

  // optional .YOUMECommonProtocol.MsgComment comment = 5;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 5;
  const ::YOUMECommonProtocol::MsgComment& comment() const;
  ::YOUMECommonProtocol::MsgComment* mutable_comment();
  ::YOUMECommonProtocol::MsgComment* release_comment();
  void set_allocated_comment(::YOUMECommonProtocol::MsgComment* comment);

  // optional uint32 tran_type = 6;
  bool has_tran_type() const;
  void clear_tran_type();
  static const int kTranTypeFieldNumber = 6;
  ::youmecommon::protobuf::uint32 tran_type() const;
  void set_tran_type(::youmecommon::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.SendMsgReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_chat_type();
  inline void clear_has_chat_type();
  inline void set_has_recv_id();
  inline void clear_has_recv_id();
  inline void set_has_msg_content();
  inline void clear_has_msg_content();
  inline void set_has_comment();
  inline void clear_has_comment();
  inline void set_has_tran_type();
  inline void clear_has_tran_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 chat_type_;
  ::youmecommon::protobuf::internal::ArenaStringPtr recv_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr msg_content_;
  ::YOUMECommonProtocol::MsgComment* comment_;
  ::youmecommon::protobuf::uint32 tran_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fsndmsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fsndmsg_2eproto();

  void InitAsDefaultInstance();
  static SendMsgReq* default_instance_;
};
// -------------------------------------------------------------------

class SendMsgRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  SendMsgRsp();
  virtual ~SendMsgRsp();

  SendMsgRsp(const SendMsgRsp& from);

  inline SendMsgRsp& operator=(const SendMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const SendMsgRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SendMsgRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SendMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SendMsgRsp* New() const { return New(NULL); }

  SendMsgRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const SendMsgRsp& from);
  void MergeFrom(const SendMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendMsgRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required uint64 svr_msgid = 3;
  bool has_svr_msgid() const;
  void clear_svr_msgid();
  static const int kSvrMsgidFieldNumber = 3;
  ::youmecommon::protobuf::uint64 svr_msgid() const;
  void set_svr_msgid(::youmecommon::protobuf::uint64 value);

  // optional bytes ret_info = 4;
  bool has_ret_info() const;
  void clear_ret_info();
  static const int kRetInfoFieldNumber = 4;
  const ::std::string& ret_info() const;
  void set_ret_info(const ::std::string& value);
  void set_ret_info(const char* value);
  void set_ret_info(const void* value, size_t size);
  ::std::string* mutable_ret_info();
  ::std::string* release_ret_info();
  void set_allocated_ret_info(::std::string* ret_info);

  // optional uint64 expire_time = 5;
  bool has_expire_time() const;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 5;
  ::youmecommon::protobuf::uint64 expire_time() const;
  void set_expire_time(::youmecommon::protobuf::uint64 value);

  // optional bool forbid_room = 6;
  bool has_forbid_room() const;
  void clear_forbid_room();
  static const int kForbidRoomFieldNumber = 6;
  bool forbid_room() const;
  void set_forbid_room(bool value);

  // optional int32 reason_type = 7;
  bool has_reason_type() const;
  void clear_reason_type();
  static const int kReasonTypeFieldNumber = 7;
  ::youmecommon::protobuf::int32 reason_type() const;
  void set_reason_type(::youmecommon::protobuf::int32 value);

  // optional string reason = 8;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 8;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.SendMsgRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_svr_msgid();
  inline void clear_has_svr_msgid();
  inline void set_has_ret_info();
  inline void clear_has_ret_info();
  inline void set_has_expire_time();
  inline void clear_has_expire_time();
  inline void set_has_forbid_room();
  inline void clear_has_forbid_room();
  inline void set_has_reason_type();
  inline void clear_has_reason_type();
  inline void set_has_reason();
  inline void clear_has_reason();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::uint64 svr_msgid_;
  ::youmecommon::protobuf::internal::ArenaStringPtr ret_info_;
  ::youmecommon::protobuf::uint64 expire_time_;
  bool forbid_room_;
  ::youmecommon::protobuf::int32 reason_type_;
  ::youmecommon::protobuf::internal::ArenaStringPtr reason_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fsndmsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fsndmsg_2eproto();

  void InitAsDefaultInstance();
  static SendMsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class RoomMsgNotice : public ::youmecommon::protobuf::MessageLite {
 public:
  RoomMsgNotice();
  virtual ~RoomMsgNotice();

  RoomMsgNotice(const RoomMsgNotice& from);

  inline RoomMsgNotice& operator=(const RoomMsgNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const RoomMsgNotice& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RoomMsgNotice* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RoomMsgNotice* other);

  // implements Message ----------------------------------------------

  inline RoomMsgNotice* New() const { return New(NULL); }

  RoomMsgNotice* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const RoomMsgNotice& from);
  void MergeFrom(const RoomMsgNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomMsgNotice* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes sender_id = 2;
  bool has_sender_id() const;
  void clear_sender_id();
  static const int kSenderIdFieldNumber = 2;
  const ::std::string& sender_id() const;
  void set_sender_id(const ::std::string& value);
  void set_sender_id(const char* value);
  void set_sender_id(const void* value, size_t size);
  ::std::string* mutable_sender_id();
  ::std::string* release_sender_id();
  void set_allocated_sender_id(::std::string* sender_id);

  // required bytes room_name = 3;
  bool has_room_name() const;
  void clear_room_name();
  static const int kRoomNameFieldNumber = 3;
  const ::std::string& room_name() const;
  void set_room_name(const ::std::string& value);
  void set_room_name(const char* value);
  void set_room_name(const void* value, size_t size);
  ::std::string* mutable_room_name();
  ::std::string* release_room_name();
  void set_allocated_room_name(::std::string* room_name);

  // required int32 notice_property = 4;
  bool has_notice_property() const;
  void clear_notice_property();
  static const int kNoticePropertyFieldNumber = 4;
  ::youmecommon::protobuf::int32 notice_property() const;
  void set_notice_property(::youmecommon::protobuf::int32 value);

  // optional bytes msg_content = 5;
  bool has_msg_content() const;
  void clear_msg_content();
  static const int kMsgContentFieldNumber = 5;
  const ::std::string& msg_content() const;
  void set_msg_content(const ::std::string& value);
  void set_msg_content(const char* value);
  void set_msg_content(const void* value, size_t size);
  ::std::string* mutable_msg_content();
  ::std::string* release_msg_content();
  void set_allocated_msg_content(::std::string* msg_content);

  // optional bool check_mask = 6;
  bool has_check_mask() const;
  void clear_check_mask();
  static const int kCheckMaskFieldNumber = 6;
  bool check_mask() const;
  void set_check_mask(bool value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.RoomMsgNotice)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_sender_id();
  inline void clear_has_sender_id();
  inline void set_has_room_name();
  inline void clear_has_room_name();
  inline void set_has_notice_property();
  inline void clear_has_notice_property();
  inline void set_has_msg_content();
  inline void clear_has_msg_content();
  inline void set_has_check_mask();
  inline void clear_has_check_mask();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr sender_id_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 notice_property_;
  ::youmecommon::protobuf::internal::ArenaStringPtr room_name_;
  ::youmecommon::protobuf::internal::ArenaStringPtr msg_content_;
  bool check_mask_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fsndmsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fsndmsg_2eproto();

  void InitAsDefaultInstance();
  static RoomMsgNotice* default_instance_;
};
// -------------------------------------------------------------------

class SynMsgStatusReq : public ::youmecommon::protobuf::MessageLite {
 public:
  SynMsgStatusReq();
  virtual ~SynMsgStatusReq();

  SynMsgStatusReq(const SynMsgStatusReq& from);

  inline SynMsgStatusReq& operator=(const SynMsgStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const SynMsgStatusReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SynMsgStatusReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SynMsgStatusReq* other);

  // implements Message ----------------------------------------------

  inline SynMsgStatusReq* New() const { return New(NULL); }

  SynMsgStatusReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const SynMsgStatusReq& from);
  void MergeFrom(const SynMsgStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SynMsgStatusReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // repeated .YOUMEServiceProtocol.RecvType recv_list = 2;
  int recv_list_size() const;
  void clear_recv_list();
  static const int kRecvListFieldNumber = 2;
  const ::YOUMEServiceProtocol::RecvType& recv_list(int index) const;
  ::YOUMEServiceProtocol::RecvType* mutable_recv_list(int index);
  ::YOUMEServiceProtocol::RecvType* add_recv_list();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RecvType >*
      mutable_recv_list();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RecvType >&
      recv_list() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.SynMsgStatusReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RecvType > recv_list_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fsndmsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fsndmsg_2eproto();

  void InitAsDefaultInstance();
  static SynMsgStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class RecvType : public ::youmecommon::protobuf::MessageLite {
 public:
  RecvType();
  virtual ~RecvType();

  RecvType(const RecvType& from);

  inline RecvType& operator=(const RecvType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const RecvType& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RecvType* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RecvType* other);

  // implements Message ----------------------------------------------

  inline RecvType* New() const { return New(NULL); }

  RecvType* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const RecvType& from);
  void MergeFrom(const RecvType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RecvType* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes recv_id = 1;
  bool has_recv_id() const;
  void clear_recv_id();
  static const int kRecvIdFieldNumber = 1;
  const ::std::string& recv_id() const;
  void set_recv_id(const ::std::string& value);
  void set_recv_id(const char* value);
  void set_recv_id(const void* value, size_t size);
  ::std::string* mutable_recv_id();
  ::std::string* release_recv_id();
  void set_allocated_recv_id(::std::string* recv_id);

  // required int32 chat_type = 2;
  bool has_chat_type() const;
  void clear_chat_type();
  static const int kChatTypeFieldNumber = 2;
  ::youmecommon::protobuf::int32 chat_type() const;
  void set_chat_type(::youmecommon::protobuf::int32 value);

  // optional uint64 msg_id = 3;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  ::youmecommon::protobuf::uint64 msg_id() const;
  void set_msg_id(::youmecommon::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.RecvType)
 private:
  inline void set_has_recv_id();
  inline void clear_has_recv_id();
  inline void set_has_chat_type();
  inline void clear_has_chat_type();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr recv_id_;
  ::youmecommon::protobuf::uint64 msg_id_;
  ::youmecommon::protobuf::int32 chat_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fsndmsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fsndmsg_2eproto();

  void InitAsDefaultInstance();
  static RecvType* default_instance_;
};
// -------------------------------------------------------------------

class SynMsgStatusRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  SynMsgStatusRsp();
  virtual ~SynMsgStatusRsp();

  SynMsgStatusRsp(const SynMsgStatusRsp& from);

  inline SynMsgStatusRsp& operator=(const SynMsgStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const SynMsgStatusRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SynMsgStatusRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SynMsgStatusRsp* other);

  // implements Message ----------------------------------------------

  inline SynMsgStatusRsp* New() const { return New(NULL); }

  SynMsgStatusRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const SynMsgStatusRsp& from);
  void MergeFrom(const SynMsgStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SynMsgStatusRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // repeated .YOUMEServiceProtocol.RecvTypeRsp recv_rsp_list = 3;
  int recv_rsp_list_size() const;
  void clear_recv_rsp_list();
  static const int kRecvRspListFieldNumber = 3;
  const ::YOUMEServiceProtocol::RecvTypeRsp& recv_rsp_list(int index) const;
  ::YOUMEServiceProtocol::RecvTypeRsp* mutable_recv_rsp_list(int index);
  ::YOUMEServiceProtocol::RecvTypeRsp* add_recv_rsp_list();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RecvTypeRsp >*
      mutable_recv_rsp_list();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RecvTypeRsp >&
      recv_rsp_list() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.SynMsgStatusRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RecvTypeRsp > recv_rsp_list_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fsndmsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fsndmsg_2eproto();

  void InitAsDefaultInstance();
  static SynMsgStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class RecvTypeRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  RecvTypeRsp();
  virtual ~RecvTypeRsp();

  RecvTypeRsp(const RecvTypeRsp& from);

  inline RecvTypeRsp& operator=(const RecvTypeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const RecvTypeRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RecvTypeRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RecvTypeRsp* other);

  // implements Message ----------------------------------------------

  inline RecvTypeRsp* New() const { return New(NULL); }

  RecvTypeRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const RecvTypeRsp& from);
  void MergeFrom(const RecvTypeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RecvTypeRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes recv_id = 1;
  bool has_recv_id() const;
  void clear_recv_id();
  static const int kRecvIdFieldNumber = 1;
  const ::std::string& recv_id() const;
  void set_recv_id(const ::std::string& value);
  void set_recv_id(const char* value);
  void set_recv_id(const void* value, size_t size);
  ::std::string* mutable_recv_id();
  ::std::string* release_recv_id();
  void set_allocated_recv_id(::std::string* recv_id);

  // required int32 chat_type = 2;
  bool has_chat_type() const;
  void clear_chat_type();
  static const int kChatTypeFieldNumber = 2;
  ::youmecommon::protobuf::int32 chat_type() const;
  void set_chat_type(::youmecommon::protobuf::int32 value);

  // required uint64 msg_id = 3;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  ::youmecommon::protobuf::uint64 msg_id() const;
  void set_msg_id(::youmecommon::protobuf::uint64 value);

  // optional int32 un_read_num = 4;
  bool has_un_read_num() const;
  void clear_un_read_num();
  static const int kUnReadNumFieldNumber = 4;
  ::youmecommon::protobuf::int32 un_read_num() const;
  void set_un_read_num(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.RecvTypeRsp)
 private:
  inline void set_has_recv_id();
  inline void clear_has_recv_id();
  inline void set_has_chat_type();
  inline void clear_has_chat_type();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_un_read_num();
  inline void clear_has_un_read_num();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr recv_id_;
  ::youmecommon::protobuf::uint64 msg_id_;
  ::youmecommon::protobuf::int32 chat_type_;
  ::youmecommon::protobuf::int32 un_read_num_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fsndmsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fsndmsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fsndmsg_2eproto();

  void InitAsDefaultInstance();
  static RecvTypeRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RecverList

// repeated bytes recver_id = 1;
inline int RecverList::recver_id_size() const {
  return recver_id_.size();
}
inline void RecverList::clear_recver_id() {
  recver_id_.Clear();
}
inline const ::std::string& RecverList::recver_id(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RecverList.recver_id)
  return recver_id_.Get(index);
}
inline ::std::string* RecverList::mutable_recver_id(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RecverList.recver_id)
  return recver_id_.Mutable(index);
}
inline void RecverList::set_recver_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RecverList.recver_id)
  recver_id_.Mutable(index)->assign(value);
}
inline void RecverList::set_recver_id(int index, const char* value) {
  recver_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RecverList.recver_id)
}
inline void RecverList::set_recver_id(int index, const void* value, size_t size) {
  recver_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RecverList.recver_id)
}
inline ::std::string* RecverList::add_recver_id() {
  return recver_id_.Add();
}
inline void RecverList::add_recver_id(const ::std::string& value) {
  recver_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.RecverList.recver_id)
}
inline void RecverList::add_recver_id(const char* value) {
  recver_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:YOUMEServiceProtocol.RecverList.recver_id)
}
inline void RecverList::add_recver_id(const void* value, size_t size) {
  recver_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:YOUMEServiceProtocol.RecverList.recver_id)
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::std::string>&
RecverList::recver_id() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.RecverList.recver_id)
  return recver_id_;
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::std::string>*
RecverList::mutable_recver_id() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.RecverList.recver_id)
  return &recver_id_;
}

// -------------------------------------------------------------------

// SendMsgReq

// required int32 version = 1;
inline bool SendMsgReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMsgReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMsgReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMsgReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 SendMsgReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgReq.version)
  return version_;
}
inline void SendMsgReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgReq.version)
}

// required int32 chat_type = 2;
inline bool SendMsgReq::has_chat_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMsgReq::set_has_chat_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMsgReq::clear_has_chat_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMsgReq::clear_chat_type() {
  chat_type_ = 0;
  clear_has_chat_type();
}
inline ::youmecommon::protobuf::int32 SendMsgReq::chat_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgReq.chat_type)
  return chat_type_;
}
inline void SendMsgReq::set_chat_type(::youmecommon::protobuf::int32 value) {
  set_has_chat_type();
  chat_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgReq.chat_type)
}

// required bytes recv_id = 3;
inline bool SendMsgReq::has_recv_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMsgReq::set_has_recv_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMsgReq::clear_has_recv_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMsgReq::clear_recv_id() {
  recv_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recv_id();
}
inline const ::std::string& SendMsgReq::recv_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgReq.recv_id)
  return recv_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_recv_id(const ::std::string& value) {
  set_has_recv_id();
  recv_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgReq.recv_id)
}
inline void SendMsgReq::set_recv_id(const char* value) {
  set_has_recv_id();
  recv_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.SendMsgReq.recv_id)
}
inline void SendMsgReq::set_recv_id(const void* value, size_t size) {
  set_has_recv_id();
  recv_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.SendMsgReq.recv_id)
}
inline ::std::string* SendMsgReq::mutable_recv_id() {
  set_has_recv_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.SendMsgReq.recv_id)
  return recv_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_recv_id() {
  clear_has_recv_id();
  return recv_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_recv_id(::std::string* recv_id) {
  if (recv_id != NULL) {
    set_has_recv_id();
  } else {
    clear_has_recv_id();
  }
  recv_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), recv_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.SendMsgReq.recv_id)
}

// required bytes msg_content = 4;
inline bool SendMsgReq::has_msg_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendMsgReq::set_has_msg_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendMsgReq::clear_has_msg_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendMsgReq::clear_msg_content() {
  msg_content_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_content();
}
inline const ::std::string& SendMsgReq::msg_content() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgReq.msg_content)
  return msg_content_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_msg_content(const ::std::string& value) {
  set_has_msg_content();
  msg_content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgReq.msg_content)
}
inline void SendMsgReq::set_msg_content(const char* value) {
  set_has_msg_content();
  msg_content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.SendMsgReq.msg_content)
}
inline void SendMsgReq::set_msg_content(const void* value, size_t size) {
  set_has_msg_content();
  msg_content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.SendMsgReq.msg_content)
}
inline ::std::string* SendMsgReq::mutable_msg_content() {
  set_has_msg_content();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.SendMsgReq.msg_content)
  return msg_content_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_msg_content() {
  clear_has_msg_content();
  return msg_content_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_msg_content(::std::string* msg_content) {
  if (msg_content != NULL) {
    set_has_msg_content();
  } else {
    clear_has_msg_content();
  }
  msg_content_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), msg_content);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.SendMsgReq.msg_content)
}

// optional .YOUMECommonProtocol.MsgComment comment = 5;
inline bool SendMsgReq::has_comment() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendMsgReq::set_has_comment() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendMsgReq::clear_has_comment() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendMsgReq::clear_comment() {
  if (comment_ != NULL) comment_->::YOUMECommonProtocol::MsgComment::Clear();
  clear_has_comment();
}
inline const ::YOUMECommonProtocol::MsgComment& SendMsgReq::comment() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgReq.comment)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return comment_ != NULL ? *comment_ : *default_instance().comment_;
#else
  return comment_ != NULL ? *comment_ : *default_instance_->comment_;
#endif
}
inline ::YOUMECommonProtocol::MsgComment* SendMsgReq::mutable_comment() {
  set_has_comment();
  if (comment_ == NULL) {
    comment_ = new ::YOUMECommonProtocol::MsgComment;
  }
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.SendMsgReq.comment)
  return comment_;
}
inline ::YOUMECommonProtocol::MsgComment* SendMsgReq::release_comment() {
  clear_has_comment();
  ::YOUMECommonProtocol::MsgComment* temp = comment_;
  comment_ = NULL;
  return temp;
}
inline void SendMsgReq::set_allocated_comment(::YOUMECommonProtocol::MsgComment* comment) {
  delete comment_;
  comment_ = comment;
  if (comment) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.SendMsgReq.comment)
}

// optional uint32 tran_type = 6;
inline bool SendMsgReq::has_tran_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendMsgReq::set_has_tran_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendMsgReq::clear_has_tran_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendMsgReq::clear_tran_type() {
  tran_type_ = 0u;
  clear_has_tran_type();
}
inline ::youmecommon::protobuf::uint32 SendMsgReq::tran_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgReq.tran_type)
  return tran_type_;
}
inline void SendMsgReq::set_tran_type(::youmecommon::protobuf::uint32 value) {
  set_has_tran_type();
  tran_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgReq.tran_type)
}

// -------------------------------------------------------------------

// SendMsgRsp

// required int32 version = 1;
inline bool SendMsgRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMsgRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMsgRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMsgRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 SendMsgRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgRsp.version)
  return version_;
}
inline void SendMsgRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgRsp.version)
}

// required int32 ret = 2;
inline bool SendMsgRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMsgRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMsgRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMsgRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 SendMsgRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgRsp.ret)
  return ret_;
}
inline void SendMsgRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgRsp.ret)
}

// required uint64 svr_msgid = 3;
inline bool SendMsgRsp::has_svr_msgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMsgRsp::set_has_svr_msgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMsgRsp::clear_has_svr_msgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMsgRsp::clear_svr_msgid() {
  svr_msgid_ = GOOGLE_ULONGLONG(0);
  clear_has_svr_msgid();
}
inline ::youmecommon::protobuf::uint64 SendMsgRsp::svr_msgid() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgRsp.svr_msgid)
  return svr_msgid_;
}
inline void SendMsgRsp::set_svr_msgid(::youmecommon::protobuf::uint64 value) {
  set_has_svr_msgid();
  svr_msgid_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgRsp.svr_msgid)
}

// optional bytes ret_info = 4;
inline bool SendMsgRsp::has_ret_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendMsgRsp::set_has_ret_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendMsgRsp::clear_has_ret_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendMsgRsp::clear_ret_info() {
  ret_info_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ret_info();
}
inline const ::std::string& SendMsgRsp::ret_info() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgRsp.ret_info)
  return ret_info_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgRsp::set_ret_info(const ::std::string& value) {
  set_has_ret_info();
  ret_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgRsp.ret_info)
}
inline void SendMsgRsp::set_ret_info(const char* value) {
  set_has_ret_info();
  ret_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.SendMsgRsp.ret_info)
}
inline void SendMsgRsp::set_ret_info(const void* value, size_t size) {
  set_has_ret_info();
  ret_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.SendMsgRsp.ret_info)
}
inline ::std::string* SendMsgRsp::mutable_ret_info() {
  set_has_ret_info();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.SendMsgRsp.ret_info)
  return ret_info_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgRsp::release_ret_info() {
  clear_has_ret_info();
  return ret_info_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgRsp::set_allocated_ret_info(::std::string* ret_info) {
  if (ret_info != NULL) {
    set_has_ret_info();
  } else {
    clear_has_ret_info();
  }
  ret_info_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ret_info);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.SendMsgRsp.ret_info)
}

// optional uint64 expire_time = 5;
inline bool SendMsgRsp::has_expire_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendMsgRsp::set_has_expire_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendMsgRsp::clear_has_expire_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendMsgRsp::clear_expire_time() {
  expire_time_ = GOOGLE_ULONGLONG(0);
  clear_has_expire_time();
}
inline ::youmecommon::protobuf::uint64 SendMsgRsp::expire_time() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgRsp.expire_time)
  return expire_time_;
}
inline void SendMsgRsp::set_expire_time(::youmecommon::protobuf::uint64 value) {
  set_has_expire_time();
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgRsp.expire_time)
}

// optional bool forbid_room = 6;
inline bool SendMsgRsp::has_forbid_room() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendMsgRsp::set_has_forbid_room() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendMsgRsp::clear_has_forbid_room() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendMsgRsp::clear_forbid_room() {
  forbid_room_ = false;
  clear_has_forbid_room();
}
inline bool SendMsgRsp::forbid_room() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgRsp.forbid_room)
  return forbid_room_;
}
inline void SendMsgRsp::set_forbid_room(bool value) {
  set_has_forbid_room();
  forbid_room_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgRsp.forbid_room)
}

// optional int32 reason_type = 7;
inline bool SendMsgRsp::has_reason_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SendMsgRsp::set_has_reason_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SendMsgRsp::clear_has_reason_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SendMsgRsp::clear_reason_type() {
  reason_type_ = 0;
  clear_has_reason_type();
}
inline ::youmecommon::protobuf::int32 SendMsgRsp::reason_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgRsp.reason_type)
  return reason_type_;
}
inline void SendMsgRsp::set_reason_type(::youmecommon::protobuf::int32 value) {
  set_has_reason_type();
  reason_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgRsp.reason_type)
}

// optional string reason = 8;
inline bool SendMsgRsp::has_reason() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SendMsgRsp::set_has_reason() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SendMsgRsp::clear_has_reason() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SendMsgRsp::clear_reason() {
  reason_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
inline const ::std::string& SendMsgRsp::reason() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SendMsgRsp.reason)
  return reason_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgRsp::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SendMsgRsp.reason)
}
inline void SendMsgRsp::set_reason(const char* value) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.SendMsgRsp.reason)
}
inline void SendMsgRsp::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.SendMsgRsp.reason)
}
inline ::std::string* SendMsgRsp::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.SendMsgRsp.reason)
  return reason_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgRsp::release_reason() {
  clear_has_reason();
  return reason_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgRsp::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.SendMsgRsp.reason)
}

// -------------------------------------------------------------------

// RoomMsgNotice

// required int32 version = 1;
inline bool RoomMsgNotice::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomMsgNotice::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomMsgNotice::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomMsgNotice::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 RoomMsgNotice::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RoomMsgNotice.version)
  return version_;
}
inline void RoomMsgNotice::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RoomMsgNotice.version)
}

// required bytes sender_id = 2;
inline bool RoomMsgNotice::has_sender_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomMsgNotice::set_has_sender_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomMsgNotice::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomMsgNotice::clear_sender_id() {
  sender_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender_id();
}
inline const ::std::string& RoomMsgNotice::sender_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RoomMsgNotice.sender_id)
  return sender_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomMsgNotice::set_sender_id(const ::std::string& value) {
  set_has_sender_id();
  sender_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RoomMsgNotice.sender_id)
}
inline void RoomMsgNotice::set_sender_id(const char* value) {
  set_has_sender_id();
  sender_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RoomMsgNotice.sender_id)
}
inline void RoomMsgNotice::set_sender_id(const void* value, size_t size) {
  set_has_sender_id();
  sender_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RoomMsgNotice.sender_id)
}
inline ::std::string* RoomMsgNotice::mutable_sender_id() {
  set_has_sender_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RoomMsgNotice.sender_id)
  return sender_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomMsgNotice::release_sender_id() {
  clear_has_sender_id();
  return sender_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomMsgNotice::set_allocated_sender_id(::std::string* sender_id) {
  if (sender_id != NULL) {
    set_has_sender_id();
  } else {
    clear_has_sender_id();
  }
  sender_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), sender_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RoomMsgNotice.sender_id)
}

// required bytes room_name = 3;
inline bool RoomMsgNotice::has_room_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomMsgNotice::set_has_room_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomMsgNotice::clear_has_room_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomMsgNotice::clear_room_name() {
  room_name_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_name();
}
inline const ::std::string& RoomMsgNotice::room_name() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RoomMsgNotice.room_name)
  return room_name_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomMsgNotice::set_room_name(const ::std::string& value) {
  set_has_room_name();
  room_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RoomMsgNotice.room_name)
}
inline void RoomMsgNotice::set_room_name(const char* value) {
  set_has_room_name();
  room_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RoomMsgNotice.room_name)
}
inline void RoomMsgNotice::set_room_name(const void* value, size_t size) {
  set_has_room_name();
  room_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RoomMsgNotice.room_name)
}
inline ::std::string* RoomMsgNotice::mutable_room_name() {
  set_has_room_name();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RoomMsgNotice.room_name)
  return room_name_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomMsgNotice::release_room_name() {
  clear_has_room_name();
  return room_name_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomMsgNotice::set_allocated_room_name(::std::string* room_name) {
  if (room_name != NULL) {
    set_has_room_name();
  } else {
    clear_has_room_name();
  }
  room_name_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), room_name);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RoomMsgNotice.room_name)
}

// required int32 notice_property = 4;
inline bool RoomMsgNotice::has_notice_property() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomMsgNotice::set_has_notice_property() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomMsgNotice::clear_has_notice_property() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomMsgNotice::clear_notice_property() {
  notice_property_ = 0;
  clear_has_notice_property();
}
inline ::youmecommon::protobuf::int32 RoomMsgNotice::notice_property() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RoomMsgNotice.notice_property)
  return notice_property_;
}
inline void RoomMsgNotice::set_notice_property(::youmecommon::protobuf::int32 value) {
  set_has_notice_property();
  notice_property_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RoomMsgNotice.notice_property)
}

// optional bytes msg_content = 5;
inline bool RoomMsgNotice::has_msg_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoomMsgNotice::set_has_msg_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoomMsgNotice::clear_has_msg_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoomMsgNotice::clear_msg_content() {
  msg_content_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_content();
}
inline const ::std::string& RoomMsgNotice::msg_content() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RoomMsgNotice.msg_content)
  return msg_content_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomMsgNotice::set_msg_content(const ::std::string& value) {
  set_has_msg_content();
  msg_content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RoomMsgNotice.msg_content)
}
inline void RoomMsgNotice::set_msg_content(const char* value) {
  set_has_msg_content();
  msg_content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RoomMsgNotice.msg_content)
}
inline void RoomMsgNotice::set_msg_content(const void* value, size_t size) {
  set_has_msg_content();
  msg_content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RoomMsgNotice.msg_content)
}
inline ::std::string* RoomMsgNotice::mutable_msg_content() {
  set_has_msg_content();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RoomMsgNotice.msg_content)
  return msg_content_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomMsgNotice::release_msg_content() {
  clear_has_msg_content();
  return msg_content_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomMsgNotice::set_allocated_msg_content(::std::string* msg_content) {
  if (msg_content != NULL) {
    set_has_msg_content();
  } else {
    clear_has_msg_content();
  }
  msg_content_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), msg_content);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RoomMsgNotice.msg_content)
}

// optional bool check_mask = 6;
inline bool RoomMsgNotice::has_check_mask() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoomMsgNotice::set_has_check_mask() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoomMsgNotice::clear_has_check_mask() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoomMsgNotice::clear_check_mask() {
  check_mask_ = false;
  clear_has_check_mask();
}
inline bool RoomMsgNotice::check_mask() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RoomMsgNotice.check_mask)
  return check_mask_;
}
inline void RoomMsgNotice::set_check_mask(bool value) {
  set_has_check_mask();
  check_mask_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RoomMsgNotice.check_mask)
}

// -------------------------------------------------------------------

// SynMsgStatusReq

// required int32 version = 1;
inline bool SynMsgStatusReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynMsgStatusReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynMsgStatusReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynMsgStatusReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 SynMsgStatusReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SynMsgStatusReq.version)
  return version_;
}
inline void SynMsgStatusReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SynMsgStatusReq.version)
}

// repeated .YOUMEServiceProtocol.RecvType recv_list = 2;
inline int SynMsgStatusReq::recv_list_size() const {
  return recv_list_.size();
}
inline void SynMsgStatusReq::clear_recv_list() {
  recv_list_.Clear();
}
inline const ::YOUMEServiceProtocol::RecvType& SynMsgStatusReq::recv_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SynMsgStatusReq.recv_list)
  return recv_list_.Get(index);
}
inline ::YOUMEServiceProtocol::RecvType* SynMsgStatusReq::mutable_recv_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.SynMsgStatusReq.recv_list)
  return recv_list_.Mutable(index);
}
inline ::YOUMEServiceProtocol::RecvType* SynMsgStatusReq::add_recv_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.SynMsgStatusReq.recv_list)
  return recv_list_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RecvType >*
SynMsgStatusReq::mutable_recv_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.SynMsgStatusReq.recv_list)
  return &recv_list_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RecvType >&
SynMsgStatusReq::recv_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.SynMsgStatusReq.recv_list)
  return recv_list_;
}

// -------------------------------------------------------------------

// RecvType

// required bytes recv_id = 1;
inline bool RecvType::has_recv_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvType::set_has_recv_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvType::clear_has_recv_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvType::clear_recv_id() {
  recv_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recv_id();
}
inline const ::std::string& RecvType::recv_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RecvType.recv_id)
  return recv_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvType::set_recv_id(const ::std::string& value) {
  set_has_recv_id();
  recv_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RecvType.recv_id)
}
inline void RecvType::set_recv_id(const char* value) {
  set_has_recv_id();
  recv_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RecvType.recv_id)
}
inline void RecvType::set_recv_id(const void* value, size_t size) {
  set_has_recv_id();
  recv_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RecvType.recv_id)
}
inline ::std::string* RecvType::mutable_recv_id() {
  set_has_recv_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RecvType.recv_id)
  return recv_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecvType::release_recv_id() {
  clear_has_recv_id();
  return recv_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvType::set_allocated_recv_id(::std::string* recv_id) {
  if (recv_id != NULL) {
    set_has_recv_id();
  } else {
    clear_has_recv_id();
  }
  recv_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), recv_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RecvType.recv_id)
}

// required int32 chat_type = 2;
inline bool RecvType::has_chat_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecvType::set_has_chat_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecvType::clear_has_chat_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecvType::clear_chat_type() {
  chat_type_ = 0;
  clear_has_chat_type();
}
inline ::youmecommon::protobuf::int32 RecvType::chat_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RecvType.chat_type)
  return chat_type_;
}
inline void RecvType::set_chat_type(::youmecommon::protobuf::int32 value) {
  set_has_chat_type();
  chat_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RecvType.chat_type)
}

// optional uint64 msg_id = 3;
inline bool RecvType::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecvType::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecvType::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecvType::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_id();
}
inline ::youmecommon::protobuf::uint64 RecvType::msg_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RecvType.msg_id)
  return msg_id_;
}
inline void RecvType::set_msg_id(::youmecommon::protobuf::uint64 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RecvType.msg_id)
}

// -------------------------------------------------------------------

// SynMsgStatusRsp

// required int32 version = 1;
inline bool SynMsgStatusRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynMsgStatusRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynMsgStatusRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynMsgStatusRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 SynMsgStatusRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SynMsgStatusRsp.version)
  return version_;
}
inline void SynMsgStatusRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SynMsgStatusRsp.version)
}

// required int32 ret = 2;
inline bool SynMsgStatusRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SynMsgStatusRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SynMsgStatusRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SynMsgStatusRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 SynMsgStatusRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SynMsgStatusRsp.ret)
  return ret_;
}
inline void SynMsgStatusRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SynMsgStatusRsp.ret)
}

// repeated .YOUMEServiceProtocol.RecvTypeRsp recv_rsp_list = 3;
inline int SynMsgStatusRsp::recv_rsp_list_size() const {
  return recv_rsp_list_.size();
}
inline void SynMsgStatusRsp::clear_recv_rsp_list() {
  recv_rsp_list_.Clear();
}
inline const ::YOUMEServiceProtocol::RecvTypeRsp& SynMsgStatusRsp::recv_rsp_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SynMsgStatusRsp.recv_rsp_list)
  return recv_rsp_list_.Get(index);
}
inline ::YOUMEServiceProtocol::RecvTypeRsp* SynMsgStatusRsp::mutable_recv_rsp_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.SynMsgStatusRsp.recv_rsp_list)
  return recv_rsp_list_.Mutable(index);
}
inline ::YOUMEServiceProtocol::RecvTypeRsp* SynMsgStatusRsp::add_recv_rsp_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.SynMsgStatusRsp.recv_rsp_list)
  return recv_rsp_list_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RecvTypeRsp >*
SynMsgStatusRsp::mutable_recv_rsp_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.SynMsgStatusRsp.recv_rsp_list)
  return &recv_rsp_list_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RecvTypeRsp >&
SynMsgStatusRsp::recv_rsp_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.SynMsgStatusRsp.recv_rsp_list)
  return recv_rsp_list_;
}

// -------------------------------------------------------------------

// RecvTypeRsp

// required bytes recv_id = 1;
inline bool RecvTypeRsp::has_recv_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvTypeRsp::set_has_recv_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvTypeRsp::clear_has_recv_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvTypeRsp::clear_recv_id() {
  recv_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recv_id();
}
inline const ::std::string& RecvTypeRsp::recv_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RecvTypeRsp.recv_id)
  return recv_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvTypeRsp::set_recv_id(const ::std::string& value) {
  set_has_recv_id();
  recv_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RecvTypeRsp.recv_id)
}
inline void RecvTypeRsp::set_recv_id(const char* value) {
  set_has_recv_id();
  recv_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RecvTypeRsp.recv_id)
}
inline void RecvTypeRsp::set_recv_id(const void* value, size_t size) {
  set_has_recv_id();
  recv_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RecvTypeRsp.recv_id)
}
inline ::std::string* RecvTypeRsp::mutable_recv_id() {
  set_has_recv_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RecvTypeRsp.recv_id)
  return recv_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecvTypeRsp::release_recv_id() {
  clear_has_recv_id();
  return recv_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvTypeRsp::set_allocated_recv_id(::std::string* recv_id) {
  if (recv_id != NULL) {
    set_has_recv_id();
  } else {
    clear_has_recv_id();
  }
  recv_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), recv_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RecvTypeRsp.recv_id)
}

// required int32 chat_type = 2;
inline bool RecvTypeRsp::has_chat_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecvTypeRsp::set_has_chat_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecvTypeRsp::clear_has_chat_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecvTypeRsp::clear_chat_type() {
  chat_type_ = 0;
  clear_has_chat_type();
}
inline ::youmecommon::protobuf::int32 RecvTypeRsp::chat_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RecvTypeRsp.chat_type)
  return chat_type_;
}
inline void RecvTypeRsp::set_chat_type(::youmecommon::protobuf::int32 value) {
  set_has_chat_type();
  chat_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RecvTypeRsp.chat_type)
}

// required uint64 msg_id = 3;
inline bool RecvTypeRsp::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecvTypeRsp::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecvTypeRsp::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecvTypeRsp::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_id();
}
inline ::youmecommon::protobuf::uint64 RecvTypeRsp::msg_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RecvTypeRsp.msg_id)
  return msg_id_;
}
inline void RecvTypeRsp::set_msg_id(::youmecommon::protobuf::uint64 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RecvTypeRsp.msg_id)
}

// optional int32 un_read_num = 4;
inline bool RecvTypeRsp::has_un_read_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RecvTypeRsp::set_has_un_read_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RecvTypeRsp::clear_has_un_read_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RecvTypeRsp::clear_un_read_num() {
  un_read_num_ = 0;
  clear_has_un_read_num();
}
inline ::youmecommon::protobuf::int32 RecvTypeRsp::un_read_num() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RecvTypeRsp.un_read_num)
  return un_read_num_;
}
inline void RecvTypeRsp::set_un_read_num(::youmecommon::protobuf::int32 value) {
  set_has_un_read_num();
  un_read_num_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RecvTypeRsp.un_read_num)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5fsndmsg_2eproto__INCLUDED
