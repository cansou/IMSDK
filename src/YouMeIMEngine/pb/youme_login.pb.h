// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_login.proto

#ifndef PROTOBUF_youme_5flogin_2eproto__INCLUDED
#define PROTOBUF_youme_5flogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5flogin_2eproto();
void protobuf_AssignDesc_youme_5flogin_2eproto();
void protobuf_ShutdownFile_youme_5flogin_2eproto();

class LoginReq;
class LoginRsp;

// ===================================================================

class LoginReq : public ::youmecommon::protobuf::MessageLite {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const LoginReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginReq* other);

  // implements Message ----------------------------------------------

  inline LoginReq* New() const { return New(NULL); }

  LoginReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required string device_token = 2;
  bool has_device_token() const;
  void clear_device_token();
  static const int kDeviceTokenFieldNumber = 2;
  const ::std::string& device_token() const;
  void set_device_token(const ::std::string& value);
  void set_device_token(const char* value);
  void set_device_token(const char* value, size_t size);
  ::std::string* mutable_device_token();
  ::std::string* release_device_token();
  void set_allocated_device_token(::std::string* device_token);

  // required string pswd = 3;
  bool has_pswd() const;
  void clear_pswd();
  static const int kPswdFieldNumber = 3;
  const ::std::string& pswd() const;
  void set_pswd(const ::std::string& value);
  void set_pswd(const char* value);
  void set_pswd(const char* value, size_t size);
  ::std::string* mutable_pswd();
  ::std::string* release_pswd();
  void set_allocated_pswd(::std::string* pswd);

  // required int32 os_type = 4;
  bool has_os_type() const;
  void clear_os_type();
  static const int kOsTypeFieldNumber = 4;
  ::youmecommon::protobuf::int32 os_type() const;
  void set_os_type(::youmecommon::protobuf::int32 value);

  // optional string auth_token = 5;
  bool has_auth_token() const;
  void clear_auth_token();
  static const int kAuthTokenFieldNumber = 5;
  const ::std::string& auth_token() const;
  void set_auth_token(const ::std::string& value);
  void set_auth_token(const char* value);
  void set_auth_token(const char* value, size_t size);
  ::std::string* mutable_auth_token();
  ::std::string* release_auth_token();
  void set_allocated_auth_token(::std::string* auth_token);

  // optional string user_info = 6;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 6;
  const ::std::string& user_info() const;
  void set_user_info(const ::std::string& value);
  void set_user_info(const char* value);
  void set_user_info(const char* value, size_t size);
  ::std::string* mutable_user_info();
  ::std::string* release_user_info();
  void set_allocated_user_info(::std::string* user_info);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.LoginReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_device_token();
  inline void clear_has_device_token();
  inline void set_has_pswd();
  inline void clear_has_pswd();
  inline void set_has_os_type();
  inline void clear_has_os_type();
  inline void set_has_auth_token();
  inline void clear_has_auth_token();
  inline void set_has_user_info();
  inline void clear_has_user_info();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr device_token_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 os_type_;
  ::youmecommon::protobuf::internal::ArenaStringPtr pswd_;
  ::youmecommon::protobuf::internal::ArenaStringPtr auth_token_;
  ::youmecommon::protobuf::internal::ArenaStringPtr user_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5flogin_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5flogin_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5flogin_2eproto();
  friend void protobuf_ShutdownFile_youme_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LoginReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  LoginRsp();
  virtual ~LoginRsp();

  LoginRsp(const LoginRsp& from);

  inline LoginRsp& operator=(const LoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const LoginRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginRsp* other);

  // implements Message ----------------------------------------------

  inline LoginRsp* New() const { return New(NULL); }

  LoginRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const LoginRsp& from);
  void MergeFrom(const LoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required string secret = 3;
  bool has_secret() const;
  void clear_secret();
  static const int kSecretFieldNumber = 3;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // optional string ret_msg = 4;
  bool has_ret_msg() const;
  void clear_ret_msg();
  static const int kRetMsgFieldNumber = 4;
  const ::std::string& ret_msg() const;
  void set_ret_msg(const ::std::string& value);
  void set_ret_msg(const char* value);
  void set_ret_msg(const char* value, size_t size);
  ::std::string* mutable_ret_msg();
  ::std::string* release_ret_msg();
  void set_allocated_ret_msg(::std::string* ret_msg);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.LoginRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_secret();
  inline void clear_has_secret();
  inline void set_has_ret_msg();
  inline void clear_has_ret_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::internal::ArenaStringPtr secret_;
  ::youmecommon::protobuf::internal::ArenaStringPtr ret_msg_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5flogin_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5flogin_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5flogin_2eproto();
  friend void protobuf_ShutdownFile_youme_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LoginRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// required int32 version = 1;
inline bool LoginReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 LoginReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LoginReq.version)
  return version_;
}
inline void LoginReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LoginReq.version)
}

// required string device_token = 2;
inline bool LoginReq::has_device_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReq::set_has_device_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReq::clear_has_device_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReq::clear_device_token() {
  device_token_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_token();
}
inline const ::std::string& LoginReq::device_token() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LoginReq.device_token)
  return device_token_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_device_token(const ::std::string& value) {
  set_has_device_token();
  device_token_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LoginReq.device_token)
}
inline void LoginReq::set_device_token(const char* value) {
  set_has_device_token();
  device_token_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.LoginReq.device_token)
}
inline void LoginReq::set_device_token(const char* value, size_t size) {
  set_has_device_token();
  device_token_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.LoginReq.device_token)
}
inline ::std::string* LoginReq::mutable_device_token() {
  set_has_device_token();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.LoginReq.device_token)
  return device_token_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_device_token() {
  clear_has_device_token();
  return device_token_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_device_token(::std::string* device_token) {
  if (device_token != NULL) {
    set_has_device_token();
  } else {
    clear_has_device_token();
  }
  device_token_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), device_token);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.LoginReq.device_token)
}

// required string pswd = 3;
inline bool LoginReq::has_pswd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginReq::set_has_pswd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginReq::clear_has_pswd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginReq::clear_pswd() {
  pswd_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pswd();
}
inline const ::std::string& LoginReq::pswd() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LoginReq.pswd)
  return pswd_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_pswd(const ::std::string& value) {
  set_has_pswd();
  pswd_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LoginReq.pswd)
}
inline void LoginReq::set_pswd(const char* value) {
  set_has_pswd();
  pswd_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.LoginReq.pswd)
}
inline void LoginReq::set_pswd(const char* value, size_t size) {
  set_has_pswd();
  pswd_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.LoginReq.pswd)
}
inline ::std::string* LoginReq::mutable_pswd() {
  set_has_pswd();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.LoginReq.pswd)
  return pswd_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_pswd() {
  clear_has_pswd();
  return pswd_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_pswd(::std::string* pswd) {
  if (pswd != NULL) {
    set_has_pswd();
  } else {
    clear_has_pswd();
  }
  pswd_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), pswd);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.LoginReq.pswd)
}

// required int32 os_type = 4;
inline bool LoginReq::has_os_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginReq::set_has_os_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginReq::clear_has_os_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginReq::clear_os_type() {
  os_type_ = 0;
  clear_has_os_type();
}
inline ::youmecommon::protobuf::int32 LoginReq::os_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LoginReq.os_type)
  return os_type_;
}
inline void LoginReq::set_os_type(::youmecommon::protobuf::int32 value) {
  set_has_os_type();
  os_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LoginReq.os_type)
}

// optional string auth_token = 5;
inline bool LoginReq::has_auth_token() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginReq::set_has_auth_token() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginReq::clear_has_auth_token() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginReq::clear_auth_token() {
  auth_token_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_auth_token();
}
inline const ::std::string& LoginReq::auth_token() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LoginReq.auth_token)
  return auth_token_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_auth_token(const ::std::string& value) {
  set_has_auth_token();
  auth_token_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LoginReq.auth_token)
}
inline void LoginReq::set_auth_token(const char* value) {
  set_has_auth_token();
  auth_token_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.LoginReq.auth_token)
}
inline void LoginReq::set_auth_token(const char* value, size_t size) {
  set_has_auth_token();
  auth_token_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.LoginReq.auth_token)
}
inline ::std::string* LoginReq::mutable_auth_token() {
  set_has_auth_token();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.LoginReq.auth_token)
  return auth_token_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_auth_token() {
  clear_has_auth_token();
  return auth_token_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_auth_token(::std::string* auth_token) {
  if (auth_token != NULL) {
    set_has_auth_token();
  } else {
    clear_has_auth_token();
  }
  auth_token_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), auth_token);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.LoginReq.auth_token)
}

// optional string user_info = 6;
inline bool LoginReq::has_user_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginReq::set_has_user_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginReq::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginReq::clear_user_info() {
  user_info_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_info();
}
inline const ::std::string& LoginReq::user_info() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LoginReq.user_info)
  return user_info_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_user_info(const ::std::string& value) {
  set_has_user_info();
  user_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LoginReq.user_info)
}
inline void LoginReq::set_user_info(const char* value) {
  set_has_user_info();
  user_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.LoginReq.user_info)
}
inline void LoginReq::set_user_info(const char* value, size_t size) {
  set_has_user_info();
  user_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.LoginReq.user_info)
}
inline ::std::string* LoginReq::mutable_user_info() {
  set_has_user_info();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.LoginReq.user_info)
  return user_info_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_user_info() {
  clear_has_user_info();
  return user_info_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_user_info(::std::string* user_info) {
  if (user_info != NULL) {
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
  user_info_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), user_info);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.LoginReq.user_info)
}

// -------------------------------------------------------------------

// LoginRsp

// required int32 version = 1;
inline bool LoginRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 LoginRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LoginRsp.version)
  return version_;
}
inline void LoginRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LoginRsp.version)
}

// required int32 ret = 2;
inline bool LoginRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 LoginRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LoginRsp.ret)
  return ret_;
}
inline void LoginRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LoginRsp.ret)
}

// required string secret = 3;
inline bool LoginRsp::has_secret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRsp::set_has_secret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRsp::clear_has_secret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRsp::clear_secret() {
  secret_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secret();
}
inline const ::std::string& LoginRsp::secret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LoginRsp.secret)
  return secret_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRsp::set_secret(const ::std::string& value) {
  set_has_secret();
  secret_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LoginRsp.secret)
}
inline void LoginRsp::set_secret(const char* value) {
  set_has_secret();
  secret_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.LoginRsp.secret)
}
inline void LoginRsp::set_secret(const char* value, size_t size) {
  set_has_secret();
  secret_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.LoginRsp.secret)
}
inline ::std::string* LoginRsp::mutable_secret() {
  set_has_secret();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.LoginRsp.secret)
  return secret_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRsp::release_secret() {
  clear_has_secret();
  return secret_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRsp::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    set_has_secret();
  } else {
    clear_has_secret();
  }
  secret_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.LoginRsp.secret)
}

// optional string ret_msg = 4;
inline bool LoginRsp::has_ret_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRsp::set_has_ret_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRsp::clear_has_ret_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRsp::clear_ret_msg() {
  ret_msg_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ret_msg();
}
inline const ::std::string& LoginRsp::ret_msg() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LoginRsp.ret_msg)
  return ret_msg_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRsp::set_ret_msg(const ::std::string& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LoginRsp.ret_msg)
}
inline void LoginRsp::set_ret_msg(const char* value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.LoginRsp.ret_msg)
}
inline void LoginRsp::set_ret_msg(const char* value, size_t size) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.LoginRsp.ret_msg)
}
inline ::std::string* LoginRsp::mutable_ret_msg() {
  set_has_ret_msg();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.LoginRsp.ret_msg)
  return ret_msg_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRsp::release_ret_msg() {
  clear_has_ret_msg();
  return ret_msg_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRsp::set_allocated_ret_msg(::std::string* ret_msg) {
  if (ret_msg != NULL) {
    set_has_ret_msg();
  } else {
    clear_has_ret_msg();
  }
  ret_msg_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ret_msg);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.LoginRsp.ret_msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5flogin_2eproto__INCLUDED
