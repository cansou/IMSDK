// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_rc_get_friend_list.proto

#ifndef PROTOBUF_youme_5frc_5fget_5ffriend_5flist_2eproto__INCLUDED
#define PROTOBUF_youme_5frc_5fget_5ffriend_5flist_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "youme_rc_comm.pb.h"
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

class AppBrowseRcFriendReqListReq;
class AppBrowseRcFriendReqListRsp;
class GetRcBlackListReq;
class GetRcBlackListRsp;
class GetRcFriendListReq;
class GetRcFriendListRsp;
class GetRcFriendReqListReq;
class GetRcFriendReqListRsp;
class RcFriendReqIdx;
class RcFriendReqInfo;

// ===================================================================

class GetRcFriendListReq : public ::youmecommon::protobuf::MessageLite {
 public:
  GetRcFriendListReq();
  virtual ~GetRcFriendListReq();

  GetRcFriendListReq(const GetRcFriendListReq& from);

  inline GetRcFriendListReq& operator=(const GetRcFriendListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetRcFriendListReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRcFriendListReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRcFriendListReq* other);

  // implements Message ----------------------------------------------

  inline GetRcFriendListReq* New() const { return New(NULL); }

  GetRcFriendListReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetRcFriendListReq& from);
  void MergeFrom(const GetRcFriendListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRcFriendListReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 start_idx = 2;
  bool has_start_idx() const;
  void clear_start_idx();
  static const int kStartIdxFieldNumber = 2;
  ::youmecommon::protobuf::int32 start_idx() const;
  void set_start_idx(::youmecommon::protobuf::int32 value);

  // required int32 len = 3;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 3;
  ::youmecommon::protobuf::int32 len() const;
  void set_len(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetRcFriendListReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_start_idx();
  inline void clear_has_start_idx();
  inline void set_has_len();
  inline void clear_has_len();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 start_idx_;
  ::youmecommon::protobuf::int32 len_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

  void InitAsDefaultInstance();
  static GetRcFriendListReq* default_instance_;
};
// -------------------------------------------------------------------

class GetRcFriendListRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  GetRcFriendListRsp();
  virtual ~GetRcFriendListRsp();

  GetRcFriendListRsp(const GetRcFriendListRsp& from);

  inline GetRcFriendListRsp& operator=(const GetRcFriendListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetRcFriendListRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRcFriendListRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRcFriendListRsp* other);

  // implements Message ----------------------------------------------

  inline GetRcFriendListRsp* New() const { return New(NULL); }

  GetRcFriendListRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetRcFriendListRsp& from);
  void MergeFrom(const GetRcFriendListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRcFriendListRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required int32 list_cnt = 3;
  bool has_list_cnt() const;
  void clear_list_cnt();
  static const int kListCntFieldNumber = 3;
  ::youmecommon::protobuf::int32 list_cnt() const;
  void set_list_cnt(::youmecommon::protobuf::int32 value);

  // repeated .YOUMEServiceProtocol.RcFriendBriefInfo friend_list = 4;
  int friend_list_size() const;
  void clear_friend_list();
  static const int kFriendListFieldNumber = 4;
  const ::YOUMEServiceProtocol::RcFriendBriefInfo& friend_list(int index) const;
  ::YOUMEServiceProtocol::RcFriendBriefInfo* mutable_friend_list(int index);
  ::YOUMEServiceProtocol::RcFriendBriefInfo* add_friend_list();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >*
      mutable_friend_list();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >&
      friend_list() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetRcFriendListRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_list_cnt();
  inline void clear_has_list_cnt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo > friend_list_;
  ::youmecommon::protobuf::int32 list_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

  void InitAsDefaultInstance();
  static GetRcFriendListRsp* default_instance_;
};
// -------------------------------------------------------------------

class GetRcBlackListReq : public ::youmecommon::protobuf::MessageLite {
 public:
  GetRcBlackListReq();
  virtual ~GetRcBlackListReq();

  GetRcBlackListReq(const GetRcBlackListReq& from);

  inline GetRcBlackListReq& operator=(const GetRcBlackListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetRcBlackListReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRcBlackListReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRcBlackListReq* other);

  // implements Message ----------------------------------------------

  inline GetRcBlackListReq* New() const { return New(NULL); }

  GetRcBlackListReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetRcBlackListReq& from);
  void MergeFrom(const GetRcBlackListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRcBlackListReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 start_idx = 2;
  bool has_start_idx() const;
  void clear_start_idx();
  static const int kStartIdxFieldNumber = 2;
  ::youmecommon::protobuf::int32 start_idx() const;
  void set_start_idx(::youmecommon::protobuf::int32 value);

  // required int32 len = 3;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 3;
  ::youmecommon::protobuf::int32 len() const;
  void set_len(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetRcBlackListReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_start_idx();
  inline void clear_has_start_idx();
  inline void set_has_len();
  inline void clear_has_len();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 start_idx_;
  ::youmecommon::protobuf::int32 len_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

  void InitAsDefaultInstance();
  static GetRcBlackListReq* default_instance_;
};
// -------------------------------------------------------------------

class GetRcBlackListRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  GetRcBlackListRsp();
  virtual ~GetRcBlackListRsp();

  GetRcBlackListRsp(const GetRcBlackListRsp& from);

  inline GetRcBlackListRsp& operator=(const GetRcBlackListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetRcBlackListRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRcBlackListRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRcBlackListRsp* other);

  // implements Message ----------------------------------------------

  inline GetRcBlackListRsp* New() const { return New(NULL); }

  GetRcBlackListRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetRcBlackListRsp& from);
  void MergeFrom(const GetRcBlackListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRcBlackListRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required int32 list_cnt = 3;
  bool has_list_cnt() const;
  void clear_list_cnt();
  static const int kListCntFieldNumber = 3;
  ::youmecommon::protobuf::int32 list_cnt() const;
  void set_list_cnt(::youmecommon::protobuf::int32 value);

  // repeated .YOUMEServiceProtocol.RcFriendBriefInfo black_list = 4;
  int black_list_size() const;
  void clear_black_list();
  static const int kBlackListFieldNumber = 4;
  const ::YOUMEServiceProtocol::RcFriendBriefInfo& black_list(int index) const;
  ::YOUMEServiceProtocol::RcFriendBriefInfo* mutable_black_list(int index);
  ::YOUMEServiceProtocol::RcFriendBriefInfo* add_black_list();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >*
      mutable_black_list();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >&
      black_list() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetRcBlackListRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_list_cnt();
  inline void clear_has_list_cnt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo > black_list_;
  ::youmecommon::protobuf::int32 list_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

  void InitAsDefaultInstance();
  static GetRcBlackListRsp* default_instance_;
};
// -------------------------------------------------------------------

class RcFriendReqInfo : public ::youmecommon::protobuf::MessageLite {
 public:
  RcFriendReqInfo();
  virtual ~RcFriendReqInfo();

  RcFriendReqInfo(const RcFriendReqInfo& from);

  inline RcFriendReqInfo& operator=(const RcFriendReqInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const RcFriendReqInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RcFriendReqInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RcFriendReqInfo* other);

  // implements Message ----------------------------------------------

  inline RcFriendReqInfo* New() const { return New(NULL); }

  RcFriendReqInfo* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const RcFriendReqInfo& from);
  void MergeFrom(const RcFriendReqInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RcFriendReqInfo* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 app_id = 1;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::youmecommon::protobuf::int32 app_id() const;
  void set_app_id(::youmecommon::protobuf::int32 value);

  // required uint64 req_id = 2;
  bool has_req_id() const;
  void clear_req_id();
  static const int kReqIdFieldNumber = 2;
  ::youmecommon::protobuf::uint64 req_id() const;
  void set_req_id(::youmecommon::protobuf::uint64 value);

  // required .YOUMEServiceProtocol.RC_FRIEND_REQ_TYPE req_type = 3;
  bool has_req_type() const;
  void clear_req_type();
  static const int kReqTypeFieldNumber = 3;
  ::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE req_type() const;
  void set_req_type(::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE value);

  // required bytes myself = 4;
  bool has_myself() const;
  void clear_myself();
  static const int kMyselfFieldNumber = 4;
  const ::std::string& myself() const;
  void set_myself(const ::std::string& value);
  void set_myself(const char* value);
  void set_myself(const void* value, size_t size);
  ::std::string* mutable_myself();
  ::std::string* release_myself();
  void set_allocated_myself(::std::string* myself);

  // optional bytes myself_nickname = 5;
  bool has_myself_nickname() const;
  void clear_myself_nickname();
  static const int kMyselfNicknameFieldNumber = 5;
  const ::std::string& myself_nickname() const;
  void set_myself_nickname(const ::std::string& value);
  void set_myself_nickname(const char* value);
  void set_myself_nickname(const void* value, size_t size);
  ::std::string* mutable_myself_nickname();
  ::std::string* release_myself_nickname();
  void set_allocated_myself_nickname(::std::string* myself_nickname);

  // required bytes other_side = 6;
  bool has_other_side() const;
  void clear_other_side();
  static const int kOtherSideFieldNumber = 6;
  const ::std::string& other_side() const;
  void set_other_side(const ::std::string& value);
  void set_other_side(const char* value);
  void set_other_side(const void* value, size_t size);
  ::std::string* mutable_other_side();
  ::std::string* release_other_side();
  void set_allocated_other_side(::std::string* other_side);

  // optional bytes other_side_nickname = 7;
  bool has_other_side_nickname() const;
  void clear_other_side_nickname();
  static const int kOtherSideNicknameFieldNumber = 7;
  const ::std::string& other_side_nickname() const;
  void set_other_side_nickname(const ::std::string& value);
  void set_other_side_nickname(const char* value);
  void set_other_side_nickname(const void* value, size_t size);
  ::std::string* mutable_other_side_nickname();
  ::std::string* release_other_side_nickname();
  void set_allocated_other_side_nickname(::std::string* other_side_nickname);

  // required .YOUMEServiceProtocol.RC_FRIEND_REQ_STATE cur_state = 8;
  bool has_cur_state() const;
  void clear_cur_state();
  static const int kCurStateFieldNumber = 8;
  ::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE cur_state() const;
  void set_cur_state(::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE value);

  // optional bytes ext_info = 9;
  bool has_ext_info() const;
  void clear_ext_info();
  static const int kExtInfoFieldNumber = 9;
  const ::std::string& ext_info() const;
  void set_ext_info(const ::std::string& value);
  void set_ext_info(const char* value);
  void set_ext_info(const void* value, size_t size);
  ::std::string* mutable_ext_info();
  ::std::string* release_ext_info();
  void set_allocated_ext_info(::std::string* ext_info);

  // optional int32 create_time = 10;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 10;
  ::youmecommon::protobuf::int32 create_time() const;
  void set_create_time(::youmecommon::protobuf::int32 value);

  // optional int32 update_time = 11;
  bool has_update_time() const;
  void clear_update_time();
  static const int kUpdateTimeFieldNumber = 11;
  ::youmecommon::protobuf::int32 update_time() const;
  void set_update_time(::youmecommon::protobuf::int32 value);

  // optional int32 is_browsed_by_app = 12;
  bool has_is_browsed_by_app() const;
  void clear_is_browsed_by_app();
  static const int kIsBrowsedByAppFieldNumber = 12;
  ::youmecommon::protobuf::int32 is_browsed_by_app() const;
  void set_is_browsed_by_app(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.RcFriendReqInfo)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_req_id();
  inline void clear_has_req_id();
  inline void set_has_req_type();
  inline void clear_has_req_type();
  inline void set_has_myself();
  inline void clear_has_myself();
  inline void set_has_myself_nickname();
  inline void clear_has_myself_nickname();
  inline void set_has_other_side();
  inline void clear_has_other_side();
  inline void set_has_other_side_nickname();
  inline void clear_has_other_side_nickname();
  inline void set_has_cur_state();
  inline void clear_has_cur_state();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_update_time();
  inline void clear_has_update_time();
  inline void set_has_is_browsed_by_app();
  inline void clear_has_is_browsed_by_app();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::uint64 req_id_;
  ::youmecommon::protobuf::int32 app_id_;
  int req_type_;
  ::youmecommon::protobuf::internal::ArenaStringPtr myself_;
  ::youmecommon::protobuf::internal::ArenaStringPtr myself_nickname_;
  ::youmecommon::protobuf::internal::ArenaStringPtr other_side_;
  ::youmecommon::protobuf::internal::ArenaStringPtr other_side_nickname_;
  ::youmecommon::protobuf::internal::ArenaStringPtr ext_info_;
  int cur_state_;
  ::youmecommon::protobuf::int32 create_time_;
  ::youmecommon::protobuf::int32 update_time_;
  ::youmecommon::protobuf::int32 is_browsed_by_app_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

  void InitAsDefaultInstance();
  static RcFriendReqInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetRcFriendReqListReq : public ::youmecommon::protobuf::MessageLite {
 public:
  GetRcFriendReqListReq();
  virtual ~GetRcFriendReqListReq();

  GetRcFriendReqListReq(const GetRcFriendReqListReq& from);

  inline GetRcFriendReqListReq& operator=(const GetRcFriendReqListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetRcFriendReqListReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRcFriendReqListReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRcFriendReqListReq* other);

  // implements Message ----------------------------------------------

  inline GetRcFriendReqListReq* New() const { return New(NULL); }

  GetRcFriendReqListReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetRcFriendReqListReq& from);
  void MergeFrom(const GetRcFriendReqListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRcFriendReqListReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 start_idx = 2;
  bool has_start_idx() const;
  void clear_start_idx();
  static const int kStartIdxFieldNumber = 2;
  ::youmecommon::protobuf::int32 start_idx() const;
  void set_start_idx(::youmecommon::protobuf::int32 value);

  // required int32 len = 3;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 3;
  ::youmecommon::protobuf::int32 len() const;
  void set_len(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetRcFriendReqListReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_start_idx();
  inline void clear_has_start_idx();
  inline void set_has_len();
  inline void clear_has_len();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 start_idx_;
  ::youmecommon::protobuf::int32 len_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

  void InitAsDefaultInstance();
  static GetRcFriendReqListReq* default_instance_;
};
// -------------------------------------------------------------------

class GetRcFriendReqListRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  GetRcFriendReqListRsp();
  virtual ~GetRcFriendReqListRsp();

  GetRcFriendReqListRsp(const GetRcFriendReqListRsp& from);

  inline GetRcFriendReqListRsp& operator=(const GetRcFriendReqListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetRcFriendReqListRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRcFriendReqListRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRcFriendReqListRsp* other);

  // implements Message ----------------------------------------------

  inline GetRcFriendReqListRsp* New() const { return New(NULL); }

  GetRcFriendReqListRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetRcFriendReqListRsp& from);
  void MergeFrom(const GetRcFriendReqListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRcFriendReqListRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required int32 list_cnt = 3;
  bool has_list_cnt() const;
  void clear_list_cnt();
  static const int kListCntFieldNumber = 3;
  ::youmecommon::protobuf::int32 list_cnt() const;
  void set_list_cnt(::youmecommon::protobuf::int32 value);

  // repeated .YOUMEServiceProtocol.RcFriendReqInfo friend_req_list = 4;
  int friend_req_list_size() const;
  void clear_friend_req_list();
  static const int kFriendReqListFieldNumber = 4;
  const ::YOUMEServiceProtocol::RcFriendReqInfo& friend_req_list(int index) const;
  ::YOUMEServiceProtocol::RcFriendReqInfo* mutable_friend_req_list(int index);
  ::YOUMEServiceProtocol::RcFriendReqInfo* add_friend_req_list();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendReqInfo >*
      mutable_friend_req_list();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendReqInfo >&
      friend_req_list() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetRcFriendReqListRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_list_cnt();
  inline void clear_has_list_cnt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendReqInfo > friend_req_list_;
  ::youmecommon::protobuf::int32 list_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

  void InitAsDefaultInstance();
  static GetRcFriendReqListRsp* default_instance_;
};
// -------------------------------------------------------------------

class RcFriendReqIdx : public ::youmecommon::protobuf::MessageLite {
 public:
  RcFriendReqIdx();
  virtual ~RcFriendReqIdx();

  RcFriendReqIdx(const RcFriendReqIdx& from);

  inline RcFriendReqIdx& operator=(const RcFriendReqIdx& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const RcFriendReqIdx& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RcFriendReqIdx* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RcFriendReqIdx* other);

  // implements Message ----------------------------------------------

  inline RcFriendReqIdx* New() const { return New(NULL); }

  RcFriendReqIdx* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const RcFriendReqIdx& from);
  void MergeFrom(const RcFriendReqIdx& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RcFriendReqIdx* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 app_id = 1;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::youmecommon::protobuf::int32 app_id() const;
  void set_app_id(::youmecommon::protobuf::int32 value);

  // required uint64 req_id = 2;
  bool has_req_id() const;
  void clear_req_id();
  static const int kReqIdFieldNumber = 2;
  ::youmecommon::protobuf::uint64 req_id() const;
  void set_req_id(::youmecommon::protobuf::uint64 value);

  // required .YOUMEServiceProtocol.RC_FRIEND_REQ_TYPE req_type = 3;
  bool has_req_type() const;
  void clear_req_type();
  static const int kReqTypeFieldNumber = 3;
  ::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE req_type() const;
  void set_req_type(::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE value);

  // required bytes other_side = 4;
  bool has_other_side() const;
  void clear_other_side();
  static const int kOtherSideFieldNumber = 4;
  const ::std::string& other_side() const;
  void set_other_side(const ::std::string& value);
  void set_other_side(const char* value);
  void set_other_side(const void* value, size_t size);
  ::std::string* mutable_other_side();
  ::std::string* release_other_side();
  void set_allocated_other_side(::std::string* other_side);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.RcFriendReqIdx)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_req_id();
  inline void clear_has_req_id();
  inline void set_has_req_type();
  inline void clear_has_req_type();
  inline void set_has_other_side();
  inline void clear_has_other_side();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::uint64 req_id_;
  ::youmecommon::protobuf::int32 app_id_;
  int req_type_;
  ::youmecommon::protobuf::internal::ArenaStringPtr other_side_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

  void InitAsDefaultInstance();
  static RcFriendReqIdx* default_instance_;
};
// -------------------------------------------------------------------

class AppBrowseRcFriendReqListReq : public ::youmecommon::protobuf::MessageLite {
 public:
  AppBrowseRcFriendReqListReq();
  virtual ~AppBrowseRcFriendReqListReq();

  AppBrowseRcFriendReqListReq(const AppBrowseRcFriendReqListReq& from);

  inline AppBrowseRcFriendReqListReq& operator=(const AppBrowseRcFriendReqListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const AppBrowseRcFriendReqListReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AppBrowseRcFriendReqListReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AppBrowseRcFriendReqListReq* other);

  // implements Message ----------------------------------------------

  inline AppBrowseRcFriendReqListReq* New() const { return New(NULL); }

  AppBrowseRcFriendReqListReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const AppBrowseRcFriendReqListReq& from);
  void MergeFrom(const AppBrowseRcFriendReqListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppBrowseRcFriendReqListReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // repeated .YOUMEServiceProtocol.RcFriendReqIdx friend_req_list = 2;
  int friend_req_list_size() const;
  void clear_friend_req_list();
  static const int kFriendReqListFieldNumber = 2;
  const ::YOUMEServiceProtocol::RcFriendReqIdx& friend_req_list(int index) const;
  ::YOUMEServiceProtocol::RcFriendReqIdx* mutable_friend_req_list(int index);
  ::YOUMEServiceProtocol::RcFriendReqIdx* add_friend_req_list();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendReqIdx >*
      mutable_friend_req_list();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendReqIdx >&
      friend_req_list() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.AppBrowseRcFriendReqListReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendReqIdx > friend_req_list_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

  void InitAsDefaultInstance();
  static AppBrowseRcFriendReqListReq* default_instance_;
};
// -------------------------------------------------------------------

class AppBrowseRcFriendReqListRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  AppBrowseRcFriendReqListRsp();
  virtual ~AppBrowseRcFriendReqListRsp();

  AppBrowseRcFriendReqListRsp(const AppBrowseRcFriendReqListRsp& from);

  inline AppBrowseRcFriendReqListRsp& operator=(const AppBrowseRcFriendReqListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const AppBrowseRcFriendReqListRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AppBrowseRcFriendReqListRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AppBrowseRcFriendReqListRsp* other);

  // implements Message ----------------------------------------------

  inline AppBrowseRcFriendReqListRsp* New() const { return New(NULL); }

  AppBrowseRcFriendReqListRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const AppBrowseRcFriendReqListRsp& from);
  void MergeFrom(const AppBrowseRcFriendReqListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppBrowseRcFriendReqListRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.AppBrowseRcFriendReqListRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fget_5ffriend_5flist_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fget_5ffriend_5flist_2eproto();

  void InitAsDefaultInstance();
  static AppBrowseRcFriendReqListRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRcFriendListReq

// required int32 version = 1;
inline bool GetRcFriendListReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRcFriendListReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRcFriendListReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRcFriendListReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetRcFriendListReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendListReq.version)
  return version_;
}
inline void GetRcFriendListReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendListReq.version)
}

// required int32 start_idx = 2;
inline bool GetRcFriendListReq::has_start_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRcFriendListReq::set_has_start_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRcFriendListReq::clear_has_start_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRcFriendListReq::clear_start_idx() {
  start_idx_ = 0;
  clear_has_start_idx();
}
inline ::youmecommon::protobuf::int32 GetRcFriendListReq::start_idx() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendListReq.start_idx)
  return start_idx_;
}
inline void GetRcFriendListReq::set_start_idx(::youmecommon::protobuf::int32 value) {
  set_has_start_idx();
  start_idx_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendListReq.start_idx)
}

// required int32 len = 3;
inline bool GetRcFriendListReq::has_len() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRcFriendListReq::set_has_len() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRcFriendListReq::clear_has_len() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRcFriendListReq::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::youmecommon::protobuf::int32 GetRcFriendListReq::len() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendListReq.len)
  return len_;
}
inline void GetRcFriendListReq::set_len(::youmecommon::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendListReq.len)
}

// -------------------------------------------------------------------

// GetRcFriendListRsp

// required int32 version = 1;
inline bool GetRcFriendListRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRcFriendListRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRcFriendListRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRcFriendListRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetRcFriendListRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendListRsp.version)
  return version_;
}
inline void GetRcFriendListRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendListRsp.version)
}

// required int32 ret = 2;
inline bool GetRcFriendListRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRcFriendListRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRcFriendListRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRcFriendListRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 GetRcFriendListRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendListRsp.ret)
  return ret_;
}
inline void GetRcFriendListRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendListRsp.ret)
}

// required int32 list_cnt = 3;
inline bool GetRcFriendListRsp::has_list_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRcFriendListRsp::set_has_list_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRcFriendListRsp::clear_has_list_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRcFriendListRsp::clear_list_cnt() {
  list_cnt_ = 0;
  clear_has_list_cnt();
}
inline ::youmecommon::protobuf::int32 GetRcFriendListRsp::list_cnt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendListRsp.list_cnt)
  return list_cnt_;
}
inline void GetRcFriendListRsp::set_list_cnt(::youmecommon::protobuf::int32 value) {
  set_has_list_cnt();
  list_cnt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendListRsp.list_cnt)
}

// repeated .YOUMEServiceProtocol.RcFriendBriefInfo friend_list = 4;
inline int GetRcFriendListRsp::friend_list_size() const {
  return friend_list_.size();
}
inline void GetRcFriendListRsp::clear_friend_list() {
  friend_list_.Clear();
}
inline const ::YOUMEServiceProtocol::RcFriendBriefInfo& GetRcFriendListRsp::friend_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendListRsp.friend_list)
  return friend_list_.Get(index);
}
inline ::YOUMEServiceProtocol::RcFriendBriefInfo* GetRcFriendListRsp::mutable_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetRcFriendListRsp.friend_list)
  return friend_list_.Mutable(index);
}
inline ::YOUMEServiceProtocol::RcFriendBriefInfo* GetRcFriendListRsp::add_friend_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.GetRcFriendListRsp.friend_list)
  return friend_list_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >*
GetRcFriendListRsp::mutable_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.GetRcFriendListRsp.friend_list)
  return &friend_list_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >&
GetRcFriendListRsp::friend_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.GetRcFriendListRsp.friend_list)
  return friend_list_;
}

// -------------------------------------------------------------------

// GetRcBlackListReq

// required int32 version = 1;
inline bool GetRcBlackListReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRcBlackListReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRcBlackListReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRcBlackListReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetRcBlackListReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcBlackListReq.version)
  return version_;
}
inline void GetRcBlackListReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcBlackListReq.version)
}

// required int32 start_idx = 2;
inline bool GetRcBlackListReq::has_start_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRcBlackListReq::set_has_start_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRcBlackListReq::clear_has_start_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRcBlackListReq::clear_start_idx() {
  start_idx_ = 0;
  clear_has_start_idx();
}
inline ::youmecommon::protobuf::int32 GetRcBlackListReq::start_idx() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcBlackListReq.start_idx)
  return start_idx_;
}
inline void GetRcBlackListReq::set_start_idx(::youmecommon::protobuf::int32 value) {
  set_has_start_idx();
  start_idx_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcBlackListReq.start_idx)
}

// required int32 len = 3;
inline bool GetRcBlackListReq::has_len() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRcBlackListReq::set_has_len() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRcBlackListReq::clear_has_len() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRcBlackListReq::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::youmecommon::protobuf::int32 GetRcBlackListReq::len() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcBlackListReq.len)
  return len_;
}
inline void GetRcBlackListReq::set_len(::youmecommon::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcBlackListReq.len)
}

// -------------------------------------------------------------------

// GetRcBlackListRsp

// required int32 version = 1;
inline bool GetRcBlackListRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRcBlackListRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRcBlackListRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRcBlackListRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetRcBlackListRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcBlackListRsp.version)
  return version_;
}
inline void GetRcBlackListRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcBlackListRsp.version)
}

// required int32 ret = 2;
inline bool GetRcBlackListRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRcBlackListRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRcBlackListRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRcBlackListRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 GetRcBlackListRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcBlackListRsp.ret)
  return ret_;
}
inline void GetRcBlackListRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcBlackListRsp.ret)
}

// required int32 list_cnt = 3;
inline bool GetRcBlackListRsp::has_list_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRcBlackListRsp::set_has_list_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRcBlackListRsp::clear_has_list_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRcBlackListRsp::clear_list_cnt() {
  list_cnt_ = 0;
  clear_has_list_cnt();
}
inline ::youmecommon::protobuf::int32 GetRcBlackListRsp::list_cnt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcBlackListRsp.list_cnt)
  return list_cnt_;
}
inline void GetRcBlackListRsp::set_list_cnt(::youmecommon::protobuf::int32 value) {
  set_has_list_cnt();
  list_cnt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcBlackListRsp.list_cnt)
}

// repeated .YOUMEServiceProtocol.RcFriendBriefInfo black_list = 4;
inline int GetRcBlackListRsp::black_list_size() const {
  return black_list_.size();
}
inline void GetRcBlackListRsp::clear_black_list() {
  black_list_.Clear();
}
inline const ::YOUMEServiceProtocol::RcFriendBriefInfo& GetRcBlackListRsp::black_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcBlackListRsp.black_list)
  return black_list_.Get(index);
}
inline ::YOUMEServiceProtocol::RcFriendBriefInfo* GetRcBlackListRsp::mutable_black_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetRcBlackListRsp.black_list)
  return black_list_.Mutable(index);
}
inline ::YOUMEServiceProtocol::RcFriendBriefInfo* GetRcBlackListRsp::add_black_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.GetRcBlackListRsp.black_list)
  return black_list_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >*
GetRcBlackListRsp::mutable_black_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.GetRcBlackListRsp.black_list)
  return &black_list_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >&
GetRcBlackListRsp::black_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.GetRcBlackListRsp.black_list)
  return black_list_;
}

// -------------------------------------------------------------------

// RcFriendReqInfo

// required int32 app_id = 1;
inline bool RcFriendReqInfo::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcFriendReqInfo::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcFriendReqInfo::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcFriendReqInfo::clear_app_id() {
  app_id_ = 0;
  clear_has_app_id();
}
inline ::youmecommon::protobuf::int32 RcFriendReqInfo::app_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.app_id)
  return app_id_;
}
inline void RcFriendReqInfo::set_app_id(::youmecommon::protobuf::int32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.app_id)
}

// required uint64 req_id = 2;
inline bool RcFriendReqInfo::has_req_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcFriendReqInfo::set_has_req_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcFriendReqInfo::clear_has_req_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcFriendReqInfo::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
  clear_has_req_id();
}
inline ::youmecommon::protobuf::uint64 RcFriendReqInfo::req_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.req_id)
  return req_id_;
}
inline void RcFriendReqInfo::set_req_id(::youmecommon::protobuf::uint64 value) {
  set_has_req_id();
  req_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.req_id)
}

// required .YOUMEServiceProtocol.RC_FRIEND_REQ_TYPE req_type = 3;
inline bool RcFriendReqInfo::has_req_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcFriendReqInfo::set_has_req_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcFriendReqInfo::clear_has_req_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcFriendReqInfo::clear_req_type() {
  req_type_ = 1;
  clear_has_req_type();
}
inline ::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE RcFriendReqInfo::req_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.req_type)
  return static_cast< ::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE >(req_type_);
}
inline void RcFriendReqInfo::set_req_type(::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE value) {
  assert(::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE_IsValid(value));
  set_has_req_type();
  req_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.req_type)
}

// required bytes myself = 4;
inline bool RcFriendReqInfo::has_myself() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RcFriendReqInfo::set_has_myself() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RcFriendReqInfo::clear_has_myself() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RcFriendReqInfo::clear_myself() {
  myself_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_myself();
}
inline const ::std::string& RcFriendReqInfo::myself() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.myself)
  return myself_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqInfo::set_myself(const ::std::string& value) {
  set_has_myself();
  myself_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.myself)
}
inline void RcFriendReqInfo::set_myself(const char* value) {
  set_has_myself();
  myself_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqInfo.myself)
}
inline void RcFriendReqInfo::set_myself(const void* value, size_t size) {
  set_has_myself();
  myself_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqInfo.myself)
}
inline ::std::string* RcFriendReqInfo::mutable_myself() {
  set_has_myself();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqInfo.myself)
  return myself_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqInfo::release_myself() {
  clear_has_myself();
  return myself_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqInfo::set_allocated_myself(::std::string* myself) {
  if (myself != NULL) {
    set_has_myself();
  } else {
    clear_has_myself();
  }
  myself_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), myself);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqInfo.myself)
}

// optional bytes myself_nickname = 5;
inline bool RcFriendReqInfo::has_myself_nickname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RcFriendReqInfo::set_has_myself_nickname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RcFriendReqInfo::clear_has_myself_nickname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RcFriendReqInfo::clear_myself_nickname() {
  myself_nickname_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_myself_nickname();
}
inline const ::std::string& RcFriendReqInfo::myself_nickname() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.myself_nickname)
  return myself_nickname_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqInfo::set_myself_nickname(const ::std::string& value) {
  set_has_myself_nickname();
  myself_nickname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.myself_nickname)
}
inline void RcFriendReqInfo::set_myself_nickname(const char* value) {
  set_has_myself_nickname();
  myself_nickname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqInfo.myself_nickname)
}
inline void RcFriendReqInfo::set_myself_nickname(const void* value, size_t size) {
  set_has_myself_nickname();
  myself_nickname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqInfo.myself_nickname)
}
inline ::std::string* RcFriendReqInfo::mutable_myself_nickname() {
  set_has_myself_nickname();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqInfo.myself_nickname)
  return myself_nickname_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqInfo::release_myself_nickname() {
  clear_has_myself_nickname();
  return myself_nickname_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqInfo::set_allocated_myself_nickname(::std::string* myself_nickname) {
  if (myself_nickname != NULL) {
    set_has_myself_nickname();
  } else {
    clear_has_myself_nickname();
  }
  myself_nickname_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), myself_nickname);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqInfo.myself_nickname)
}

// required bytes other_side = 6;
inline bool RcFriendReqInfo::has_other_side() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RcFriendReqInfo::set_has_other_side() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RcFriendReqInfo::clear_has_other_side() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RcFriendReqInfo::clear_other_side() {
  other_side_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_other_side();
}
inline const ::std::string& RcFriendReqInfo::other_side() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.other_side)
  return other_side_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqInfo::set_other_side(const ::std::string& value) {
  set_has_other_side();
  other_side_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.other_side)
}
inline void RcFriendReqInfo::set_other_side(const char* value) {
  set_has_other_side();
  other_side_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqInfo.other_side)
}
inline void RcFriendReqInfo::set_other_side(const void* value, size_t size) {
  set_has_other_side();
  other_side_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqInfo.other_side)
}
inline ::std::string* RcFriendReqInfo::mutable_other_side() {
  set_has_other_side();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqInfo.other_side)
  return other_side_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqInfo::release_other_side() {
  clear_has_other_side();
  return other_side_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqInfo::set_allocated_other_side(::std::string* other_side) {
  if (other_side != NULL) {
    set_has_other_side();
  } else {
    clear_has_other_side();
  }
  other_side_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), other_side);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqInfo.other_side)
}

// optional bytes other_side_nickname = 7;
inline bool RcFriendReqInfo::has_other_side_nickname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RcFriendReqInfo::set_has_other_side_nickname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RcFriendReqInfo::clear_has_other_side_nickname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RcFriendReqInfo::clear_other_side_nickname() {
  other_side_nickname_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_other_side_nickname();
}
inline const ::std::string& RcFriendReqInfo::other_side_nickname() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.other_side_nickname)
  return other_side_nickname_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqInfo::set_other_side_nickname(const ::std::string& value) {
  set_has_other_side_nickname();
  other_side_nickname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.other_side_nickname)
}
inline void RcFriendReqInfo::set_other_side_nickname(const char* value) {
  set_has_other_side_nickname();
  other_side_nickname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqInfo.other_side_nickname)
}
inline void RcFriendReqInfo::set_other_side_nickname(const void* value, size_t size) {
  set_has_other_side_nickname();
  other_side_nickname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqInfo.other_side_nickname)
}
inline ::std::string* RcFriendReqInfo::mutable_other_side_nickname() {
  set_has_other_side_nickname();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqInfo.other_side_nickname)
  return other_side_nickname_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqInfo::release_other_side_nickname() {
  clear_has_other_side_nickname();
  return other_side_nickname_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqInfo::set_allocated_other_side_nickname(::std::string* other_side_nickname) {
  if (other_side_nickname != NULL) {
    set_has_other_side_nickname();
  } else {
    clear_has_other_side_nickname();
  }
  other_side_nickname_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), other_side_nickname);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqInfo.other_side_nickname)
}

// required .YOUMEServiceProtocol.RC_FRIEND_REQ_STATE cur_state = 8;
inline bool RcFriendReqInfo::has_cur_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RcFriendReqInfo::set_has_cur_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RcFriendReqInfo::clear_has_cur_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RcFriendReqInfo::clear_cur_state() {
  cur_state_ = 1;
  clear_has_cur_state();
}
inline ::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE RcFriendReqInfo::cur_state() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.cur_state)
  return static_cast< ::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE >(cur_state_);
}
inline void RcFriendReqInfo::set_cur_state(::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE value) {
  assert(::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE_IsValid(value));
  set_has_cur_state();
  cur_state_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.cur_state)
}

// optional bytes ext_info = 9;
inline bool RcFriendReqInfo::has_ext_info() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RcFriendReqInfo::set_has_ext_info() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RcFriendReqInfo::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RcFriendReqInfo::clear_ext_info() {
  ext_info_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ext_info();
}
inline const ::std::string& RcFriendReqInfo::ext_info() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.ext_info)
  return ext_info_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqInfo::set_ext_info(const ::std::string& value) {
  set_has_ext_info();
  ext_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.ext_info)
}
inline void RcFriendReqInfo::set_ext_info(const char* value) {
  set_has_ext_info();
  ext_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqInfo.ext_info)
}
inline void RcFriendReqInfo::set_ext_info(const void* value, size_t size) {
  set_has_ext_info();
  ext_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqInfo.ext_info)
}
inline ::std::string* RcFriendReqInfo::mutable_ext_info() {
  set_has_ext_info();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqInfo.ext_info)
  return ext_info_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqInfo::release_ext_info() {
  clear_has_ext_info();
  return ext_info_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqInfo::set_allocated_ext_info(::std::string* ext_info) {
  if (ext_info != NULL) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  ext_info_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ext_info);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqInfo.ext_info)
}

// optional int32 create_time = 10;
inline bool RcFriendReqInfo::has_create_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RcFriendReqInfo::set_has_create_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RcFriendReqInfo::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RcFriendReqInfo::clear_create_time() {
  create_time_ = 0;
  clear_has_create_time();
}
inline ::youmecommon::protobuf::int32 RcFriendReqInfo::create_time() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.create_time)
  return create_time_;
}
inline void RcFriendReqInfo::set_create_time(::youmecommon::protobuf::int32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.create_time)
}

// optional int32 update_time = 11;
inline bool RcFriendReqInfo::has_update_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RcFriendReqInfo::set_has_update_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RcFriendReqInfo::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RcFriendReqInfo::clear_update_time() {
  update_time_ = 0;
  clear_has_update_time();
}
inline ::youmecommon::protobuf::int32 RcFriendReqInfo::update_time() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.update_time)
  return update_time_;
}
inline void RcFriendReqInfo::set_update_time(::youmecommon::protobuf::int32 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.update_time)
}

// optional int32 is_browsed_by_app = 12;
inline bool RcFriendReqInfo::has_is_browsed_by_app() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RcFriendReqInfo::set_has_is_browsed_by_app() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RcFriendReqInfo::clear_has_is_browsed_by_app() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RcFriendReqInfo::clear_is_browsed_by_app() {
  is_browsed_by_app_ = 0;
  clear_has_is_browsed_by_app();
}
inline ::youmecommon::protobuf::int32 RcFriendReqInfo::is_browsed_by_app() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqInfo.is_browsed_by_app)
  return is_browsed_by_app_;
}
inline void RcFriendReqInfo::set_is_browsed_by_app(::youmecommon::protobuf::int32 value) {
  set_has_is_browsed_by_app();
  is_browsed_by_app_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqInfo.is_browsed_by_app)
}

// -------------------------------------------------------------------

// GetRcFriendReqListReq

// required int32 version = 1;
inline bool GetRcFriendReqListReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRcFriendReqListReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRcFriendReqListReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRcFriendReqListReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetRcFriendReqListReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendReqListReq.version)
  return version_;
}
inline void GetRcFriendReqListReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendReqListReq.version)
}

// required int32 start_idx = 2;
inline bool GetRcFriendReqListReq::has_start_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRcFriendReqListReq::set_has_start_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRcFriendReqListReq::clear_has_start_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRcFriendReqListReq::clear_start_idx() {
  start_idx_ = 0;
  clear_has_start_idx();
}
inline ::youmecommon::protobuf::int32 GetRcFriendReqListReq::start_idx() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendReqListReq.start_idx)
  return start_idx_;
}
inline void GetRcFriendReqListReq::set_start_idx(::youmecommon::protobuf::int32 value) {
  set_has_start_idx();
  start_idx_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendReqListReq.start_idx)
}

// required int32 len = 3;
inline bool GetRcFriendReqListReq::has_len() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRcFriendReqListReq::set_has_len() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRcFriendReqListReq::clear_has_len() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRcFriendReqListReq::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::youmecommon::protobuf::int32 GetRcFriendReqListReq::len() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendReqListReq.len)
  return len_;
}
inline void GetRcFriendReqListReq::set_len(::youmecommon::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendReqListReq.len)
}

// -------------------------------------------------------------------

// GetRcFriendReqListRsp

// required int32 version = 1;
inline bool GetRcFriendReqListRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRcFriendReqListRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRcFriendReqListRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRcFriendReqListRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetRcFriendReqListRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendReqListRsp.version)
  return version_;
}
inline void GetRcFriendReqListRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendReqListRsp.version)
}

// required int32 ret = 2;
inline bool GetRcFriendReqListRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRcFriendReqListRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRcFriendReqListRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRcFriendReqListRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 GetRcFriendReqListRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendReqListRsp.ret)
  return ret_;
}
inline void GetRcFriendReqListRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendReqListRsp.ret)
}

// required int32 list_cnt = 3;
inline bool GetRcFriendReqListRsp::has_list_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRcFriendReqListRsp::set_has_list_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRcFriendReqListRsp::clear_has_list_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRcFriendReqListRsp::clear_list_cnt() {
  list_cnt_ = 0;
  clear_has_list_cnt();
}
inline ::youmecommon::protobuf::int32 GetRcFriendReqListRsp::list_cnt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendReqListRsp.list_cnt)
  return list_cnt_;
}
inline void GetRcFriendReqListRsp::set_list_cnt(::youmecommon::protobuf::int32 value) {
  set_has_list_cnt();
  list_cnt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcFriendReqListRsp.list_cnt)
}

// repeated .YOUMEServiceProtocol.RcFriendReqInfo friend_req_list = 4;
inline int GetRcFriendReqListRsp::friend_req_list_size() const {
  return friend_req_list_.size();
}
inline void GetRcFriendReqListRsp::clear_friend_req_list() {
  friend_req_list_.Clear();
}
inline const ::YOUMEServiceProtocol::RcFriendReqInfo& GetRcFriendReqListRsp::friend_req_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcFriendReqListRsp.friend_req_list)
  return friend_req_list_.Get(index);
}
inline ::YOUMEServiceProtocol::RcFriendReqInfo* GetRcFriendReqListRsp::mutable_friend_req_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetRcFriendReqListRsp.friend_req_list)
  return friend_req_list_.Mutable(index);
}
inline ::YOUMEServiceProtocol::RcFriendReqInfo* GetRcFriendReqListRsp::add_friend_req_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.GetRcFriendReqListRsp.friend_req_list)
  return friend_req_list_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendReqInfo >*
GetRcFriendReqListRsp::mutable_friend_req_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.GetRcFriendReqListRsp.friend_req_list)
  return &friend_req_list_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendReqInfo >&
GetRcFriendReqListRsp::friend_req_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.GetRcFriendReqListRsp.friend_req_list)
  return friend_req_list_;
}

// -------------------------------------------------------------------

// RcFriendReqIdx

// required int32 app_id = 1;
inline bool RcFriendReqIdx::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcFriendReqIdx::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcFriendReqIdx::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcFriendReqIdx::clear_app_id() {
  app_id_ = 0;
  clear_has_app_id();
}
inline ::youmecommon::protobuf::int32 RcFriendReqIdx::app_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqIdx.app_id)
  return app_id_;
}
inline void RcFriendReqIdx::set_app_id(::youmecommon::protobuf::int32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqIdx.app_id)
}

// required uint64 req_id = 2;
inline bool RcFriendReqIdx::has_req_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcFriendReqIdx::set_has_req_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcFriendReqIdx::clear_has_req_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcFriendReqIdx::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
  clear_has_req_id();
}
inline ::youmecommon::protobuf::uint64 RcFriendReqIdx::req_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqIdx.req_id)
  return req_id_;
}
inline void RcFriendReqIdx::set_req_id(::youmecommon::protobuf::uint64 value) {
  set_has_req_id();
  req_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqIdx.req_id)
}

// required .YOUMEServiceProtocol.RC_FRIEND_REQ_TYPE req_type = 3;
inline bool RcFriendReqIdx::has_req_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcFriendReqIdx::set_has_req_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcFriendReqIdx::clear_has_req_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcFriendReqIdx::clear_req_type() {
  req_type_ = 1;
  clear_has_req_type();
}
inline ::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE RcFriendReqIdx::req_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqIdx.req_type)
  return static_cast< ::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE >(req_type_);
}
inline void RcFriendReqIdx::set_req_type(::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE value) {
  assert(::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE_IsValid(value));
  set_has_req_type();
  req_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqIdx.req_type)
}

// required bytes other_side = 4;
inline bool RcFriendReqIdx::has_other_side() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RcFriendReqIdx::set_has_other_side() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RcFriendReqIdx::clear_has_other_side() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RcFriendReqIdx::clear_other_side() {
  other_side_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_other_side();
}
inline const ::std::string& RcFriendReqIdx::other_side() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqIdx.other_side)
  return other_side_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqIdx::set_other_side(const ::std::string& value) {
  set_has_other_side();
  other_side_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqIdx.other_side)
}
inline void RcFriendReqIdx::set_other_side(const char* value) {
  set_has_other_side();
  other_side_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqIdx.other_side)
}
inline void RcFriendReqIdx::set_other_side(const void* value, size_t size) {
  set_has_other_side();
  other_side_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqIdx.other_side)
}
inline ::std::string* RcFriendReqIdx::mutable_other_side() {
  set_has_other_side();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqIdx.other_side)
  return other_side_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqIdx::release_other_side() {
  clear_has_other_side();
  return other_side_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqIdx::set_allocated_other_side(::std::string* other_side) {
  if (other_side != NULL) {
    set_has_other_side();
  } else {
    clear_has_other_side();
  }
  other_side_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), other_side);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqIdx.other_side)
}

// -------------------------------------------------------------------

// AppBrowseRcFriendReqListReq

// required int32 version = 1;
inline bool AppBrowseRcFriendReqListReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppBrowseRcFriendReqListReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppBrowseRcFriendReqListReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppBrowseRcFriendReqListReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 AppBrowseRcFriendReqListReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppBrowseRcFriendReqListReq.version)
  return version_;
}
inline void AppBrowseRcFriendReqListReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppBrowseRcFriendReqListReq.version)
}

// repeated .YOUMEServiceProtocol.RcFriendReqIdx friend_req_list = 2;
inline int AppBrowseRcFriendReqListReq::friend_req_list_size() const {
  return friend_req_list_.size();
}
inline void AppBrowseRcFriendReqListReq::clear_friend_req_list() {
  friend_req_list_.Clear();
}
inline const ::YOUMEServiceProtocol::RcFriendReqIdx& AppBrowseRcFriendReqListReq::friend_req_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppBrowseRcFriendReqListReq.friend_req_list)
  return friend_req_list_.Get(index);
}
inline ::YOUMEServiceProtocol::RcFriendReqIdx* AppBrowseRcFriendReqListReq::mutable_friend_req_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppBrowseRcFriendReqListReq.friend_req_list)
  return friend_req_list_.Mutable(index);
}
inline ::YOUMEServiceProtocol::RcFriendReqIdx* AppBrowseRcFriendReqListReq::add_friend_req_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.AppBrowseRcFriendReqListReq.friend_req_list)
  return friend_req_list_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendReqIdx >*
AppBrowseRcFriendReqListReq::mutable_friend_req_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.AppBrowseRcFriendReqListReq.friend_req_list)
  return &friend_req_list_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendReqIdx >&
AppBrowseRcFriendReqListReq::friend_req_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.AppBrowseRcFriendReqListReq.friend_req_list)
  return friend_req_list_;
}

// -------------------------------------------------------------------

// AppBrowseRcFriendReqListRsp

// required int32 version = 1;
inline bool AppBrowseRcFriendReqListRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppBrowseRcFriendReqListRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppBrowseRcFriendReqListRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppBrowseRcFriendReqListRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 AppBrowseRcFriendReqListRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppBrowseRcFriendReqListRsp.version)
  return version_;
}
inline void AppBrowseRcFriendReqListRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppBrowseRcFriendReqListRsp.version)
}

// required int32 ret = 2;
inline bool AppBrowseRcFriendReqListRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppBrowseRcFriendReqListRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppBrowseRcFriendReqListRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppBrowseRcFriendReqListRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 AppBrowseRcFriendReqListRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppBrowseRcFriendReqListRsp.ret)
  return ret_;
}
inline void AppBrowseRcFriendReqListRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppBrowseRcFriendReqListRsp.ret)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5frc_5fget_5ffriend_5flist_2eproto__INCLUDED
