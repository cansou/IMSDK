// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_notify.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "youme_notify.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

void protobuf_ShutdownFile_youme_5fnotify_2eproto() {
  delete NotifyRsp::default_instance_;
  delete NotifyReq::default_instance_;
  delete NotifyReadRsp::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_youme_5fnotify_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_youme_5fnotify_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::YOUMECommonProtocol::protobuf_AddDesc_youme_5fcomm_2eproto();
  NotifyRsp::default_instance_ = new NotifyRsp();
  NotifyReq::default_instance_ = new NotifyReq();
  NotifyReadRsp::default_instance_ = new NotifyReadRsp();
  NotifyRsp::default_instance_->InitAsDefaultInstance();
  NotifyReq::default_instance_->InitAsDefaultInstance();
  NotifyReadRsp::default_instance_->InitAsDefaultInstance();
  ::youmecommon::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_youme_5fnotify_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_youme_5fnotify_2eproto_once_);
void protobuf_AddDesc_youme_5fnotify_2eproto() {
  ::youmecommon::protobuf::GoogleOnceInit(&protobuf_AddDesc_youme_5fnotify_2eproto_once_,
                 &protobuf_AddDesc_youme_5fnotify_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_youme_5fnotify_2eproto {
  StaticDescriptorInitializer_youme_5fnotify_2eproto() {
    protobuf_AddDesc_youme_5fnotify_2eproto();
  }
} static_descriptor_initializer_youme_5fnotify_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int NotifyRsp::kVersionFieldNumber;
const int NotifyRsp::kMsgFieldNumber;
const int NotifyRsp::kArgsFieldNumber;
#endif  // !_MSC_VER

NotifyRsp::NotifyRsp()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YOUMEServiceProtocol.NotifyRsp)
}

void NotifyRsp::InitAsDefaultInstance() {
}

NotifyRsp::NotifyRsp(const NotifyRsp& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YOUMEServiceProtocol.NotifyRsp)
}

void NotifyRsp::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  msg_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyRsp::~NotifyRsp() {
  // @@protoc_insertion_point(destructor:YOUMEServiceProtocol.NotifyRsp)
  SharedDtor();
}

void NotifyRsp::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void NotifyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const NotifyRsp& NotifyRsp::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_youme_5fnotify_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_youme_5fnotify_2eproto();
#endif
  return *default_instance_;
}

NotifyRsp* NotifyRsp::default_instance_ = NULL;

NotifyRsp* NotifyRsp::New(::youmecommon::protobuf::Arena* arena) const {
  NotifyRsp* n = new NotifyRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyRsp::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    version_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NotifyRsp::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YOUMEServiceProtocol.NotifyRsp)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_args;
        break;
      }

      // repeated .YOUMECommonProtocol.NameValue args = 3;
      case 3: {
        if (tag == 26) {
         parse_args:
          DO_(input->IncrementRecursionDepth());
         parse_loop_args:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_args;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YOUMEServiceProtocol.NotifyRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YOUMEServiceProtocol.NotifyRsp)
  return false;
#undef DO_
}

void NotifyRsp::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YOUMEServiceProtocol.NotifyRsp)
  // required int32 version = 1;
  if (has_version()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // repeated .YOUMECommonProtocol.NameValue args = 3;
  for (unsigned int i = 0, n = this->args_size(); i < n; i++) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->args(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YOUMEServiceProtocol.NotifyRsp)
}

int NotifyRsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_version()) {
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
int NotifyRsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());

    // required string msg = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .YOUMECommonProtocol.NameValue args = 3;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size +=
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->args(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyRsp::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const NotifyRsp*>(&from));
}

void NotifyRsp::MergeFrom(const NotifyRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  args_.MergeFrom(from.args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void NotifyRsp::CopyFrom(const NotifyRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::youmecommon::protobuf::internal::AllAreInitialized(this->args())) return false;
  return true;
}

void NotifyRsp::Swap(NotifyRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyRsp::InternalSwap(NotifyRsp* other) {
  std::swap(version_, other->version_);
  msg_.Swap(&other->msg_);
  args_.UnsafeArenaSwap(&other->args_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string NotifyRsp::GetTypeName() const {
  return "YOUMEServiceProtocol.NotifyRsp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyRsp

// required int32 version = 1;
bool NotifyRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NotifyRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void NotifyRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void NotifyRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
 ::youmecommon::protobuf::int32 NotifyRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyRsp.version)
  return version_;
}
 void NotifyRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyRsp.version)
}

// required string msg = 2;
bool NotifyRsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NotifyRsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void NotifyRsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void NotifyRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& NotifyRsp::msg() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyRsp.msg)
  return msg_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyRsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyRsp.msg)
}
 void NotifyRsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyRsp.msg)
}
 void NotifyRsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyRsp.msg)
}
 ::std::string* NotifyRsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyRsp.msg)
  return msg_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NotifyRsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyRsp.msg)
}

// repeated .YOUMECommonProtocol.NameValue args = 3;
int NotifyRsp::args_size() const {
  return args_.size();
}
void NotifyRsp::clear_args() {
  args_.Clear();
}
const ::YOUMECommonProtocol::NameValue& NotifyRsp::args(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyRsp.args)
  return args_.Get(index);
}
::YOUMECommonProtocol::NameValue* NotifyRsp::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyRsp.args)
  return args_.Mutable(index);
}
::YOUMECommonProtocol::NameValue* NotifyRsp::add_args() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.NotifyRsp.args)
  return args_.Add();
}
::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >*
NotifyRsp::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.NotifyRsp.args)
  return &args_;
}
const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >&
NotifyRsp::args() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.NotifyRsp.args)
  return args_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NotifyReq::kVersionFieldNumber;
const int NotifyReq::kNotifyTypeFieldNumber;
const int NotifyReq::kSnderIdFieldNumber;
const int NotifyReq::kRecverIdFieldNumber;
const int NotifyReq::kNotifyPropertyFieldNumber;
const int NotifyReq::kNotifyMsgFieldNumber;
const int NotifyReq::kNotifyArgsFieldNumber;
#endif  // !_MSC_VER

NotifyReq::NotifyReq()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YOUMEServiceProtocol.NotifyReq)
}

void NotifyReq::InitAsDefaultInstance() {
}

NotifyReq::NotifyReq(const NotifyReq& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YOUMEServiceProtocol.NotifyReq)
}

void NotifyReq::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  notify_type_ = 0;
  snder_id_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  recver_id_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  notify_property_ = 0;
  notify_msg_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyReq::~NotifyReq() {
  // @@protoc_insertion_point(destructor:YOUMEServiceProtocol.NotifyReq)
  SharedDtor();
}

void NotifyReq::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  snder_id_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  recver_id_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  notify_msg_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void NotifyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const NotifyReq& NotifyReq::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_youme_5fnotify_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_youme_5fnotify_2eproto();
#endif
  return *default_instance_;
}

NotifyReq* NotifyReq::default_instance_ = NULL;

NotifyReq* NotifyReq::New(::youmecommon::protobuf::Arena* arena) const {
  NotifyReq* n = new NotifyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NotifyReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(version_, notify_type_);
    if (has_snder_id()) {
      snder_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_recver_id()) {
      recver_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    notify_property_ = 0;
    if (has_notify_msg()) {
      notify_msg_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  notify_args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NotifyReq::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YOUMEServiceProtocol.NotifyReq)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_notify_type;
        break;
      }

      // required int32 notify_type = 2;
      case 2: {
        if (tag == 16) {
         parse_notify_type:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_type_)));
          set_has_notify_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_snder_id;
        break;
      }

      // required bytes snder_id = 3;
      case 3: {
        if (tag == 26) {
         parse_snder_id:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_snder_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_recver_id;
        break;
      }

      // required bytes recver_id = 4;
      case 4: {
        if (tag == 34) {
         parse_recver_id:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_recver_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_notify_property;
        break;
      }

      // required int32 notify_property = 5;
      case 5: {
        if (tag == 40) {
         parse_notify_property:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_property_)));
          set_has_notify_property();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_notify_msg;
        break;
      }

      // optional bytes notify_msg = 6;
      case 6: {
        if (tag == 50) {
         parse_notify_msg:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_notify_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_notify_args;
        break;
      }

      // repeated .YOUMECommonProtocol.NameValue notify_args = 7;
      case 7: {
        if (tag == 58) {
         parse_notify_args:
          DO_(input->IncrementRecursionDepth());
         parse_loop_notify_args:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_notify_args()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_notify_args;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YOUMEServiceProtocol.NotifyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YOUMEServiceProtocol.NotifyReq)
  return false;
#undef DO_
}

void NotifyReq::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YOUMEServiceProtocol.NotifyReq)
  // required int32 version = 1;
  if (has_version()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // required int32 notify_type = 2;
  if (has_notify_type()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(2, this->notify_type(), output);
  }

  // required bytes snder_id = 3;
  if (has_snder_id()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->snder_id(), output);
  }

  // required bytes recver_id = 4;
  if (has_recver_id()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->recver_id(), output);
  }

  // required int32 notify_property = 5;
  if (has_notify_property()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(5, this->notify_property(), output);
  }

  // optional bytes notify_msg = 6;
  if (has_notify_msg()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->notify_msg(), output);
  }

  // repeated .YOUMECommonProtocol.NameValue notify_args = 7;
  for (unsigned int i = 0, n = this->notify_args_size(); i < n; i++) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->notify_args(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YOUMEServiceProtocol.NotifyReq)
}

int NotifyReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_version()) {
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  if (has_notify_type()) {
    // required int32 notify_type = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->notify_type());
  }

  if (has_snder_id()) {
    // required bytes snder_id = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->snder_id());
  }

  if (has_recver_id()) {
    // required bytes recver_id = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->recver_id());
  }

  if (has_notify_property()) {
    // required int32 notify_property = 5;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->notify_property());
  }

  return total_size;
}
int NotifyReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());

    // required int32 notify_type = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->notify_type());

    // required bytes snder_id = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->snder_id());

    // required bytes recver_id = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->recver_id());

    // required int32 notify_property = 5;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->notify_property());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes notify_msg = 6;
  if (has_notify_msg()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->notify_msg());
  }

  // repeated .YOUMECommonProtocol.NameValue notify_args = 7;
  total_size += 1 * this->notify_args_size();
  for (int i = 0; i < this->notify_args_size(); i++) {
    total_size +=
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->notify_args(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyReq::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const NotifyReq*>(&from));
}

void NotifyReq::MergeFrom(const NotifyReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  notify_args_.MergeFrom(from.notify_args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
    if (from.has_snder_id()) {
      set_has_snder_id();
      snder_id_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.snder_id_);
    }
    if (from.has_recver_id()) {
      set_has_recver_id();
      recver_id_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.recver_id_);
    }
    if (from.has_notify_property()) {
      set_notify_property(from.notify_property());
    }
    if (from.has_notify_msg()) {
      set_has_notify_msg();
      notify_msg_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.notify_msg_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void NotifyReq::CopyFrom(const NotifyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (!::youmecommon::protobuf::internal::AllAreInitialized(this->notify_args())) return false;
  return true;
}

void NotifyReq::Swap(NotifyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyReq::InternalSwap(NotifyReq* other) {
  std::swap(version_, other->version_);
  std::swap(notify_type_, other->notify_type_);
  snder_id_.Swap(&other->snder_id_);
  recver_id_.Swap(&other->recver_id_);
  std::swap(notify_property_, other->notify_property_);
  notify_msg_.Swap(&other->notify_msg_);
  notify_args_.UnsafeArenaSwap(&other->notify_args_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string NotifyReq::GetTypeName() const {
  return "YOUMEServiceProtocol.NotifyReq";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyReq

// required int32 version = 1;
bool NotifyReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NotifyReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void NotifyReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void NotifyReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
 ::youmecommon::protobuf::int32 NotifyReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.version)
  return version_;
}
 void NotifyReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.version)
}

// required int32 notify_type = 2;
bool NotifyReq::has_notify_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NotifyReq::set_has_notify_type() {
  _has_bits_[0] |= 0x00000002u;
}
void NotifyReq::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void NotifyReq::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
 ::youmecommon::protobuf::int32 NotifyReq::notify_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.notify_type)
  return notify_type_;
}
 void NotifyReq::set_notify_type(::youmecommon::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.notify_type)
}

// required bytes snder_id = 3;
bool NotifyReq::has_snder_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NotifyReq::set_has_snder_id() {
  _has_bits_[0] |= 0x00000004u;
}
void NotifyReq::clear_has_snder_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void NotifyReq::clear_snder_id() {
  snder_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_snder_id();
}
 const ::std::string& NotifyReq::snder_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.snder_id)
  return snder_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyReq::set_snder_id(const ::std::string& value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.snder_id)
}
 void NotifyReq::set_snder_id(const char* value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyReq.snder_id)
}
 void NotifyReq::set_snder_id(const void* value, size_t size) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyReq.snder_id)
}
 ::std::string* NotifyReq::mutable_snder_id() {
  set_has_snder_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReq.snder_id)
  return snder_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NotifyReq::release_snder_id() {
  clear_has_snder_id();
  return snder_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyReq::set_allocated_snder_id(::std::string* snder_id) {
  if (snder_id != NULL) {
    set_has_snder_id();
  } else {
    clear_has_snder_id();
  }
  snder_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), snder_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyReq.snder_id)
}

// required bytes recver_id = 4;
bool NotifyReq::has_recver_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NotifyReq::set_has_recver_id() {
  _has_bits_[0] |= 0x00000008u;
}
void NotifyReq::clear_has_recver_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void NotifyReq::clear_recver_id() {
  recver_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recver_id();
}
 const ::std::string& NotifyReq::recver_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.recver_id)
  return recver_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyReq::set_recver_id(const ::std::string& value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.recver_id)
}
 void NotifyReq::set_recver_id(const char* value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyReq.recver_id)
}
 void NotifyReq::set_recver_id(const void* value, size_t size) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyReq.recver_id)
}
 ::std::string* NotifyReq::mutable_recver_id() {
  set_has_recver_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReq.recver_id)
  return recver_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NotifyReq::release_recver_id() {
  clear_has_recver_id();
  return recver_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyReq::set_allocated_recver_id(::std::string* recver_id) {
  if (recver_id != NULL) {
    set_has_recver_id();
  } else {
    clear_has_recver_id();
  }
  recver_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), recver_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyReq.recver_id)
}

// required int32 notify_property = 5;
bool NotifyReq::has_notify_property() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NotifyReq::set_has_notify_property() {
  _has_bits_[0] |= 0x00000010u;
}
void NotifyReq::clear_has_notify_property() {
  _has_bits_[0] &= ~0x00000010u;
}
void NotifyReq::clear_notify_property() {
  notify_property_ = 0;
  clear_has_notify_property();
}
 ::youmecommon::protobuf::int32 NotifyReq::notify_property() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.notify_property)
  return notify_property_;
}
 void NotifyReq::set_notify_property(::youmecommon::protobuf::int32 value) {
  set_has_notify_property();
  notify_property_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.notify_property)
}

// optional bytes notify_msg = 6;
bool NotifyReq::has_notify_msg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void NotifyReq::set_has_notify_msg() {
  _has_bits_[0] |= 0x00000020u;
}
void NotifyReq::clear_has_notify_msg() {
  _has_bits_[0] &= ~0x00000020u;
}
void NotifyReq::clear_notify_msg() {
  notify_msg_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_notify_msg();
}
 const ::std::string& NotifyReq::notify_msg() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.notify_msg)
  return notify_msg_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyReq::set_notify_msg(const ::std::string& value) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.notify_msg)
}
 void NotifyReq::set_notify_msg(const char* value) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyReq.notify_msg)
}
 void NotifyReq::set_notify_msg(const void* value, size_t size) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyReq.notify_msg)
}
 ::std::string* NotifyReq::mutable_notify_msg() {
  set_has_notify_msg();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReq.notify_msg)
  return notify_msg_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NotifyReq::release_notify_msg() {
  clear_has_notify_msg();
  return notify_msg_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyReq::set_allocated_notify_msg(::std::string* notify_msg) {
  if (notify_msg != NULL) {
    set_has_notify_msg();
  } else {
    clear_has_notify_msg();
  }
  notify_msg_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), notify_msg);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyReq.notify_msg)
}

// repeated .YOUMECommonProtocol.NameValue notify_args = 7;
int NotifyReq::notify_args_size() const {
  return notify_args_.size();
}
void NotifyReq::clear_notify_args() {
  notify_args_.Clear();
}
const ::YOUMECommonProtocol::NameValue& NotifyReq::notify_args(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.notify_args)
  return notify_args_.Get(index);
}
::YOUMECommonProtocol::NameValue* NotifyReq::mutable_notify_args(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReq.notify_args)
  return notify_args_.Mutable(index);
}
::YOUMECommonProtocol::NameValue* NotifyReq::add_notify_args() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.NotifyReq.notify_args)
  return notify_args_.Add();
}
::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >*
NotifyReq::mutable_notify_args() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.NotifyReq.notify_args)
  return &notify_args_;
}
const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >&
NotifyReq::notify_args() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.NotifyReq.notify_args)
  return notify_args_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int NotifyReadRsp::kVersionFieldNumber;
const int NotifyReadRsp::kChatTypeFieldNumber;
const int NotifyReadRsp::kSnderIdFieldNumber;
const int NotifyReadRsp::kRecverIdFieldNumber;
const int NotifyReadRsp::kMsgIdFieldNumber;
#endif  // !_MSC_VER

NotifyReadRsp::NotifyReadRsp()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YOUMEServiceProtocol.NotifyReadRsp)
}

void NotifyReadRsp::InitAsDefaultInstance() {
}

NotifyReadRsp::NotifyReadRsp(const NotifyReadRsp& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YOUMEServiceProtocol.NotifyReadRsp)
}

void NotifyReadRsp::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  chat_type_ = 0;
  snder_id_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  recver_id_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyReadRsp::~NotifyReadRsp() {
  // @@protoc_insertion_point(destructor:YOUMEServiceProtocol.NotifyReadRsp)
  SharedDtor();
}

void NotifyReadRsp::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  snder_id_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  recver_id_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void NotifyReadRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const NotifyReadRsp& NotifyReadRsp::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_youme_5fnotify_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_youme_5fnotify_2eproto();
#endif
  return *default_instance_;
}

NotifyReadRsp* NotifyReadRsp::default_instance_ = NULL;

NotifyReadRsp* NotifyReadRsp::New(::youmecommon::protobuf::Arena* arena) const {
  NotifyReadRsp* n = new NotifyReadRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyReadRsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NotifyReadRsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(version_, chat_type_);
    if (has_snder_id()) {
      snder_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_recver_id()) {
      recver_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    msg_id_ = GOOGLE_ULONGLONG(0);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NotifyReadRsp::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YOUMEServiceProtocol.NotifyReadRsp)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_chat_type;
        break;
      }

      // required int32 chat_type = 2;
      case 2: {
        if (tag == 16) {
         parse_chat_type:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_type_)));
          set_has_chat_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_snder_id;
        break;
      }

      // required bytes snder_id = 3;
      case 3: {
        if (tag == 26) {
         parse_snder_id:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_snder_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_recver_id;
        break;
      }

      // required bytes recver_id = 4;
      case 4: {
        if (tag == 34) {
         parse_recver_id:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_recver_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msg_id;
        break;
      }

      // required uint64 msg_id = 5;
      case 5: {
        if (tag == 40) {
         parse_msg_id:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::uint64, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msg_id_)));
          set_has_msg_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YOUMEServiceProtocol.NotifyReadRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YOUMEServiceProtocol.NotifyReadRsp)
  return false;
#undef DO_
}

void NotifyReadRsp::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YOUMEServiceProtocol.NotifyReadRsp)
  // required int32 version = 1;
  if (has_version()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // required int32 chat_type = 2;
  if (has_chat_type()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(2, this->chat_type(), output);
  }

  // required bytes snder_id = 3;
  if (has_snder_id()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->snder_id(), output);
  }

  // required bytes recver_id = 4;
  if (has_recver_id()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->recver_id(), output);
  }

  // required uint64 msg_id = 5;
  if (has_msg_id()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteUInt64(5, this->msg_id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YOUMEServiceProtocol.NotifyReadRsp)
}

int NotifyReadRsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_version()) {
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  if (has_chat_type()) {
    // required int32 chat_type = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->chat_type());
  }

  if (has_snder_id()) {
    // required bytes snder_id = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->snder_id());
  }

  if (has_recver_id()) {
    // required bytes recver_id = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->recver_id());
  }

  if (has_msg_id()) {
    // required uint64 msg_id = 5;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt64Size(
        this->msg_id());
  }

  return total_size;
}
int NotifyReadRsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());

    // required int32 chat_type = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->chat_type());

    // required bytes snder_id = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->snder_id());

    // required bytes recver_id = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->recver_id());

    // required uint64 msg_id = 5;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt64Size(
        this->msg_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyReadRsp::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const NotifyReadRsp*>(&from));
}

void NotifyReadRsp::MergeFrom(const NotifyReadRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_chat_type()) {
      set_chat_type(from.chat_type());
    }
    if (from.has_snder_id()) {
      set_has_snder_id();
      snder_id_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.snder_id_);
    }
    if (from.has_recver_id()) {
      set_has_recver_id();
      recver_id_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.recver_id_);
    }
    if (from.has_msg_id()) {
      set_msg_id(from.msg_id());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void NotifyReadRsp::CopyFrom(const NotifyReadRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyReadRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void NotifyReadRsp::Swap(NotifyReadRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyReadRsp::InternalSwap(NotifyReadRsp* other) {
  std::swap(version_, other->version_);
  std::swap(chat_type_, other->chat_type_);
  snder_id_.Swap(&other->snder_id_);
  recver_id_.Swap(&other->recver_id_);
  std::swap(msg_id_, other->msg_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string NotifyReadRsp::GetTypeName() const {
  return "YOUMEServiceProtocol.NotifyReadRsp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyReadRsp

// required int32 version = 1;
bool NotifyReadRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NotifyReadRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void NotifyReadRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void NotifyReadRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
 ::youmecommon::protobuf::int32 NotifyReadRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReadRsp.version)
  return version_;
}
 void NotifyReadRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReadRsp.version)
}

// required int32 chat_type = 2;
bool NotifyReadRsp::has_chat_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NotifyReadRsp::set_has_chat_type() {
  _has_bits_[0] |= 0x00000002u;
}
void NotifyReadRsp::clear_has_chat_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void NotifyReadRsp::clear_chat_type() {
  chat_type_ = 0;
  clear_has_chat_type();
}
 ::youmecommon::protobuf::int32 NotifyReadRsp::chat_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReadRsp.chat_type)
  return chat_type_;
}
 void NotifyReadRsp::set_chat_type(::youmecommon::protobuf::int32 value) {
  set_has_chat_type();
  chat_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReadRsp.chat_type)
}

// required bytes snder_id = 3;
bool NotifyReadRsp::has_snder_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NotifyReadRsp::set_has_snder_id() {
  _has_bits_[0] |= 0x00000004u;
}
void NotifyReadRsp::clear_has_snder_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void NotifyReadRsp::clear_snder_id() {
  snder_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_snder_id();
}
 const ::std::string& NotifyReadRsp::snder_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
  return snder_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyReadRsp::set_snder_id(const ::std::string& value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
}
 void NotifyReadRsp::set_snder_id(const char* value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
}
 void NotifyReadRsp::set_snder_id(const void* value, size_t size) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
}
 ::std::string* NotifyReadRsp::mutable_snder_id() {
  set_has_snder_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
  return snder_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NotifyReadRsp::release_snder_id() {
  clear_has_snder_id();
  return snder_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyReadRsp::set_allocated_snder_id(::std::string* snder_id) {
  if (snder_id != NULL) {
    set_has_snder_id();
  } else {
    clear_has_snder_id();
  }
  snder_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), snder_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
}

// required bytes recver_id = 4;
bool NotifyReadRsp::has_recver_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NotifyReadRsp::set_has_recver_id() {
  _has_bits_[0] |= 0x00000008u;
}
void NotifyReadRsp::clear_has_recver_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void NotifyReadRsp::clear_recver_id() {
  recver_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recver_id();
}
 const ::std::string& NotifyReadRsp::recver_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
  return recver_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyReadRsp::set_recver_id(const ::std::string& value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
}
 void NotifyReadRsp::set_recver_id(const char* value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
}
 void NotifyReadRsp::set_recver_id(const void* value, size_t size) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
}
 ::std::string* NotifyReadRsp::mutable_recver_id() {
  set_has_recver_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
  return recver_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NotifyReadRsp::release_recver_id() {
  clear_has_recver_id();
  return recver_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NotifyReadRsp::set_allocated_recver_id(::std::string* recver_id) {
  if (recver_id != NULL) {
    set_has_recver_id();
  } else {
    clear_has_recver_id();
  }
  recver_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), recver_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
}

// required uint64 msg_id = 5;
bool NotifyReadRsp::has_msg_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NotifyReadRsp::set_has_msg_id() {
  _has_bits_[0] |= 0x00000010u;
}
void NotifyReadRsp::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void NotifyReadRsp::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_id();
}
 ::youmecommon::protobuf::uint64 NotifyReadRsp::msg_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReadRsp.msg_id)
  return msg_id_;
}
 void NotifyReadRsp::set_msg_id(::youmecommon::protobuf::uint64 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReadRsp.msg_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)
