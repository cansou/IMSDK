// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_getdistrict.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "youme_getdistrict.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

void protobuf_ShutdownFile_youme_5fgetdistrict_2eproto() {
  delete GetDistrictReq::default_instance_;
  delete GetDistrictRsp::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_youme_5fgetdistrict_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_youme_5fgetdistrict_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::YOUMECommonProtocol::protobuf_AddDesc_youme_5fcomm_2eproto();
  GetDistrictReq::default_instance_ = new GetDistrictReq();
  GetDistrictRsp::default_instance_ = new GetDistrictRsp();
  GetDistrictReq::default_instance_->InitAsDefaultInstance();
  GetDistrictRsp::default_instance_->InitAsDefaultInstance();
  ::youmecommon::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_youme_5fgetdistrict_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_youme_5fgetdistrict_2eproto_once_);
void protobuf_AddDesc_youme_5fgetdistrict_2eproto() {
  ::youmecommon::protobuf::GoogleOnceInit(&protobuf_AddDesc_youme_5fgetdistrict_2eproto_once_,
                 &protobuf_AddDesc_youme_5fgetdistrict_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_youme_5fgetdistrict_2eproto {
  StaticDescriptorInitializer_youme_5fgetdistrict_2eproto() {
    protobuf_AddDesc_youme_5fgetdistrict_2eproto();
  }
} static_descriptor_initializer_youme_5fgetdistrict_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int GetDistrictReq::kVersionFieldNumber;
const int GetDistrictReq::kLongitudeFieldNumber;
const int GetDistrictReq::kLatitudeFieldNumber;
const int GetDistrictReq::kAdcodeFieldNumber;
const int GetDistrictReq::kKeywordsFieldNumber;
#endif  // !_MSC_VER

GetDistrictReq::GetDistrictReq()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YOUMEServiceProtocol.GetDistrictReq)
}

void GetDistrictReq::InitAsDefaultInstance() {
}

GetDistrictReq::GetDistrictReq(const GetDistrictReq& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YOUMEServiceProtocol.GetDistrictReq)
}

void GetDistrictReq::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  longitude_ = 0;
  latitude_ = 0;
  adcode_ = 0u;
  keywords_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDistrictReq::~GetDistrictReq() {
  // @@protoc_insertion_point(destructor:YOUMEServiceProtocol.GetDistrictReq)
  SharedDtor();
}

void GetDistrictReq::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  keywords_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void GetDistrictReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GetDistrictReq& GetDistrictReq::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_youme_5fgetdistrict_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_youme_5fgetdistrict_2eproto();
#endif
  return *default_instance_;
}

GetDistrictReq* GetDistrictReq::default_instance_ = NULL;

GetDistrictReq* GetDistrictReq::New(::youmecommon::protobuf::Arena* arena) const {
  GetDistrictReq* n = new GetDistrictReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDistrictReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetDistrictReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(longitude_, latitude_);
    if (has_keywords()) {
      keywords_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetDistrictReq::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YOUMEServiceProtocol.GetDistrictReq)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_longitude;
        break;
      }

      // required double longitude = 2;
      case 2: {
        if (tag == 17) {
         parse_longitude:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
          set_has_longitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_latitude;
        break;
      }

      // required double latitude = 3;
      case 3: {
        if (tag == 25) {
         parse_latitude:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
          set_has_latitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_adcode;
        break;
      }

      // optional uint32 adcode = 4;
      case 4: {
        if (tag == 32) {
         parse_adcode:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::uint32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adcode_)));
          set_has_adcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_keywords;
        break;
      }

      // optional string keywords = 5;
      case 5: {
        if (tag == 42) {
         parse_keywords:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keywords()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YOUMEServiceProtocol.GetDistrictReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YOUMEServiceProtocol.GetDistrictReq)
  return false;
#undef DO_
}

void GetDistrictReq::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YOUMEServiceProtocol.GetDistrictReq)
  // required int32 version = 1;
  if (has_version()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // required double longitude = 2;
  if (has_longitude()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // required double latitude = 3;
  if (has_latitude()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteDouble(3, this->latitude(), output);
  }

  // optional uint32 adcode = 4;
  if (has_adcode()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteUInt32(4, this->adcode(), output);
  }

  // optional string keywords = 5;
  if (has_keywords()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->keywords(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YOUMEServiceProtocol.GetDistrictReq)
}

int GetDistrictReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_version()) {
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  if (has_longitude()) {
    // required double longitude = 2;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double latitude = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
int GetDistrictReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());

    // required double longitude = 2;
    total_size += 1 + 8;

    // required double latitude = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 24u) {
    // optional uint32 adcode = 4;
    if (has_adcode()) {
      total_size += 1 +
        ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
          this->adcode());
    }

    // optional string keywords = 5;
    if (has_keywords()) {
      total_size += 1 +
        ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
          this->keywords());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDistrictReq::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const GetDistrictReq*>(&from));
}

void GetDistrictReq::MergeFrom(const GetDistrictReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_longitude()) {
      set_longitude(from.longitude());
    }
    if (from.has_latitude()) {
      set_latitude(from.latitude());
    }
    if (from.has_adcode()) {
      set_adcode(from.adcode());
    }
    if (from.has_keywords()) {
      set_has_keywords();
      keywords_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.keywords_);
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void GetDistrictReq::CopyFrom(const GetDistrictReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDistrictReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GetDistrictReq::Swap(GetDistrictReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDistrictReq::InternalSwap(GetDistrictReq* other) {
  std::swap(version_, other->version_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(adcode_, other->adcode_);
  keywords_.Swap(&other->keywords_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GetDistrictReq::GetTypeName() const {
  return "YOUMEServiceProtocol.GetDistrictReq";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDistrictReq

// required int32 version = 1;
bool GetDistrictReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetDistrictReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void GetDistrictReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetDistrictReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
 ::youmecommon::protobuf::int32 GetDistrictReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictReq.version)
  return version_;
}
 void GetDistrictReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictReq.version)
}

// required double longitude = 2;
bool GetDistrictReq::has_longitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetDistrictReq::set_has_longitude() {
  _has_bits_[0] |= 0x00000002u;
}
void GetDistrictReq::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetDistrictReq::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
 double GetDistrictReq::longitude() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictReq.longitude)
  return longitude_;
}
 void GetDistrictReq::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictReq.longitude)
}

// required double latitude = 3;
bool GetDistrictReq::has_latitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetDistrictReq::set_has_latitude() {
  _has_bits_[0] |= 0x00000004u;
}
void GetDistrictReq::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetDistrictReq::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
 double GetDistrictReq::latitude() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictReq.latitude)
  return latitude_;
}
 void GetDistrictReq::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictReq.latitude)
}

// optional uint32 adcode = 4;
bool GetDistrictReq::has_adcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetDistrictReq::set_has_adcode() {
  _has_bits_[0] |= 0x00000008u;
}
void GetDistrictReq::clear_has_adcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetDistrictReq::clear_adcode() {
  adcode_ = 0u;
  clear_has_adcode();
}
 ::youmecommon::protobuf::uint32 GetDistrictReq::adcode() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictReq.adcode)
  return adcode_;
}
 void GetDistrictReq::set_adcode(::youmecommon::protobuf::uint32 value) {
  set_has_adcode();
  adcode_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictReq.adcode)
}

// optional string keywords = 5;
bool GetDistrictReq::has_keywords() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetDistrictReq::set_has_keywords() {
  _has_bits_[0] |= 0x00000010u;
}
void GetDistrictReq::clear_has_keywords() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetDistrictReq::clear_keywords() {
  keywords_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keywords();
}
 const ::std::string& GetDistrictReq::keywords() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictReq.keywords)
  return keywords_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDistrictReq::set_keywords(const ::std::string& value) {
  set_has_keywords();
  keywords_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictReq.keywords)
}
 void GetDistrictReq::set_keywords(const char* value) {
  set_has_keywords();
  keywords_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetDistrictReq.keywords)
}
 void GetDistrictReq::set_keywords(const char* value, size_t size) {
  set_has_keywords();
  keywords_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetDistrictReq.keywords)
}
 ::std::string* GetDistrictReq::mutable_keywords() {
  set_has_keywords();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetDistrictReq.keywords)
  return keywords_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetDistrictReq::release_keywords() {
  clear_has_keywords();
  return keywords_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDistrictReq::set_allocated_keywords(::std::string* keywords) {
  if (keywords != NULL) {
    set_has_keywords();
  } else {
    clear_has_keywords();
  }
  keywords_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), keywords);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetDistrictReq.keywords)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int GetDistrictRsp::kVersionFieldNumber;
const int GetDistrictRsp::kRetFieldNumber;
const int GetDistrictRsp::kDistrictNameFieldNumber;
const int GetDistrictRsp::kDistrictLevelFieldNumber;
const int GetDistrictRsp::kCityCodeFieldNumber;
const int GetDistrictRsp::kAdcodeFieldNumber;
const int GetDistrictRsp::kHigherAdcodeFieldNumber;
const int GetDistrictRsp::kCityAdcodeFieldNumber;
const int GetDistrictRsp::kProvinceAdcodeFieldNumber;
#endif  // !_MSC_VER

GetDistrictRsp::GetDistrictRsp()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YOUMEServiceProtocol.GetDistrictRsp)
}

void GetDistrictRsp::InitAsDefaultInstance() {
}

GetDistrictRsp::GetDistrictRsp(const GetDistrictRsp& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YOUMEServiceProtocol.GetDistrictRsp)
}

void GetDistrictRsp::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  ret_ = 0;
  district_name_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  district_level_ = 1;
  city_code_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  adcode_ = 0u;
  higher_adcode_ = 0u;
  city_adcode_ = 0u;
  province_adcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDistrictRsp::~GetDistrictRsp() {
  // @@protoc_insertion_point(destructor:YOUMEServiceProtocol.GetDistrictRsp)
  SharedDtor();
}

void GetDistrictRsp::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  district_name_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  city_code_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void GetDistrictRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GetDistrictRsp& GetDistrictRsp::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_youme_5fgetdistrict_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_youme_5fgetdistrict_2eproto();
#endif
  return *default_instance_;
}

GetDistrictRsp* GetDistrictRsp::default_instance_ = NULL;

GetDistrictRsp* GetDistrictRsp::New(::youmecommon::protobuf::Arena* arena) const {
  GetDistrictRsp* n = new GetDistrictRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDistrictRsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetDistrictRsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(version_, ret_);
    ZR_(adcode_, city_adcode_);
    if (has_district_name()) {
      district_name_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    district_level_ = 1;
    if (has_city_code()) {
      city_code_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  province_adcode_ = 0u;

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetDistrictRsp::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YOUMEServiceProtocol.GetDistrictRsp)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // required int32 ret = 2;
      case 2: {
        if (tag == 16) {
         parse_ret:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_district_name;
        break;
      }

      // required string district_name = 3;
      case 3: {
        if (tag == 26) {
         parse_district_name:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_district_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_district_level;
        break;
      }

      // required .YOUMECommonProtocol.DistrictLevel district_level = 4;
      case 4: {
        if (tag == 32) {
         parse_district_level:
          int value;
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::YOUMECommonProtocol::DistrictLevel_IsValid(value)) {
            set_district_level(static_cast< ::YOUMECommonProtocol::DistrictLevel >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_city_code;
        break;
      }

      // required string city_code = 5;
      case 5: {
        if (tag == 42) {
         parse_city_code:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city_code()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_adcode;
        break;
      }

      // required uint32 adcode = 6;
      case 6: {
        if (tag == 48) {
         parse_adcode:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::uint32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adcode_)));
          set_has_adcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_higher_adcode;
        break;
      }

      // required uint32 higher_adcode = 7;
      case 7: {
        if (tag == 56) {
         parse_higher_adcode:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::uint32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &higher_adcode_)));
          set_has_higher_adcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_city_adcode;
        break;
      }

      // required uint32 city_adcode = 8;
      case 8: {
        if (tag == 64) {
         parse_city_adcode:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::uint32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &city_adcode_)));
          set_has_city_adcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_province_adcode;
        break;
      }

      // required uint32 province_adcode = 9;
      case 9: {
        if (tag == 72) {
         parse_province_adcode:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::uint32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &province_adcode_)));
          set_has_province_adcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YOUMEServiceProtocol.GetDistrictRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YOUMEServiceProtocol.GetDistrictRsp)
  return false;
#undef DO_
}

void GetDistrictRsp::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YOUMEServiceProtocol.GetDistrictRsp)
  // required int32 version = 1;
  if (has_version()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // required int32 ret = 2;
  if (has_ret()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  // required string district_name = 3;
  if (has_district_name()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->district_name(), output);
  }

  // required .YOUMECommonProtocol.DistrictLevel district_level = 4;
  if (has_district_level()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->district_level(), output);
  }

  // required string city_code = 5;
  if (has_city_code()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->city_code(), output);
  }

  // required uint32 adcode = 6;
  if (has_adcode()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteUInt32(6, this->adcode(), output);
  }

  // required uint32 higher_adcode = 7;
  if (has_higher_adcode()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteUInt32(7, this->higher_adcode(), output);
  }

  // required uint32 city_adcode = 8;
  if (has_city_adcode()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteUInt32(8, this->city_adcode(), output);
  }

  // required uint32 province_adcode = 9;
  if (has_province_adcode()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteUInt32(9, this->province_adcode(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YOUMEServiceProtocol.GetDistrictRsp)
}

int GetDistrictRsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_version()) {
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  if (has_ret()) {
    // required int32 ret = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  if (has_district_name()) {
    // required string district_name = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->district_name());
  }

  if (has_district_level()) {
    // required .YOUMECommonProtocol.DistrictLevel district_level = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->district_level());
  }

  if (has_city_code()) {
    // required string city_code = 5;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->city_code());
  }

  if (has_adcode()) {
    // required uint32 adcode = 6;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
        this->adcode());
  }

  if (has_higher_adcode()) {
    // required uint32 higher_adcode = 7;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
        this->higher_adcode());
  }

  if (has_city_adcode()) {
    // required uint32 city_adcode = 8;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
        this->city_adcode());
  }

  if (has_province_adcode()) {
    // required uint32 province_adcode = 9;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
        this->province_adcode());
  }

  return total_size;
}
int GetDistrictRsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());

    // required int32 ret = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());

    // required string district_name = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->district_name());

    // required .YOUMECommonProtocol.DistrictLevel district_level = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->district_level());

    // required string city_code = 5;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->city_code());

    // required uint32 adcode = 6;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
        this->adcode());

    // required uint32 higher_adcode = 7;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
        this->higher_adcode());

    // required uint32 city_adcode = 8;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
        this->city_adcode());

    // required uint32 province_adcode = 9;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
        this->province_adcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDistrictRsp::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const GetDistrictRsp*>(&from));
}

void GetDistrictRsp::MergeFrom(const GetDistrictRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_district_name()) {
      set_has_district_name();
      district_name_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.district_name_);
    }
    if (from.has_district_level()) {
      set_district_level(from.district_level());
    }
    if (from.has_city_code()) {
      set_has_city_code();
      city_code_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_code_);
    }
    if (from.has_adcode()) {
      set_adcode(from.adcode());
    }
    if (from.has_higher_adcode()) {
      set_higher_adcode(from.higher_adcode());
    }
    if (from.has_city_adcode()) {
      set_city_adcode(from.city_adcode());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_province_adcode()) {
      set_province_adcode(from.province_adcode());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void GetDistrictRsp::CopyFrom(const GetDistrictRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDistrictRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void GetDistrictRsp::Swap(GetDistrictRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDistrictRsp::InternalSwap(GetDistrictRsp* other) {
  std::swap(version_, other->version_);
  std::swap(ret_, other->ret_);
  district_name_.Swap(&other->district_name_);
  std::swap(district_level_, other->district_level_);
  city_code_.Swap(&other->city_code_);
  std::swap(adcode_, other->adcode_);
  std::swap(higher_adcode_, other->higher_adcode_);
  std::swap(city_adcode_, other->city_adcode_);
  std::swap(province_adcode_, other->province_adcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GetDistrictRsp::GetTypeName() const {
  return "YOUMEServiceProtocol.GetDistrictRsp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDistrictRsp

// required int32 version = 1;
bool GetDistrictRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetDistrictRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void GetDistrictRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetDistrictRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
 ::youmecommon::protobuf::int32 GetDistrictRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictRsp.version)
  return version_;
}
 void GetDistrictRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictRsp.version)
}

// required int32 ret = 2;
bool GetDistrictRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetDistrictRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
void GetDistrictRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetDistrictRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::youmecommon::protobuf::int32 GetDistrictRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictRsp.ret)
  return ret_;
}
 void GetDistrictRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictRsp.ret)
}

// required string district_name = 3;
bool GetDistrictRsp::has_district_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetDistrictRsp::set_has_district_name() {
  _has_bits_[0] |= 0x00000004u;
}
void GetDistrictRsp::clear_has_district_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetDistrictRsp::clear_district_name() {
  district_name_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_district_name();
}
 const ::std::string& GetDistrictRsp::district_name() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictRsp.district_name)
  return district_name_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDistrictRsp::set_district_name(const ::std::string& value) {
  set_has_district_name();
  district_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictRsp.district_name)
}
 void GetDistrictRsp::set_district_name(const char* value) {
  set_has_district_name();
  district_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetDistrictRsp.district_name)
}
 void GetDistrictRsp::set_district_name(const char* value, size_t size) {
  set_has_district_name();
  district_name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetDistrictRsp.district_name)
}
 ::std::string* GetDistrictRsp::mutable_district_name() {
  set_has_district_name();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetDistrictRsp.district_name)
  return district_name_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetDistrictRsp::release_district_name() {
  clear_has_district_name();
  return district_name_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDistrictRsp::set_allocated_district_name(::std::string* district_name) {
  if (district_name != NULL) {
    set_has_district_name();
  } else {
    clear_has_district_name();
  }
  district_name_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), district_name);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetDistrictRsp.district_name)
}

// required .YOUMECommonProtocol.DistrictLevel district_level = 4;
bool GetDistrictRsp::has_district_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetDistrictRsp::set_has_district_level() {
  _has_bits_[0] |= 0x00000008u;
}
void GetDistrictRsp::clear_has_district_level() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetDistrictRsp::clear_district_level() {
  district_level_ = 1;
  clear_has_district_level();
}
 ::YOUMECommonProtocol::DistrictLevel GetDistrictRsp::district_level() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictRsp.district_level)
  return static_cast< ::YOUMECommonProtocol::DistrictLevel >(district_level_);
}
 void GetDistrictRsp::set_district_level(::YOUMECommonProtocol::DistrictLevel value) {
  assert(::YOUMECommonProtocol::DistrictLevel_IsValid(value));
  set_has_district_level();
  district_level_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictRsp.district_level)
}

// required string city_code = 5;
bool GetDistrictRsp::has_city_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetDistrictRsp::set_has_city_code() {
  _has_bits_[0] |= 0x00000010u;
}
void GetDistrictRsp::clear_has_city_code() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetDistrictRsp::clear_city_code() {
  city_code_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city_code();
}
 const ::std::string& GetDistrictRsp::city_code() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictRsp.city_code)
  return city_code_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDistrictRsp::set_city_code(const ::std::string& value) {
  set_has_city_code();
  city_code_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictRsp.city_code)
}
 void GetDistrictRsp::set_city_code(const char* value) {
  set_has_city_code();
  city_code_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetDistrictRsp.city_code)
}
 void GetDistrictRsp::set_city_code(const char* value, size_t size) {
  set_has_city_code();
  city_code_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetDistrictRsp.city_code)
}
 ::std::string* GetDistrictRsp::mutable_city_code() {
  set_has_city_code();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetDistrictRsp.city_code)
  return city_code_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetDistrictRsp::release_city_code() {
  clear_has_city_code();
  return city_code_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetDistrictRsp::set_allocated_city_code(::std::string* city_code) {
  if (city_code != NULL) {
    set_has_city_code();
  } else {
    clear_has_city_code();
  }
  city_code_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), city_code);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetDistrictRsp.city_code)
}

// required uint32 adcode = 6;
bool GetDistrictRsp::has_adcode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetDistrictRsp::set_has_adcode() {
  _has_bits_[0] |= 0x00000020u;
}
void GetDistrictRsp::clear_has_adcode() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetDistrictRsp::clear_adcode() {
  adcode_ = 0u;
  clear_has_adcode();
}
 ::youmecommon::protobuf::uint32 GetDistrictRsp::adcode() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictRsp.adcode)
  return adcode_;
}
 void GetDistrictRsp::set_adcode(::youmecommon::protobuf::uint32 value) {
  set_has_adcode();
  adcode_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictRsp.adcode)
}

// required uint32 higher_adcode = 7;
bool GetDistrictRsp::has_higher_adcode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GetDistrictRsp::set_has_higher_adcode() {
  _has_bits_[0] |= 0x00000040u;
}
void GetDistrictRsp::clear_has_higher_adcode() {
  _has_bits_[0] &= ~0x00000040u;
}
void GetDistrictRsp::clear_higher_adcode() {
  higher_adcode_ = 0u;
  clear_has_higher_adcode();
}
 ::youmecommon::protobuf::uint32 GetDistrictRsp::higher_adcode() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictRsp.higher_adcode)
  return higher_adcode_;
}
 void GetDistrictRsp::set_higher_adcode(::youmecommon::protobuf::uint32 value) {
  set_has_higher_adcode();
  higher_adcode_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictRsp.higher_adcode)
}

// required uint32 city_adcode = 8;
bool GetDistrictRsp::has_city_adcode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GetDistrictRsp::set_has_city_adcode() {
  _has_bits_[0] |= 0x00000080u;
}
void GetDistrictRsp::clear_has_city_adcode() {
  _has_bits_[0] &= ~0x00000080u;
}
void GetDistrictRsp::clear_city_adcode() {
  city_adcode_ = 0u;
  clear_has_city_adcode();
}
 ::youmecommon::protobuf::uint32 GetDistrictRsp::city_adcode() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictRsp.city_adcode)
  return city_adcode_;
}
 void GetDistrictRsp::set_city_adcode(::youmecommon::protobuf::uint32 value) {
  set_has_city_adcode();
  city_adcode_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictRsp.city_adcode)
}

// required uint32 province_adcode = 9;
bool GetDistrictRsp::has_province_adcode() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GetDistrictRsp::set_has_province_adcode() {
  _has_bits_[0] |= 0x00000100u;
}
void GetDistrictRsp::clear_has_province_adcode() {
  _has_bits_[0] &= ~0x00000100u;
}
void GetDistrictRsp::clear_province_adcode() {
  province_adcode_ = 0u;
  clear_has_province_adcode();
}
 ::youmecommon::protobuf::uint32 GetDistrictRsp::province_adcode() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetDistrictRsp.province_adcode)
  return province_adcode_;
}
 void GetDistrictRsp::set_province_adcode(::youmecommon::protobuf::uint32 value) {
  set_has_province_adcode();
  province_adcode_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetDistrictRsp.province_adcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)
