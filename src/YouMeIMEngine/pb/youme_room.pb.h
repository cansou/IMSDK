// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_room.proto

#ifndef PROTOBUF_youme_5froom_2eproto__INCLUDED
#define PROTOBUF_youme_5froom_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5froom_2eproto();
void protobuf_AssignDesc_youme_5froom_2eproto();
void protobuf_ShutdownFile_youme_5froom_2eproto();

class EnterRoomReq;
class EnterRoomRsp;
class GetRoomInfoReq;
class GetRoomInfoRsp;
class LeaveAllRoomReq;
class LeaveAllRoomRsp;
class LeaveRoomReq;
class LeaveRoomRsp;
class YoumeRoomInfo;

// ===================================================================

class EnterRoomReq : public ::youmecommon::protobuf::MessageLite {
 public:
  EnterRoomReq();
  virtual ~EnterRoomReq();

  EnterRoomReq(const EnterRoomReq& from);

  inline EnterRoomReq& operator=(const EnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const EnterRoomReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnterRoomReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnterRoomReq* other);

  // implements Message ----------------------------------------------

  inline EnterRoomReq* New() const { return New(NULL); }

  EnterRoomReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const EnterRoomReq& from);
  void MergeFrom(const EnterRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterRoomReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  const ::std::string& room_id() const;
  void set_room_id(const ::std::string& value);
  void set_room_id(const char* value);
  void set_room_id(const void* value, size_t size);
  ::std::string* mutable_room_id();
  ::std::string* release_room_id();
  void set_allocated_room_id(::std::string* room_id);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.EnterRoomReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr room_id_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5froom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5froom_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5froom_2eproto();
  friend void protobuf_ShutdownFile_youme_5froom_2eproto();

  void InitAsDefaultInstance();
  static EnterRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class EnterRoomRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  EnterRoomRsp();
  virtual ~EnterRoomRsp();

  EnterRoomRsp(const EnterRoomRsp& from);

  inline EnterRoomRsp& operator=(const EnterRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const EnterRoomRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnterRoomRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnterRoomRsp* other);

  // implements Message ----------------------------------------------

  inline EnterRoomRsp* New() const { return New(NULL); }

  EnterRoomRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const EnterRoomRsp& from);
  void MergeFrom(const EnterRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterRoomRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.EnterRoomRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5froom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5froom_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5froom_2eproto();
  friend void protobuf_ShutdownFile_youme_5froom_2eproto();

  void InitAsDefaultInstance();
  static EnterRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class LeaveRoomReq : public ::youmecommon::protobuf::MessageLite {
 public:
  LeaveRoomReq();
  virtual ~LeaveRoomReq();

  LeaveRoomReq(const LeaveRoomReq& from);

  inline LeaveRoomReq& operator=(const LeaveRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const LeaveRoomReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LeaveRoomReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LeaveRoomReq* other);

  // implements Message ----------------------------------------------

  inline LeaveRoomReq* New() const { return New(NULL); }

  LeaveRoomReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const LeaveRoomReq& from);
  void MergeFrom(const LeaveRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaveRoomReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  const ::std::string& room_id() const;
  void set_room_id(const ::std::string& value);
  void set_room_id(const char* value);
  void set_room_id(const void* value, size_t size);
  ::std::string* mutable_room_id();
  ::std::string* release_room_id();
  void set_allocated_room_id(::std::string* room_id);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.LeaveRoomReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr room_id_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5froom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5froom_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5froom_2eproto();
  friend void protobuf_ShutdownFile_youme_5froom_2eproto();

  void InitAsDefaultInstance();
  static LeaveRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class LeaveRoomRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  LeaveRoomRsp();
  virtual ~LeaveRoomRsp();

  LeaveRoomRsp(const LeaveRoomRsp& from);

  inline LeaveRoomRsp& operator=(const LeaveRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const LeaveRoomRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LeaveRoomRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LeaveRoomRsp* other);

  // implements Message ----------------------------------------------

  inline LeaveRoomRsp* New() const { return New(NULL); }

  LeaveRoomRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const LeaveRoomRsp& from);
  void MergeFrom(const LeaveRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaveRoomRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.LeaveRoomRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  #ifdef youmecommon_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5froom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5froom_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5froom_2eproto();
  friend void protobuf_ShutdownFile_youme_5froom_2eproto();

  void InitAsDefaultInstance();
  static LeaveRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class LeaveAllRoomReq : public ::youmecommon::protobuf::MessageLite {
 public:
  LeaveAllRoomReq();
  virtual ~LeaveAllRoomReq();

  LeaveAllRoomReq(const LeaveAllRoomReq& from);

  inline LeaveAllRoomReq& operator=(const LeaveAllRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const LeaveAllRoomReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LeaveAllRoomReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LeaveAllRoomReq* other);

  // implements Message ----------------------------------------------

  inline LeaveAllRoomReq* New() const { return New(NULL); }

  LeaveAllRoomReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const LeaveAllRoomReq& from);
  void MergeFrom(const LeaveAllRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaveAllRoomReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.LeaveAllRoomReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5froom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5froom_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5froom_2eproto();
  friend void protobuf_ShutdownFile_youme_5froom_2eproto();

  void InitAsDefaultInstance();
  static LeaveAllRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class LeaveAllRoomRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  LeaveAllRoomRsp();
  virtual ~LeaveAllRoomRsp();

  LeaveAllRoomRsp(const LeaveAllRoomRsp& from);

  inline LeaveAllRoomRsp& operator=(const LeaveAllRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const LeaveAllRoomRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LeaveAllRoomRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LeaveAllRoomRsp* other);

  // implements Message ----------------------------------------------

  inline LeaveAllRoomRsp* New() const { return New(NULL); }

  LeaveAllRoomRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const LeaveAllRoomRsp& from);
  void MergeFrom(const LeaveAllRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaveAllRoomRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.LeaveAllRoomRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5froom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5froom_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5froom_2eproto();
  friend void protobuf_ShutdownFile_youme_5froom_2eproto();

  void InitAsDefaultInstance();
  static LeaveAllRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class GetRoomInfoReq : public ::youmecommon::protobuf::MessageLite {
 public:
  GetRoomInfoReq();
  virtual ~GetRoomInfoReq();

  GetRoomInfoReq(const GetRoomInfoReq& from);

  inline GetRoomInfoReq& operator=(const GetRoomInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetRoomInfoReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRoomInfoReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRoomInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetRoomInfoReq* New() const { return New(NULL); }

  GetRoomInfoReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetRoomInfoReq& from);
  void MergeFrom(const GetRoomInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRoomInfoReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  const ::std::string& room_id() const;
  void set_room_id(const ::std::string& value);
  void set_room_id(const char* value);
  void set_room_id(const void* value, size_t size);
  ::std::string* mutable_room_id();
  ::std::string* release_room_id();
  void set_allocated_room_id(::std::string* room_id);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetRoomInfoReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr room_id_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5froom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5froom_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5froom_2eproto();
  friend void protobuf_ShutdownFile_youme_5froom_2eproto();

  void InitAsDefaultInstance();
  static GetRoomInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class YoumeRoomInfo : public ::youmecommon::protobuf::MessageLite {
 public:
  YoumeRoomInfo();
  virtual ~YoumeRoomInfo();

  YoumeRoomInfo(const YoumeRoomInfo& from);

  inline YoumeRoomInfo& operator=(const YoumeRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const YoumeRoomInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const YoumeRoomInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(YoumeRoomInfo* other);

  // implements Message ----------------------------------------------

  inline YoumeRoomInfo* New() const { return New(NULL); }

  YoumeRoomInfo* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const YoumeRoomInfo& from);
  void MergeFrom(const YoumeRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(YoumeRoomInfo* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 member_cnt = 1;
  bool has_member_cnt() const;
  void clear_member_cnt();
  static const int kMemberCntFieldNumber = 1;
  ::youmecommon::protobuf::uint32 member_cnt() const;
  void set_member_cnt(::youmecommon::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.YoumeRoomInfo)
 private:
  inline void set_has_member_cnt();
  inline void clear_has_member_cnt();

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::uint32 member_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5froom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5froom_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5froom_2eproto();
  friend void protobuf_ShutdownFile_youme_5froom_2eproto();

  void InitAsDefaultInstance();
  static YoumeRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetRoomInfoRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  GetRoomInfoRsp();
  virtual ~GetRoomInfoRsp();

  GetRoomInfoRsp(const GetRoomInfoRsp& from);

  inline GetRoomInfoRsp& operator=(const GetRoomInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetRoomInfoRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRoomInfoRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRoomInfoRsp* other);

  // implements Message ----------------------------------------------

  inline GetRoomInfoRsp* New() const { return New(NULL); }

  GetRoomInfoRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetRoomInfoRsp& from);
  void MergeFrom(const GetRoomInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRoomInfoRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required .YOUMEServiceProtocol.YoumeRoomInfo room_info = 3;
  bool has_room_info() const;
  void clear_room_info();
  static const int kRoomInfoFieldNumber = 3;
  const ::YOUMEServiceProtocol::YoumeRoomInfo& room_info() const;
  ::YOUMEServiceProtocol::YoumeRoomInfo* mutable_room_info();
  ::YOUMEServiceProtocol::YoumeRoomInfo* release_room_info();
  void set_allocated_room_info(::YOUMEServiceProtocol::YoumeRoomInfo* room_info);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetRoomInfoRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_room_info();
  inline void clear_has_room_info();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::YOUMEServiceProtocol::YoumeRoomInfo* room_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5froom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5froom_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5froom_2eproto();
  friend void protobuf_ShutdownFile_youme_5froom_2eproto();

  void InitAsDefaultInstance();
  static GetRoomInfoRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoomReq

// required int32 version = 1;
inline bool EnterRoomReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 EnterRoomReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.EnterRoomReq.version)
  return version_;
}
inline void EnterRoomReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.EnterRoomReq.version)
}

// required bytes room_id = 2;
inline bool EnterRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterRoomReq::clear_room_id() {
  room_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_id();
}
inline const ::std::string& EnterRoomReq::room_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.EnterRoomReq.room_id)
  return room_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterRoomReq::set_room_id(const ::std::string& value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.EnterRoomReq.room_id)
}
inline void EnterRoomReq::set_room_id(const char* value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.EnterRoomReq.room_id)
}
inline void EnterRoomReq::set_room_id(const void* value, size_t size) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.EnterRoomReq.room_id)
}
inline ::std::string* EnterRoomReq::mutable_room_id() {
  set_has_room_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.EnterRoomReq.room_id)
  return room_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterRoomReq::release_room_id() {
  clear_has_room_id();
  return room_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterRoomReq::set_allocated_room_id(::std::string* room_id) {
  if (room_id != NULL) {
    set_has_room_id();
  } else {
    clear_has_room_id();
  }
  room_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), room_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.EnterRoomReq.room_id)
}

// -------------------------------------------------------------------

// EnterRoomRsp

// required int32 version = 1;
inline bool EnterRoomRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 EnterRoomRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.EnterRoomRsp.version)
  return version_;
}
inline void EnterRoomRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.EnterRoomRsp.version)
}

// required int32 ret = 2;
inline bool EnterRoomRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterRoomRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterRoomRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterRoomRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 EnterRoomRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.EnterRoomRsp.ret)
  return ret_;
}
inline void EnterRoomRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.EnterRoomRsp.ret)
}

// -------------------------------------------------------------------

// LeaveRoomReq

// required int32 version = 1;
inline bool LeaveRoomReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveRoomReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveRoomReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveRoomReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 LeaveRoomReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LeaveRoomReq.version)
  return version_;
}
inline void LeaveRoomReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LeaveRoomReq.version)
}

// required bytes room_id = 2;
inline bool LeaveRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaveRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaveRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaveRoomReq::clear_room_id() {
  room_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_id();
}
inline const ::std::string& LeaveRoomReq::room_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LeaveRoomReq.room_id)
  return room_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveRoomReq::set_room_id(const ::std::string& value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LeaveRoomReq.room_id)
}
inline void LeaveRoomReq::set_room_id(const char* value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.LeaveRoomReq.room_id)
}
inline void LeaveRoomReq::set_room_id(const void* value, size_t size) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.LeaveRoomReq.room_id)
}
inline ::std::string* LeaveRoomReq::mutable_room_id() {
  set_has_room_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.LeaveRoomReq.room_id)
  return room_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaveRoomReq::release_room_id() {
  clear_has_room_id();
  return room_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaveRoomReq::set_allocated_room_id(::std::string* room_id) {
  if (room_id != NULL) {
    set_has_room_id();
  } else {
    clear_has_room_id();
  }
  room_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), room_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.LeaveRoomReq.room_id)
}

// -------------------------------------------------------------------

// LeaveRoomRsp

// required int32 version = 1;
inline bool LeaveRoomRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveRoomRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveRoomRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveRoomRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 LeaveRoomRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LeaveRoomRsp.version)
  return version_;
}
inline void LeaveRoomRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LeaveRoomRsp.version)
}

// required int32 ret = 2;
inline bool LeaveRoomRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaveRoomRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaveRoomRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaveRoomRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 LeaveRoomRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LeaveRoomRsp.ret)
  return ret_;
}
inline void LeaveRoomRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LeaveRoomRsp.ret)
}

// -------------------------------------------------------------------

// LeaveAllRoomReq

// required int32 version = 1;
inline bool LeaveAllRoomReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveAllRoomReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveAllRoomReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveAllRoomReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 LeaveAllRoomReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LeaveAllRoomReq.version)
  return version_;
}
inline void LeaveAllRoomReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LeaveAllRoomReq.version)
}

// -------------------------------------------------------------------

// LeaveAllRoomRsp

// required int32 version = 1;
inline bool LeaveAllRoomRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveAllRoomRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveAllRoomRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveAllRoomRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 LeaveAllRoomRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LeaveAllRoomRsp.version)
  return version_;
}
inline void LeaveAllRoomRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LeaveAllRoomRsp.version)
}

// required int32 ret = 2;
inline bool LeaveAllRoomRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaveAllRoomRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaveAllRoomRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaveAllRoomRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 LeaveAllRoomRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.LeaveAllRoomRsp.ret)
  return ret_;
}
inline void LeaveAllRoomRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.LeaveAllRoomRsp.ret)
}

// -------------------------------------------------------------------

// GetRoomInfoReq

// required int32 version = 1;
inline bool GetRoomInfoReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRoomInfoReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRoomInfoReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRoomInfoReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetRoomInfoReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRoomInfoReq.version)
  return version_;
}
inline void GetRoomInfoReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRoomInfoReq.version)
}

// required bytes room_id = 2;
inline bool GetRoomInfoReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRoomInfoReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRoomInfoReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRoomInfoReq::clear_room_id() {
  room_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_id();
}
inline const ::std::string& GetRoomInfoReq::room_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRoomInfoReq.room_id)
  return room_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRoomInfoReq::set_room_id(const ::std::string& value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRoomInfoReq.room_id)
}
inline void GetRoomInfoReq::set_room_id(const char* value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetRoomInfoReq.room_id)
}
inline void GetRoomInfoReq::set_room_id(const void* value, size_t size) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetRoomInfoReq.room_id)
}
inline ::std::string* GetRoomInfoReq::mutable_room_id() {
  set_has_room_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetRoomInfoReq.room_id)
  return room_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRoomInfoReq::release_room_id() {
  clear_has_room_id();
  return room_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRoomInfoReq::set_allocated_room_id(::std::string* room_id) {
  if (room_id != NULL) {
    set_has_room_id();
  } else {
    clear_has_room_id();
  }
  room_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), room_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetRoomInfoReq.room_id)
}

// -------------------------------------------------------------------

// YoumeRoomInfo

// required uint32 member_cnt = 1;
inline bool YoumeRoomInfo::has_member_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YoumeRoomInfo::set_has_member_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YoumeRoomInfo::clear_has_member_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YoumeRoomInfo::clear_member_cnt() {
  member_cnt_ = 0u;
  clear_has_member_cnt();
}
inline ::youmecommon::protobuf::uint32 YoumeRoomInfo::member_cnt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.YoumeRoomInfo.member_cnt)
  return member_cnt_;
}
inline void YoumeRoomInfo::set_member_cnt(::youmecommon::protobuf::uint32 value) {
  set_has_member_cnt();
  member_cnt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.YoumeRoomInfo.member_cnt)
}

// -------------------------------------------------------------------

// GetRoomInfoRsp

// required int32 version = 1;
inline bool GetRoomInfoRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRoomInfoRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRoomInfoRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRoomInfoRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetRoomInfoRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRoomInfoRsp.version)
  return version_;
}
inline void GetRoomInfoRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRoomInfoRsp.version)
}

// required int32 ret = 2;
inline bool GetRoomInfoRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRoomInfoRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRoomInfoRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRoomInfoRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 GetRoomInfoRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRoomInfoRsp.ret)
  return ret_;
}
inline void GetRoomInfoRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRoomInfoRsp.ret)
}

// required .YOUMEServiceProtocol.YoumeRoomInfo room_info = 3;
inline bool GetRoomInfoRsp::has_room_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRoomInfoRsp::set_has_room_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRoomInfoRsp::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRoomInfoRsp::clear_room_info() {
  if (room_info_ != NULL) room_info_->::YOUMEServiceProtocol::YoumeRoomInfo::Clear();
  clear_has_room_info();
}
inline const ::YOUMEServiceProtocol::YoumeRoomInfo& GetRoomInfoRsp::room_info() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRoomInfoRsp.room_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return room_info_ != NULL ? *room_info_ : *default_instance().room_info_;
#else
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
#endif
}
inline ::YOUMEServiceProtocol::YoumeRoomInfo* GetRoomInfoRsp::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) {
    room_info_ = new ::YOUMEServiceProtocol::YoumeRoomInfo;
  }
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetRoomInfoRsp.room_info)
  return room_info_;
}
inline ::YOUMEServiceProtocol::YoumeRoomInfo* GetRoomInfoRsp::release_room_info() {
  clear_has_room_info();
  ::YOUMEServiceProtocol::YoumeRoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void GetRoomInfoRsp::set_allocated_room_info(::YOUMEServiceProtocol::YoumeRoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetRoomInfoRsp.room_info)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5froom_2eproto__INCLUDED
