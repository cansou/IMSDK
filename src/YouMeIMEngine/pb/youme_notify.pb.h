// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_notify.proto

#ifndef PROTOBUF_youme_5fnotify_2eproto__INCLUDED
#define PROTOBUF_youme_5fnotify_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <YouMeCommon/pb/youme_comm.pb.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5fnotify_2eproto();
void protobuf_AssignDesc_youme_5fnotify_2eproto();
void protobuf_ShutdownFile_youme_5fnotify_2eproto();

class NotifyReadRsp;
class NotifyReq;
class NotifyRsp;

// ===================================================================

class NotifyRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  NotifyRsp();
  virtual ~NotifyRsp();

  NotifyRsp(const NotifyRsp& from);

  inline NotifyRsp& operator=(const NotifyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const NotifyRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyRsp* other);

  // implements Message ----------------------------------------------

  inline NotifyRsp* New() const { return New(NULL); }

  NotifyRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const NotifyRsp& from);
  void MergeFrom(const NotifyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // repeated .YOUMECommonProtocol.NameValue args = 3;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 3;
  const ::YOUMECommonProtocol::NameValue& args(int index) const;
  ::YOUMECommonProtocol::NameValue* mutable_args(int index);
  ::YOUMECommonProtocol::NameValue* add_args();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >*
      mutable_args();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >&
      args() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.NotifyRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr msg_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue > args_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fnotify_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fnotify_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fnotify_2eproto();
  friend void protobuf_ShutdownFile_youme_5fnotify_2eproto();

  void InitAsDefaultInstance();
  static NotifyRsp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyReq : public ::youmecommon::protobuf::MessageLite {
 public:
  NotifyReq();
  virtual ~NotifyReq();

  NotifyReq(const NotifyReq& from);

  inline NotifyReq& operator=(const NotifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const NotifyReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyReq* other);

  // implements Message ----------------------------------------------

  inline NotifyReq* New() const { return New(NULL); }

  NotifyReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const NotifyReq& from);
  void MergeFrom(const NotifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 notify_type = 2;
  bool has_notify_type() const;
  void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 2;
  ::youmecommon::protobuf::int32 notify_type() const;
  void set_notify_type(::youmecommon::protobuf::int32 value);

  // required bytes snder_id = 3;
  bool has_snder_id() const;
  void clear_snder_id();
  static const int kSnderIdFieldNumber = 3;
  const ::std::string& snder_id() const;
  void set_snder_id(const ::std::string& value);
  void set_snder_id(const char* value);
  void set_snder_id(const void* value, size_t size);
  ::std::string* mutable_snder_id();
  ::std::string* release_snder_id();
  void set_allocated_snder_id(::std::string* snder_id);

  // required bytes recver_id = 4;
  bool has_recver_id() const;
  void clear_recver_id();
  static const int kRecverIdFieldNumber = 4;
  const ::std::string& recver_id() const;
  void set_recver_id(const ::std::string& value);
  void set_recver_id(const char* value);
  void set_recver_id(const void* value, size_t size);
  ::std::string* mutable_recver_id();
  ::std::string* release_recver_id();
  void set_allocated_recver_id(::std::string* recver_id);

  // required int32 notify_property = 5;
  bool has_notify_property() const;
  void clear_notify_property();
  static const int kNotifyPropertyFieldNumber = 5;
  ::youmecommon::protobuf::int32 notify_property() const;
  void set_notify_property(::youmecommon::protobuf::int32 value);

  // optional bytes notify_msg = 6;
  bool has_notify_msg() const;
  void clear_notify_msg();
  static const int kNotifyMsgFieldNumber = 6;
  const ::std::string& notify_msg() const;
  void set_notify_msg(const ::std::string& value);
  void set_notify_msg(const char* value);
  void set_notify_msg(const void* value, size_t size);
  ::std::string* mutable_notify_msg();
  ::std::string* release_notify_msg();
  void set_allocated_notify_msg(::std::string* notify_msg);

  // repeated .YOUMECommonProtocol.NameValue notify_args = 7;
  int notify_args_size() const;
  void clear_notify_args();
  static const int kNotifyArgsFieldNumber = 7;
  const ::YOUMECommonProtocol::NameValue& notify_args(int index) const;
  ::YOUMECommonProtocol::NameValue* mutable_notify_args(int index);
  ::YOUMECommonProtocol::NameValue* add_notify_args();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >*
      mutable_notify_args();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >&
      notify_args() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.NotifyReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_snder_id();
  inline void clear_has_snder_id();
  inline void set_has_recver_id();
  inline void clear_has_recver_id();
  inline void set_has_notify_property();
  inline void clear_has_notify_property();
  inline void set_has_notify_msg();
  inline void clear_has_notify_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 notify_type_;
  ::youmecommon::protobuf::internal::ArenaStringPtr snder_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr recver_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr notify_msg_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue > notify_args_;
  ::youmecommon::protobuf::int32 notify_property_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fnotify_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fnotify_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fnotify_2eproto();
  friend void protobuf_ShutdownFile_youme_5fnotify_2eproto();

  void InitAsDefaultInstance();
  static NotifyReq* default_instance_;
};
// -------------------------------------------------------------------

class NotifyReadRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  NotifyReadRsp();
  virtual ~NotifyReadRsp();

  NotifyReadRsp(const NotifyReadRsp& from);

  inline NotifyReadRsp& operator=(const NotifyReadRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const NotifyReadRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NotifyReadRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NotifyReadRsp* other);

  // implements Message ----------------------------------------------

  inline NotifyReadRsp* New() const { return New(NULL); }

  NotifyReadRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const NotifyReadRsp& from);
  void MergeFrom(const NotifyReadRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyReadRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 chat_type = 2;
  bool has_chat_type() const;
  void clear_chat_type();
  static const int kChatTypeFieldNumber = 2;
  ::youmecommon::protobuf::int32 chat_type() const;
  void set_chat_type(::youmecommon::protobuf::int32 value);

  // required bytes snder_id = 3;
  bool has_snder_id() const;
  void clear_snder_id();
  static const int kSnderIdFieldNumber = 3;
  const ::std::string& snder_id() const;
  void set_snder_id(const ::std::string& value);
  void set_snder_id(const char* value);
  void set_snder_id(const void* value, size_t size);
  ::std::string* mutable_snder_id();
  ::std::string* release_snder_id();
  void set_allocated_snder_id(::std::string* snder_id);

  // required bytes recver_id = 4;
  bool has_recver_id() const;
  void clear_recver_id();
  static const int kRecverIdFieldNumber = 4;
  const ::std::string& recver_id() const;
  void set_recver_id(const ::std::string& value);
  void set_recver_id(const char* value);
  void set_recver_id(const void* value, size_t size);
  ::std::string* mutable_recver_id();
  ::std::string* release_recver_id();
  void set_allocated_recver_id(::std::string* recver_id);

  // required uint64 msg_id = 5;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  ::youmecommon::protobuf::uint64 msg_id() const;
  void set_msg_id(::youmecommon::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.NotifyReadRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_chat_type();
  inline void clear_has_chat_type();
  inline void set_has_snder_id();
  inline void clear_has_snder_id();
  inline void set_has_recver_id();
  inline void clear_has_recver_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 chat_type_;
  ::youmecommon::protobuf::internal::ArenaStringPtr snder_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr recver_id_;
  ::youmecommon::protobuf::uint64 msg_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fnotify_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fnotify_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fnotify_2eproto();
  friend void protobuf_ShutdownFile_youme_5fnotify_2eproto();

  void InitAsDefaultInstance();
  static NotifyReadRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyRsp

// required int32 version = 1;
inline bool NotifyRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 NotifyRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyRsp.version)
  return version_;
}
inline void NotifyRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyRsp.version)
}

// required string msg = 2;
inline bool NotifyRsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& NotifyRsp::msg() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyRsp.msg)
  return msg_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyRsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyRsp.msg)
}
inline void NotifyRsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyRsp.msg)
}
inline void NotifyRsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyRsp.msg)
}
inline ::std::string* NotifyRsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyRsp.msg)
  return msg_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyRsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyRsp.msg)
}

// repeated .YOUMECommonProtocol.NameValue args = 3;
inline int NotifyRsp::args_size() const {
  return args_.size();
}
inline void NotifyRsp::clear_args() {
  args_.Clear();
}
inline const ::YOUMECommonProtocol::NameValue& NotifyRsp::args(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyRsp.args)
  return args_.Get(index);
}
inline ::YOUMECommonProtocol::NameValue* NotifyRsp::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyRsp.args)
  return args_.Mutable(index);
}
inline ::YOUMECommonProtocol::NameValue* NotifyRsp::add_args() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.NotifyRsp.args)
  return args_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >*
NotifyRsp::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.NotifyRsp.args)
  return &args_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >&
NotifyRsp::args() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.NotifyRsp.args)
  return args_;
}

// -------------------------------------------------------------------

// NotifyReq

// required int32 version = 1;
inline bool NotifyReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 NotifyReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.version)
  return version_;
}
inline void NotifyReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.version)
}

// required int32 notify_type = 2;
inline bool NotifyReq::has_notify_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyReq::set_has_notify_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyReq::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyReq::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
inline ::youmecommon::protobuf::int32 NotifyReq::notify_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.notify_type)
  return notify_type_;
}
inline void NotifyReq::set_notify_type(::youmecommon::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.notify_type)
}

// required bytes snder_id = 3;
inline bool NotifyReq::has_snder_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyReq::set_has_snder_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyReq::clear_has_snder_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyReq::clear_snder_id() {
  snder_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_snder_id();
}
inline const ::std::string& NotifyReq::snder_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.snder_id)
  return snder_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyReq::set_snder_id(const ::std::string& value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.snder_id)
}
inline void NotifyReq::set_snder_id(const char* value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyReq.snder_id)
}
inline void NotifyReq::set_snder_id(const void* value, size_t size) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyReq.snder_id)
}
inline ::std::string* NotifyReq::mutable_snder_id() {
  set_has_snder_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReq.snder_id)
  return snder_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyReq::release_snder_id() {
  clear_has_snder_id();
  return snder_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyReq::set_allocated_snder_id(::std::string* snder_id) {
  if (snder_id != NULL) {
    set_has_snder_id();
  } else {
    clear_has_snder_id();
  }
  snder_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), snder_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyReq.snder_id)
}

// required bytes recver_id = 4;
inline bool NotifyReq::has_recver_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyReq::set_has_recver_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyReq::clear_has_recver_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyReq::clear_recver_id() {
  recver_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recver_id();
}
inline const ::std::string& NotifyReq::recver_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.recver_id)
  return recver_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyReq::set_recver_id(const ::std::string& value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.recver_id)
}
inline void NotifyReq::set_recver_id(const char* value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyReq.recver_id)
}
inline void NotifyReq::set_recver_id(const void* value, size_t size) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyReq.recver_id)
}
inline ::std::string* NotifyReq::mutable_recver_id() {
  set_has_recver_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReq.recver_id)
  return recver_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyReq::release_recver_id() {
  clear_has_recver_id();
  return recver_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyReq::set_allocated_recver_id(::std::string* recver_id) {
  if (recver_id != NULL) {
    set_has_recver_id();
  } else {
    clear_has_recver_id();
  }
  recver_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), recver_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyReq.recver_id)
}

// required int32 notify_property = 5;
inline bool NotifyReq::has_notify_property() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyReq::set_has_notify_property() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyReq::clear_has_notify_property() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyReq::clear_notify_property() {
  notify_property_ = 0;
  clear_has_notify_property();
}
inline ::youmecommon::protobuf::int32 NotifyReq::notify_property() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.notify_property)
  return notify_property_;
}
inline void NotifyReq::set_notify_property(::youmecommon::protobuf::int32 value) {
  set_has_notify_property();
  notify_property_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.notify_property)
}

// optional bytes notify_msg = 6;
inline bool NotifyReq::has_notify_msg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyReq::set_has_notify_msg() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyReq::clear_has_notify_msg() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyReq::clear_notify_msg() {
  notify_msg_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_notify_msg();
}
inline const ::std::string& NotifyReq::notify_msg() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.notify_msg)
  return notify_msg_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyReq::set_notify_msg(const ::std::string& value) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReq.notify_msg)
}
inline void NotifyReq::set_notify_msg(const char* value) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyReq.notify_msg)
}
inline void NotifyReq::set_notify_msg(const void* value, size_t size) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyReq.notify_msg)
}
inline ::std::string* NotifyReq::mutable_notify_msg() {
  set_has_notify_msg();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReq.notify_msg)
  return notify_msg_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyReq::release_notify_msg() {
  clear_has_notify_msg();
  return notify_msg_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyReq::set_allocated_notify_msg(::std::string* notify_msg) {
  if (notify_msg != NULL) {
    set_has_notify_msg();
  } else {
    clear_has_notify_msg();
  }
  notify_msg_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), notify_msg);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyReq.notify_msg)
}

// repeated .YOUMECommonProtocol.NameValue notify_args = 7;
inline int NotifyReq::notify_args_size() const {
  return notify_args_.size();
}
inline void NotifyReq::clear_notify_args() {
  notify_args_.Clear();
}
inline const ::YOUMECommonProtocol::NameValue& NotifyReq::notify_args(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReq.notify_args)
  return notify_args_.Get(index);
}
inline ::YOUMECommonProtocol::NameValue* NotifyReq::mutable_notify_args(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReq.notify_args)
  return notify_args_.Mutable(index);
}
inline ::YOUMECommonProtocol::NameValue* NotifyReq::add_notify_args() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.NotifyReq.notify_args)
  return notify_args_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >*
NotifyReq::mutable_notify_args() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.NotifyReq.notify_args)
  return &notify_args_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >&
NotifyReq::notify_args() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.NotifyReq.notify_args)
  return notify_args_;
}

// -------------------------------------------------------------------

// NotifyReadRsp

// required int32 version = 1;
inline bool NotifyReadRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyReadRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyReadRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyReadRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 NotifyReadRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReadRsp.version)
  return version_;
}
inline void NotifyReadRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReadRsp.version)
}

// required int32 chat_type = 2;
inline bool NotifyReadRsp::has_chat_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyReadRsp::set_has_chat_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyReadRsp::clear_has_chat_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyReadRsp::clear_chat_type() {
  chat_type_ = 0;
  clear_has_chat_type();
}
inline ::youmecommon::protobuf::int32 NotifyReadRsp::chat_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReadRsp.chat_type)
  return chat_type_;
}
inline void NotifyReadRsp::set_chat_type(::youmecommon::protobuf::int32 value) {
  set_has_chat_type();
  chat_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReadRsp.chat_type)
}

// required bytes snder_id = 3;
inline bool NotifyReadRsp::has_snder_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyReadRsp::set_has_snder_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyReadRsp::clear_has_snder_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyReadRsp::clear_snder_id() {
  snder_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_snder_id();
}
inline const ::std::string& NotifyReadRsp::snder_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
  return snder_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyReadRsp::set_snder_id(const ::std::string& value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
}
inline void NotifyReadRsp::set_snder_id(const char* value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
}
inline void NotifyReadRsp::set_snder_id(const void* value, size_t size) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
}
inline ::std::string* NotifyReadRsp::mutable_snder_id() {
  set_has_snder_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
  return snder_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyReadRsp::release_snder_id() {
  clear_has_snder_id();
  return snder_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyReadRsp::set_allocated_snder_id(::std::string* snder_id) {
  if (snder_id != NULL) {
    set_has_snder_id();
  } else {
    clear_has_snder_id();
  }
  snder_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), snder_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyReadRsp.snder_id)
}

// required bytes recver_id = 4;
inline bool NotifyReadRsp::has_recver_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyReadRsp::set_has_recver_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyReadRsp::clear_has_recver_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyReadRsp::clear_recver_id() {
  recver_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recver_id();
}
inline const ::std::string& NotifyReadRsp::recver_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
  return recver_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyReadRsp::set_recver_id(const ::std::string& value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
}
inline void NotifyReadRsp::set_recver_id(const char* value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
}
inline void NotifyReadRsp::set_recver_id(const void* value, size_t size) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
}
inline ::std::string* NotifyReadRsp::mutable_recver_id() {
  set_has_recver_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
  return recver_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyReadRsp::release_recver_id() {
  clear_has_recver_id();
  return recver_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyReadRsp::set_allocated_recver_id(::std::string* recver_id) {
  if (recver_id != NULL) {
    set_has_recver_id();
  } else {
    clear_has_recver_id();
  }
  recver_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), recver_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.NotifyReadRsp.recver_id)
}

// required uint64 msg_id = 5;
inline bool NotifyReadRsp::has_msg_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyReadRsp::set_has_msg_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyReadRsp::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyReadRsp::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_id();
}
inline ::youmecommon::protobuf::uint64 NotifyReadRsp::msg_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.NotifyReadRsp.msg_id)
  return msg_id_;
}
inline void NotifyReadRsp::set_msg_id(::youmecommon::protobuf::uint64 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.NotifyReadRsp.msg_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5fnotify_2eproto__INCLUDED
