// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_mask_usermsg.proto

#ifndef PROTOBUF_youme_5fmask_5fusermsg_2eproto__INCLUDED
#define PROTOBUF_youme_5fmask_5fusermsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto();
void protobuf_AssignDesc_youme_5fmask_5fusermsg_2eproto();
void protobuf_ShutdownFile_youme_5fmask_5fusermsg_2eproto();

class CleanMaskMsgUserReq;
class CleanMaskMsgUserRsp;
class GetMaskMsgUserReq;
class GetMaskMsgUserRsp;
class SetMaskMsgUserReq;
class SetMaskMsgUserRsp;

// ===================================================================

class SetMaskMsgUserReq : public ::youmecommon::protobuf::MessageLite {
 public:
  SetMaskMsgUserReq();
  virtual ~SetMaskMsgUserReq();

  SetMaskMsgUserReq(const SetMaskMsgUserReq& from);

  inline SetMaskMsgUserReq& operator=(const SetMaskMsgUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const SetMaskMsgUserReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SetMaskMsgUserReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SetMaskMsgUserReq* other);

  // implements Message ----------------------------------------------

  inline SetMaskMsgUserReq* New() const { return New(NULL); }

  SetMaskMsgUserReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const SetMaskMsgUserReq& from);
  void MergeFrom(const SetMaskMsgUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetMaskMsgUserReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  const ::std::string& room_id() const;
  void set_room_id(const ::std::string& value);
  void set_room_id(const char* value);
  void set_room_id(const void* value, size_t size);
  ::std::string* mutable_room_id();
  ::std::string* release_room_id();
  void set_allocated_room_id(::std::string* room_id);

  // required int32 mask_right = 3;
  bool has_mask_right() const;
  void clear_mask_right();
  static const int kMaskRightFieldNumber = 3;
  ::youmecommon::protobuf::int32 mask_right() const;
  void set_mask_right(::youmecommon::protobuf::int32 value);

  // repeated bytes mask_user_list = 4;
  int mask_user_list_size() const;
  void clear_mask_user_list();
  static const int kMaskUserListFieldNumber = 4;
  const ::std::string& mask_user_list(int index) const;
  ::std::string* mutable_mask_user_list(int index);
  void set_mask_user_list(int index, const ::std::string& value);
  void set_mask_user_list(int index, const char* value);
  void set_mask_user_list(int index, const void* value, size_t size);
  ::std::string* add_mask_user_list();
  void add_mask_user_list(const ::std::string& value);
  void add_mask_user_list(const char* value);
  void add_mask_user_list(const void* value, size_t size);
  const ::youmecommon::protobuf::RepeatedPtrField< ::std::string>& mask_user_list() const;
  ::youmecommon::protobuf::RepeatedPtrField< ::std::string>* mutable_mask_user_list();

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.SetMaskMsgUserReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_mask_right();
  inline void clear_has_mask_right();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr room_id_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 mask_right_;
  ::youmecommon::protobuf::RepeatedPtrField< ::std::string> mask_user_list_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fmask_5fusermsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fmask_5fusermsg_2eproto();

  void InitAsDefaultInstance();
  static SetMaskMsgUserReq* default_instance_;
};
// -------------------------------------------------------------------

class SetMaskMsgUserRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  SetMaskMsgUserRsp();
  virtual ~SetMaskMsgUserRsp();

  SetMaskMsgUserRsp(const SetMaskMsgUserRsp& from);

  inline SetMaskMsgUserRsp& operator=(const SetMaskMsgUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const SetMaskMsgUserRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SetMaskMsgUserRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SetMaskMsgUserRsp* other);

  // implements Message ----------------------------------------------

  inline SetMaskMsgUserRsp* New() const { return New(NULL); }

  SetMaskMsgUserRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const SetMaskMsgUserRsp& from);
  void MergeFrom(const SetMaskMsgUserRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetMaskMsgUserRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.SetMaskMsgUserRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fmask_5fusermsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fmask_5fusermsg_2eproto();

  void InitAsDefaultInstance();
  static SetMaskMsgUserRsp* default_instance_;
};
// -------------------------------------------------------------------

class GetMaskMsgUserReq : public ::youmecommon::protobuf::MessageLite {
 public:
  GetMaskMsgUserReq();
  virtual ~GetMaskMsgUserReq();

  GetMaskMsgUserReq(const GetMaskMsgUserReq& from);

  inline GetMaskMsgUserReq& operator=(const GetMaskMsgUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetMaskMsgUserReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetMaskMsgUserReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetMaskMsgUserReq* other);

  // implements Message ----------------------------------------------

  inline GetMaskMsgUserReq* New() const { return New(NULL); }

  GetMaskMsgUserReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetMaskMsgUserReq& from);
  void MergeFrom(const GetMaskMsgUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetMaskMsgUserReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  const ::std::string& room_id() const;
  void set_room_id(const ::std::string& value);
  void set_room_id(const char* value);
  void set_room_id(const void* value, size_t size);
  ::std::string* mutable_room_id();
  ::std::string* release_room_id();
  void set_allocated_room_id(::std::string* room_id);

  // required int32 mask_right = 3;
  bool has_mask_right() const;
  void clear_mask_right();
  static const int kMaskRightFieldNumber = 3;
  ::youmecommon::protobuf::int32 mask_right() const;
  void set_mask_right(::youmecommon::protobuf::int32 value);

  // required uint64 mask_seq = 4;
  bool has_mask_seq() const;
  void clear_mask_seq();
  static const int kMaskSeqFieldNumber = 4;
  ::youmecommon::protobuf::uint64 mask_seq() const;
  void set_mask_seq(::youmecommon::protobuf::uint64 value);

  // optional uint32 number_limit = 5;
  bool has_number_limit() const;
  void clear_number_limit();
  static const int kNumberLimitFieldNumber = 5;
  ::youmecommon::protobuf::uint32 number_limit() const;
  void set_number_limit(::youmecommon::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetMaskMsgUserReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_mask_right();
  inline void clear_has_mask_right();
  inline void set_has_mask_seq();
  inline void clear_has_mask_seq();
  inline void set_has_number_limit();
  inline void clear_has_number_limit();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr room_id_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 mask_right_;
  ::youmecommon::protobuf::uint64 mask_seq_;
  ::youmecommon::protobuf::uint32 number_limit_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fmask_5fusermsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fmask_5fusermsg_2eproto();

  void InitAsDefaultInstance();
  static GetMaskMsgUserReq* default_instance_;
};
// -------------------------------------------------------------------

class GetMaskMsgUserRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  GetMaskMsgUserRsp();
  virtual ~GetMaskMsgUserRsp();

  GetMaskMsgUserRsp(const GetMaskMsgUserRsp& from);

  inline GetMaskMsgUserRsp& operator=(const GetMaskMsgUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetMaskMsgUserRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetMaskMsgUserRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetMaskMsgUserRsp* other);

  // implements Message ----------------------------------------------

  inline GetMaskMsgUserRsp* New() const { return New(NULL); }

  GetMaskMsgUserRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetMaskMsgUserRsp& from);
  void MergeFrom(const GetMaskMsgUserRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetMaskMsgUserRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required uint32 user_cnt = 3;
  bool has_user_cnt() const;
  void clear_user_cnt();
  static const int kUserCntFieldNumber = 3;
  ::youmecommon::protobuf::uint32 user_cnt() const;
  void set_user_cnt(::youmecommon::protobuf::uint32 value);

  // required uint64 mask_seq = 4;
  bool has_mask_seq() const;
  void clear_mask_seq();
  static const int kMaskSeqFieldNumber = 4;
  ::youmecommon::protobuf::uint64 mask_seq() const;
  void set_mask_seq(::youmecommon::protobuf::uint64 value);

  // repeated bytes mask_user_list = 5;
  int mask_user_list_size() const;
  void clear_mask_user_list();
  static const int kMaskUserListFieldNumber = 5;
  const ::std::string& mask_user_list(int index) const;
  ::std::string* mutable_mask_user_list(int index);
  void set_mask_user_list(int index, const ::std::string& value);
  void set_mask_user_list(int index, const char* value);
  void set_mask_user_list(int index, const void* value, size_t size);
  ::std::string* add_mask_user_list();
  void add_mask_user_list(const ::std::string& value);
  void add_mask_user_list(const char* value);
  void add_mask_user_list(const void* value, size_t size);
  const ::youmecommon::protobuf::RepeatedPtrField< ::std::string>& mask_user_list() const;
  ::youmecommon::protobuf::RepeatedPtrField< ::std::string>* mutable_mask_user_list();

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetMaskMsgUserRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_user_cnt();
  inline void clear_has_user_cnt();
  inline void set_has_mask_seq();
  inline void clear_has_mask_seq();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::uint64 mask_seq_;
  ::youmecommon::protobuf::RepeatedPtrField< ::std::string> mask_user_list_;
  ::youmecommon::protobuf::uint32 user_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fmask_5fusermsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fmask_5fusermsg_2eproto();

  void InitAsDefaultInstance();
  static GetMaskMsgUserRsp* default_instance_;
};
// -------------------------------------------------------------------

class CleanMaskMsgUserReq : public ::youmecommon::protobuf::MessageLite {
 public:
  CleanMaskMsgUserReq();
  virtual ~CleanMaskMsgUserReq();

  CleanMaskMsgUserReq(const CleanMaskMsgUserReq& from);

  inline CleanMaskMsgUserReq& operator=(const CleanMaskMsgUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const CleanMaskMsgUserReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CleanMaskMsgUserReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CleanMaskMsgUserReq* other);

  // implements Message ----------------------------------------------

  inline CleanMaskMsgUserReq* New() const { return New(NULL); }

  CleanMaskMsgUserReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const CleanMaskMsgUserReq& from);
  void MergeFrom(const CleanMaskMsgUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CleanMaskMsgUserReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  const ::std::string& room_id() const;
  void set_room_id(const ::std::string& value);
  void set_room_id(const char* value);
  void set_room_id(const void* value, size_t size);
  ::std::string* mutable_room_id();
  ::std::string* release_room_id();
  void set_allocated_room_id(::std::string* room_id);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.CleanMaskMsgUserReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr room_id_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fmask_5fusermsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fmask_5fusermsg_2eproto();

  void InitAsDefaultInstance();
  static CleanMaskMsgUserReq* default_instance_;
};
// -------------------------------------------------------------------

class CleanMaskMsgUserRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  CleanMaskMsgUserRsp();
  virtual ~CleanMaskMsgUserRsp();

  CleanMaskMsgUserRsp(const CleanMaskMsgUserRsp& from);

  inline CleanMaskMsgUserRsp& operator=(const CleanMaskMsgUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const CleanMaskMsgUserRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CleanMaskMsgUserRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CleanMaskMsgUserRsp* other);

  // implements Message ----------------------------------------------

  inline CleanMaskMsgUserRsp* New() const { return New(NULL); }

  CleanMaskMsgUserRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const CleanMaskMsgUserRsp& from);
  void MergeFrom(const CleanMaskMsgUserRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CleanMaskMsgUserRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.CleanMaskMsgUserRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fmask_5fusermsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fmask_5fusermsg_2eproto();
  friend void protobuf_ShutdownFile_youme_5fmask_5fusermsg_2eproto();

  void InitAsDefaultInstance();
  static CleanMaskMsgUserRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SetMaskMsgUserReq

// required int32 version = 1;
inline bool SetMaskMsgUserReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetMaskMsgUserReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetMaskMsgUserReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetMaskMsgUserReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 SetMaskMsgUserReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SetMaskMsgUserReq.version)
  return version_;
}
inline void SetMaskMsgUserReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SetMaskMsgUserReq.version)
}

// required bytes room_id = 2;
inline bool SetMaskMsgUserReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetMaskMsgUserReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetMaskMsgUserReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetMaskMsgUserReq::clear_room_id() {
  room_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_id();
}
inline const ::std::string& SetMaskMsgUserReq::room_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SetMaskMsgUserReq.room_id)
  return room_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetMaskMsgUserReq::set_room_id(const ::std::string& value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SetMaskMsgUserReq.room_id)
}
inline void SetMaskMsgUserReq::set_room_id(const char* value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.SetMaskMsgUserReq.room_id)
}
inline void SetMaskMsgUserReq::set_room_id(const void* value, size_t size) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.SetMaskMsgUserReq.room_id)
}
inline ::std::string* SetMaskMsgUserReq::mutable_room_id() {
  set_has_room_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.SetMaskMsgUserReq.room_id)
  return room_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetMaskMsgUserReq::release_room_id() {
  clear_has_room_id();
  return room_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetMaskMsgUserReq::set_allocated_room_id(::std::string* room_id) {
  if (room_id != NULL) {
    set_has_room_id();
  } else {
    clear_has_room_id();
  }
  room_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), room_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.SetMaskMsgUserReq.room_id)
}

// required int32 mask_right = 3;
inline bool SetMaskMsgUserReq::has_mask_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetMaskMsgUserReq::set_has_mask_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetMaskMsgUserReq::clear_has_mask_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetMaskMsgUserReq::clear_mask_right() {
  mask_right_ = 0;
  clear_has_mask_right();
}
inline ::youmecommon::protobuf::int32 SetMaskMsgUserReq::mask_right() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_right)
  return mask_right_;
}
inline void SetMaskMsgUserReq::set_mask_right(::youmecommon::protobuf::int32 value) {
  set_has_mask_right();
  mask_right_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_right)
}

// repeated bytes mask_user_list = 4;
inline int SetMaskMsgUserReq::mask_user_list_size() const {
  return mask_user_list_.size();
}
inline void SetMaskMsgUserReq::clear_mask_user_list() {
  mask_user_list_.Clear();
}
inline const ::std::string& SetMaskMsgUserReq::mask_user_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_user_list)
  return mask_user_list_.Get(index);
}
inline ::std::string* SetMaskMsgUserReq::mutable_mask_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_user_list)
  return mask_user_list_.Mutable(index);
}
inline void SetMaskMsgUserReq::set_mask_user_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_user_list)
  mask_user_list_.Mutable(index)->assign(value);
}
inline void SetMaskMsgUserReq::set_mask_user_list(int index, const char* value) {
  mask_user_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_user_list)
}
inline void SetMaskMsgUserReq::set_mask_user_list(int index, const void* value, size_t size) {
  mask_user_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_user_list)
}
inline ::std::string* SetMaskMsgUserReq::add_mask_user_list() {
  return mask_user_list_.Add();
}
inline void SetMaskMsgUserReq::add_mask_user_list(const ::std::string& value) {
  mask_user_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_user_list)
}
inline void SetMaskMsgUserReq::add_mask_user_list(const char* value) {
  mask_user_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_user_list)
}
inline void SetMaskMsgUserReq::add_mask_user_list(const void* value, size_t size) {
  mask_user_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_user_list)
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::std::string>&
SetMaskMsgUserReq::mask_user_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_user_list)
  return mask_user_list_;
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::std::string>*
SetMaskMsgUserReq::mutable_mask_user_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.SetMaskMsgUserReq.mask_user_list)
  return &mask_user_list_;
}

// -------------------------------------------------------------------

// SetMaskMsgUserRsp

// required int32 version = 1;
inline bool SetMaskMsgUserRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetMaskMsgUserRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetMaskMsgUserRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetMaskMsgUserRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 SetMaskMsgUserRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SetMaskMsgUserRsp.version)
  return version_;
}
inline void SetMaskMsgUserRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SetMaskMsgUserRsp.version)
}

// required int32 ret = 2;
inline bool SetMaskMsgUserRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetMaskMsgUserRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetMaskMsgUserRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetMaskMsgUserRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 SetMaskMsgUserRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.SetMaskMsgUserRsp.ret)
  return ret_;
}
inline void SetMaskMsgUserRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.SetMaskMsgUserRsp.ret)
}

// -------------------------------------------------------------------

// GetMaskMsgUserReq

// required int32 version = 1;
inline bool GetMaskMsgUserReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMaskMsgUserReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMaskMsgUserReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMaskMsgUserReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetMaskMsgUserReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetMaskMsgUserReq.version)
  return version_;
}
inline void GetMaskMsgUserReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetMaskMsgUserReq.version)
}

// required bytes room_id = 2;
inline bool GetMaskMsgUserReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMaskMsgUserReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMaskMsgUserReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMaskMsgUserReq::clear_room_id() {
  room_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_id();
}
inline const ::std::string& GetMaskMsgUserReq::room_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetMaskMsgUserReq.room_id)
  return room_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMaskMsgUserReq::set_room_id(const ::std::string& value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetMaskMsgUserReq.room_id)
}
inline void GetMaskMsgUserReq::set_room_id(const char* value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetMaskMsgUserReq.room_id)
}
inline void GetMaskMsgUserReq::set_room_id(const void* value, size_t size) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetMaskMsgUserReq.room_id)
}
inline ::std::string* GetMaskMsgUserReq::mutable_room_id() {
  set_has_room_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetMaskMsgUserReq.room_id)
  return room_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMaskMsgUserReq::release_room_id() {
  clear_has_room_id();
  return room_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMaskMsgUserReq::set_allocated_room_id(::std::string* room_id) {
  if (room_id != NULL) {
    set_has_room_id();
  } else {
    clear_has_room_id();
  }
  room_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), room_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetMaskMsgUserReq.room_id)
}

// required int32 mask_right = 3;
inline bool GetMaskMsgUserReq::has_mask_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMaskMsgUserReq::set_has_mask_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMaskMsgUserReq::clear_has_mask_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMaskMsgUserReq::clear_mask_right() {
  mask_right_ = 0;
  clear_has_mask_right();
}
inline ::youmecommon::protobuf::int32 GetMaskMsgUserReq::mask_right() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetMaskMsgUserReq.mask_right)
  return mask_right_;
}
inline void GetMaskMsgUserReq::set_mask_right(::youmecommon::protobuf::int32 value) {
  set_has_mask_right();
  mask_right_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetMaskMsgUserReq.mask_right)
}

// required uint64 mask_seq = 4;
inline bool GetMaskMsgUserReq::has_mask_seq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetMaskMsgUserReq::set_has_mask_seq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetMaskMsgUserReq::clear_has_mask_seq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetMaskMsgUserReq::clear_mask_seq() {
  mask_seq_ = GOOGLE_ULONGLONG(0);
  clear_has_mask_seq();
}
inline ::youmecommon::protobuf::uint64 GetMaskMsgUserReq::mask_seq() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetMaskMsgUserReq.mask_seq)
  return mask_seq_;
}
inline void GetMaskMsgUserReq::set_mask_seq(::youmecommon::protobuf::uint64 value) {
  set_has_mask_seq();
  mask_seq_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetMaskMsgUserReq.mask_seq)
}

// optional uint32 number_limit = 5;
inline bool GetMaskMsgUserReq::has_number_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetMaskMsgUserReq::set_has_number_limit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetMaskMsgUserReq::clear_has_number_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetMaskMsgUserReq::clear_number_limit() {
  number_limit_ = 0u;
  clear_has_number_limit();
}
inline ::youmecommon::protobuf::uint32 GetMaskMsgUserReq::number_limit() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetMaskMsgUserReq.number_limit)
  return number_limit_;
}
inline void GetMaskMsgUserReq::set_number_limit(::youmecommon::protobuf::uint32 value) {
  set_has_number_limit();
  number_limit_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetMaskMsgUserReq.number_limit)
}

// -------------------------------------------------------------------

// GetMaskMsgUserRsp

// required int32 version = 1;
inline bool GetMaskMsgUserRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMaskMsgUserRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMaskMsgUserRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMaskMsgUserRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetMaskMsgUserRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetMaskMsgUserRsp.version)
  return version_;
}
inline void GetMaskMsgUserRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetMaskMsgUserRsp.version)
}

// required int32 ret = 2;
inline bool GetMaskMsgUserRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMaskMsgUserRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMaskMsgUserRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMaskMsgUserRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 GetMaskMsgUserRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetMaskMsgUserRsp.ret)
  return ret_;
}
inline void GetMaskMsgUserRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetMaskMsgUserRsp.ret)
}

// required uint32 user_cnt = 3;
inline bool GetMaskMsgUserRsp::has_user_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMaskMsgUserRsp::set_has_user_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMaskMsgUserRsp::clear_has_user_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMaskMsgUserRsp::clear_user_cnt() {
  user_cnt_ = 0u;
  clear_has_user_cnt();
}
inline ::youmecommon::protobuf::uint32 GetMaskMsgUserRsp::user_cnt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetMaskMsgUserRsp.user_cnt)
  return user_cnt_;
}
inline void GetMaskMsgUserRsp::set_user_cnt(::youmecommon::protobuf::uint32 value) {
  set_has_user_cnt();
  user_cnt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetMaskMsgUserRsp.user_cnt)
}

// required uint64 mask_seq = 4;
inline bool GetMaskMsgUserRsp::has_mask_seq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetMaskMsgUserRsp::set_has_mask_seq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetMaskMsgUserRsp::clear_has_mask_seq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetMaskMsgUserRsp::clear_mask_seq() {
  mask_seq_ = GOOGLE_ULONGLONG(0);
  clear_has_mask_seq();
}
inline ::youmecommon::protobuf::uint64 GetMaskMsgUserRsp::mask_seq() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_seq)
  return mask_seq_;
}
inline void GetMaskMsgUserRsp::set_mask_seq(::youmecommon::protobuf::uint64 value) {
  set_has_mask_seq();
  mask_seq_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_seq)
}

// repeated bytes mask_user_list = 5;
inline int GetMaskMsgUserRsp::mask_user_list_size() const {
  return mask_user_list_.size();
}
inline void GetMaskMsgUserRsp::clear_mask_user_list() {
  mask_user_list_.Clear();
}
inline const ::std::string& GetMaskMsgUserRsp::mask_user_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_user_list)
  return mask_user_list_.Get(index);
}
inline ::std::string* GetMaskMsgUserRsp::mutable_mask_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_user_list)
  return mask_user_list_.Mutable(index);
}
inline void GetMaskMsgUserRsp::set_mask_user_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_user_list)
  mask_user_list_.Mutable(index)->assign(value);
}
inline void GetMaskMsgUserRsp::set_mask_user_list(int index, const char* value) {
  mask_user_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_user_list)
}
inline void GetMaskMsgUserRsp::set_mask_user_list(int index, const void* value, size_t size) {
  mask_user_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_user_list)
}
inline ::std::string* GetMaskMsgUserRsp::add_mask_user_list() {
  return mask_user_list_.Add();
}
inline void GetMaskMsgUserRsp::add_mask_user_list(const ::std::string& value) {
  mask_user_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_user_list)
}
inline void GetMaskMsgUserRsp::add_mask_user_list(const char* value) {
  mask_user_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_user_list)
}
inline void GetMaskMsgUserRsp::add_mask_user_list(const void* value, size_t size) {
  mask_user_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_user_list)
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::std::string>&
GetMaskMsgUserRsp::mask_user_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_user_list)
  return mask_user_list_;
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::std::string>*
GetMaskMsgUserRsp::mutable_mask_user_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.GetMaskMsgUserRsp.mask_user_list)
  return &mask_user_list_;
}

// -------------------------------------------------------------------

// CleanMaskMsgUserReq

// required int32 version = 1;
inline bool CleanMaskMsgUserReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CleanMaskMsgUserReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CleanMaskMsgUserReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CleanMaskMsgUserReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 CleanMaskMsgUserReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.CleanMaskMsgUserReq.version)
  return version_;
}
inline void CleanMaskMsgUserReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.CleanMaskMsgUserReq.version)
}

// required bytes room_id = 2;
inline bool CleanMaskMsgUserReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CleanMaskMsgUserReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CleanMaskMsgUserReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CleanMaskMsgUserReq::clear_room_id() {
  room_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_id();
}
inline const ::std::string& CleanMaskMsgUserReq::room_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.CleanMaskMsgUserReq.room_id)
  return room_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CleanMaskMsgUserReq::set_room_id(const ::std::string& value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.CleanMaskMsgUserReq.room_id)
}
inline void CleanMaskMsgUserReq::set_room_id(const char* value) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.CleanMaskMsgUserReq.room_id)
}
inline void CleanMaskMsgUserReq::set_room_id(const void* value, size_t size) {
  set_has_room_id();
  room_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.CleanMaskMsgUserReq.room_id)
}
inline ::std::string* CleanMaskMsgUserReq::mutable_room_id() {
  set_has_room_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.CleanMaskMsgUserReq.room_id)
  return room_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CleanMaskMsgUserReq::release_room_id() {
  clear_has_room_id();
  return room_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CleanMaskMsgUserReq::set_allocated_room_id(::std::string* room_id) {
  if (room_id != NULL) {
    set_has_room_id();
  } else {
    clear_has_room_id();
  }
  room_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), room_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.CleanMaskMsgUserReq.room_id)
}

// -------------------------------------------------------------------

// CleanMaskMsgUserRsp

// required int32 version = 1;
inline bool CleanMaskMsgUserRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CleanMaskMsgUserRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CleanMaskMsgUserRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CleanMaskMsgUserRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 CleanMaskMsgUserRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.CleanMaskMsgUserRsp.version)
  return version_;
}
inline void CleanMaskMsgUserRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.CleanMaskMsgUserRsp.version)
}

// required int32 ret = 2;
inline bool CleanMaskMsgUserRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CleanMaskMsgUserRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CleanMaskMsgUserRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CleanMaskMsgUserRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 CleanMaskMsgUserRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.CleanMaskMsgUserRsp.ret)
  return ret_;
}
inline void CleanMaskMsgUserRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.CleanMaskMsgUserRsp.ret)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5fmask_5fusermsg_2eproto__INCLUDED
