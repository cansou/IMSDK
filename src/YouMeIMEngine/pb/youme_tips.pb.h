// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_tips.proto

#ifndef PROTOBUF_youme_5ftips_2eproto__INCLUDED
#define PROTOBUF_youme_5ftips_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <YouMeCommon/pb/youme_comm.pb.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5ftips_2eproto();
void protobuf_AssignDesc_youme_5ftips_2eproto();
void protobuf_ShutdownFile_youme_5ftips_2eproto();

class AppTips;
class GetTipsRsp;

// ===================================================================

class AppTips : public ::youmecommon::protobuf::MessageLite {
 public:
  AppTips();
  virtual ~AppTips();

  AppTips(const AppTips& from);

  inline AppTips& operator=(const AppTips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const AppTips& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AppTips* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AppTips* other);

  // implements Message ----------------------------------------------

  inline AppTips* New() const { return New(NULL); }

  AppTips* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const AppTips& from);
  void MergeFrom(const AppTips& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppTips* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tips_id = 1;
  bool has_tips_id() const;
  void clear_tips_id();
  static const int kTipsIdFieldNumber = 1;
  ::youmecommon::protobuf::uint64 tips_id() const;
  void set_tips_id(::youmecommon::protobuf::uint64 value);

  // required bytes channel_id = 2;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 2;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  void set_channel_id(const char* value);
  void set_channel_id(const void* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // required bytes title = 3;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const void* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // required int32 tips_type = 4;
  bool has_tips_type() const;
  void clear_tips_type();
  static const int kTipsTypeFieldNumber = 4;
  ::youmecommon::protobuf::int32 tips_type() const;
  void set_tips_type(::youmecommon::protobuf::int32 value);

  // required int32 loop_type = 5;
  bool has_loop_type() const;
  void clear_loop_type();
  static const int kLoopTypeFieldNumber = 5;
  ::youmecommon::protobuf::int32 loop_type() const;
  void set_loop_type(::youmecommon::protobuf::int32 value);

  // required bytes content = 6;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required bytes link_keywords = 7;
  bool has_link_keywords() const;
  void clear_link_keywords();
  static const int kLinkKeywordsFieldNumber = 7;
  const ::std::string& link_keywords() const;
  void set_link_keywords(const ::std::string& value);
  void set_link_keywords(const char* value);
  void set_link_keywords(const void* value, size_t size);
  ::std::string* mutable_link_keywords();
  ::std::string* release_link_keywords();
  void set_allocated_link_keywords(::std::string* link_keywords);

  // required bytes link_addr = 8;
  bool has_link_addr() const;
  void clear_link_addr();
  static const int kLinkAddrFieldNumber = 8;
  const ::std::string& link_addr() const;
  void set_link_addr(const ::std::string& value);
  void set_link_addr(const char* value);
  void set_link_addr(const void* value, size_t size);
  ::std::string* mutable_link_addr();
  ::std::string* release_link_addr();
  void set_allocated_link_addr(::std::string* link_addr);

  // required bytes loop_weekday = 9;
  bool has_loop_weekday() const;
  void clear_loop_weekday();
  static const int kLoopWeekdayFieldNumber = 9;
  const ::std::string& loop_weekday() const;
  void set_loop_weekday(const ::std::string& value);
  void set_loop_weekday(const char* value);
  void set_loop_weekday(const void* value, size_t size);
  ::std::string* mutable_loop_weekday();
  ::std::string* release_loop_weekday();
  void set_allocated_loop_weekday(::std::string* loop_weekday);

  // required bytes start_datetime = 10;
  bool has_start_datetime() const;
  void clear_start_datetime();
  static const int kStartDatetimeFieldNumber = 10;
  const ::std::string& start_datetime() const;
  void set_start_datetime(const ::std::string& value);
  void set_start_datetime(const char* value);
  void set_start_datetime(const void* value, size_t size);
  ::std::string* mutable_start_datetime();
  ::std::string* release_start_datetime();
  void set_allocated_start_datetime(::std::string* start_datetime);

  // required bytes end_datetime = 11;
  bool has_end_datetime() const;
  void clear_end_datetime();
  static const int kEndDatetimeFieldNumber = 11;
  const ::std::string& end_datetime() const;
  void set_end_datetime(const ::std::string& value);
  void set_end_datetime(const char* value);
  void set_end_datetime(const void* value, size_t size);
  ::std::string* mutable_end_datetime();
  ::std::string* release_end_datetime();
  void set_allocated_end_datetime(::std::string* end_datetime);

  // required uint32 enable = 12;
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 12;
  ::youmecommon::protobuf::uint32 enable() const;
  void set_enable(::youmecommon::protobuf::uint32 value);

  // required uint64 old_id = 13;
  bool has_old_id() const;
  void clear_old_id();
  static const int kOldIdFieldNumber = 13;
  ::youmecommon::protobuf::uint64 old_id() const;
  void set_old_id(::youmecommon::protobuf::uint64 value);

  // optional .YOUMECommonProtocol.MsgComment comment = 14;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 14;
  const ::YOUMECommonProtocol::MsgComment& comment() const;
  ::YOUMECommonProtocol::MsgComment* mutable_comment();
  ::YOUMECommonProtocol::MsgComment* release_comment();
  void set_allocated_comment(::YOUMECommonProtocol::MsgComment* comment);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.AppTips)
 private:
  inline void set_has_tips_id();
  inline void clear_has_tips_id();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_tips_type();
  inline void clear_has_tips_type();
  inline void set_has_loop_type();
  inline void clear_has_loop_type();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_link_keywords();
  inline void clear_has_link_keywords();
  inline void set_has_link_addr();
  inline void clear_has_link_addr();
  inline void set_has_loop_weekday();
  inline void clear_has_loop_weekday();
  inline void set_has_start_datetime();
  inline void clear_has_start_datetime();
  inline void set_has_end_datetime();
  inline void clear_has_end_datetime();
  inline void set_has_enable();
  inline void clear_has_enable();
  inline void set_has_old_id();
  inline void clear_has_old_id();
  inline void set_has_comment();
  inline void clear_has_comment();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::uint64 tips_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr channel_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr title_;
  ::youmecommon::protobuf::int32 tips_type_;
  ::youmecommon::protobuf::int32 loop_type_;
  ::youmecommon::protobuf::internal::ArenaStringPtr content_;
  ::youmecommon::protobuf::internal::ArenaStringPtr link_keywords_;
  ::youmecommon::protobuf::internal::ArenaStringPtr link_addr_;
  ::youmecommon::protobuf::internal::ArenaStringPtr loop_weekday_;
  ::youmecommon::protobuf::internal::ArenaStringPtr start_datetime_;
  ::youmecommon::protobuf::internal::ArenaStringPtr end_datetime_;
  ::youmecommon::protobuf::uint64 old_id_;
  ::YOUMECommonProtocol::MsgComment* comment_;
  ::youmecommon::protobuf::uint32 enable_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5ftips_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5ftips_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5ftips_2eproto();
  friend void protobuf_ShutdownFile_youme_5ftips_2eproto();

  void InitAsDefaultInstance();
  static AppTips* default_instance_;
};
// -------------------------------------------------------------------

class GetTipsRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  GetTipsRsp();
  virtual ~GetTipsRsp();

  GetTipsRsp(const GetTipsRsp& from);

  inline GetTipsRsp& operator=(const GetTipsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetTipsRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetTipsRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetTipsRsp* other);

  // implements Message ----------------------------------------------

  inline GetTipsRsp* New() const { return New(NULL); }

  GetTipsRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetTipsRsp& from);
  void MergeFrom(const GetTipsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetTipsRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required int32 tips_cnt = 3;
  bool has_tips_cnt() const;
  void clear_tips_cnt();
  static const int kTipsCntFieldNumber = 3;
  ::youmecommon::protobuf::int32 tips_cnt() const;
  void set_tips_cnt(::youmecommon::protobuf::int32 value);

  // repeated .YOUMEServiceProtocol.AppTips tips_list = 4;
  int tips_list_size() const;
  void clear_tips_list();
  static const int kTipsListFieldNumber = 4;
  const ::YOUMEServiceProtocol::AppTips& tips_list(int index) const;
  ::YOUMEServiceProtocol::AppTips* mutable_tips_list(int index);
  ::YOUMEServiceProtocol::AppTips* add_tips_list();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::AppTips >*
      mutable_tips_list();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::AppTips >&
      tips_list() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetTipsRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_tips_cnt();
  inline void clear_has_tips_cnt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::AppTips > tips_list_;
  ::youmecommon::protobuf::int32 tips_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5ftips_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5ftips_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5ftips_2eproto();
  friend void protobuf_ShutdownFile_youme_5ftips_2eproto();

  void InitAsDefaultInstance();
  static GetTipsRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AppTips

// required uint64 tips_id = 1;
inline bool AppTips::has_tips_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppTips::set_has_tips_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppTips::clear_has_tips_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppTips::clear_tips_id() {
  tips_id_ = GOOGLE_ULONGLONG(0);
  clear_has_tips_id();
}
inline ::youmecommon::protobuf::uint64 AppTips::tips_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.tips_id)
  return tips_id_;
}
inline void AppTips::set_tips_id(::youmecommon::protobuf::uint64 value) {
  set_has_tips_id();
  tips_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.tips_id)
}

// required bytes channel_id = 2;
inline bool AppTips::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppTips::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppTips::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppTips::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& AppTips::channel_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.channel_id)
  return channel_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.channel_id)
}
inline void AppTips::set_channel_id(const char* value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.channel_id)
}
inline void AppTips::set_channel_id(const void* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.channel_id)
}
inline ::std::string* AppTips::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.channel_id)
  return channel_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppTips::release_channel_id() {
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.channel_id)
}

// required bytes title = 3;
inline bool AppTips::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppTips::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppTips::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppTips::clear_title() {
  title_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& AppTips::title() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.title)
  return title_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.title)
}
inline void AppTips::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.title)
}
inline void AppTips::set_title(const void* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.title)
}
inline ::std::string* AppTips::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.title)
  return title_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppTips::release_title() {
  clear_has_title();
  return title_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.title)
}

// required int32 tips_type = 4;
inline bool AppTips::has_tips_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppTips::set_has_tips_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppTips::clear_has_tips_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppTips::clear_tips_type() {
  tips_type_ = 0;
  clear_has_tips_type();
}
inline ::youmecommon::protobuf::int32 AppTips::tips_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.tips_type)
  return tips_type_;
}
inline void AppTips::set_tips_type(::youmecommon::protobuf::int32 value) {
  set_has_tips_type();
  tips_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.tips_type)
}

// required int32 loop_type = 5;
inline bool AppTips::has_loop_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppTips::set_has_loop_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppTips::clear_has_loop_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppTips::clear_loop_type() {
  loop_type_ = 0;
  clear_has_loop_type();
}
inline ::youmecommon::protobuf::int32 AppTips::loop_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.loop_type)
  return loop_type_;
}
inline void AppTips::set_loop_type(::youmecommon::protobuf::int32 value) {
  set_has_loop_type();
  loop_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.loop_type)
}

// required bytes content = 6;
inline bool AppTips::has_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppTips::set_has_content() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppTips::clear_has_content() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppTips::clear_content() {
  content_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& AppTips::content() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.content)
  return content_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.content)
}
inline void AppTips::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.content)
}
inline void AppTips::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.content)
}
inline ::std::string* AppTips::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.content)
  return content_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppTips::release_content() {
  clear_has_content();
  return content_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.content)
}

// required bytes link_keywords = 7;
inline bool AppTips::has_link_keywords() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AppTips::set_has_link_keywords() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AppTips::clear_has_link_keywords() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AppTips::clear_link_keywords() {
  link_keywords_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link_keywords();
}
inline const ::std::string& AppTips::link_keywords() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.link_keywords)
  return link_keywords_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_link_keywords(const ::std::string& value) {
  set_has_link_keywords();
  link_keywords_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.link_keywords)
}
inline void AppTips::set_link_keywords(const char* value) {
  set_has_link_keywords();
  link_keywords_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.link_keywords)
}
inline void AppTips::set_link_keywords(const void* value, size_t size) {
  set_has_link_keywords();
  link_keywords_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.link_keywords)
}
inline ::std::string* AppTips::mutable_link_keywords() {
  set_has_link_keywords();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.link_keywords)
  return link_keywords_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppTips::release_link_keywords() {
  clear_has_link_keywords();
  return link_keywords_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_allocated_link_keywords(::std::string* link_keywords) {
  if (link_keywords != NULL) {
    set_has_link_keywords();
  } else {
    clear_has_link_keywords();
  }
  link_keywords_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), link_keywords);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.link_keywords)
}

// required bytes link_addr = 8;
inline bool AppTips::has_link_addr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AppTips::set_has_link_addr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AppTips::clear_has_link_addr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AppTips::clear_link_addr() {
  link_addr_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link_addr();
}
inline const ::std::string& AppTips::link_addr() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.link_addr)
  return link_addr_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_link_addr(const ::std::string& value) {
  set_has_link_addr();
  link_addr_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.link_addr)
}
inline void AppTips::set_link_addr(const char* value) {
  set_has_link_addr();
  link_addr_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.link_addr)
}
inline void AppTips::set_link_addr(const void* value, size_t size) {
  set_has_link_addr();
  link_addr_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.link_addr)
}
inline ::std::string* AppTips::mutable_link_addr() {
  set_has_link_addr();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.link_addr)
  return link_addr_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppTips::release_link_addr() {
  clear_has_link_addr();
  return link_addr_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_allocated_link_addr(::std::string* link_addr) {
  if (link_addr != NULL) {
    set_has_link_addr();
  } else {
    clear_has_link_addr();
  }
  link_addr_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), link_addr);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.link_addr)
}

// required bytes loop_weekday = 9;
inline bool AppTips::has_loop_weekday() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AppTips::set_has_loop_weekday() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AppTips::clear_has_loop_weekday() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AppTips::clear_loop_weekday() {
  loop_weekday_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_loop_weekday();
}
inline const ::std::string& AppTips::loop_weekday() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.loop_weekday)
  return loop_weekday_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_loop_weekday(const ::std::string& value) {
  set_has_loop_weekday();
  loop_weekday_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.loop_weekday)
}
inline void AppTips::set_loop_weekday(const char* value) {
  set_has_loop_weekday();
  loop_weekday_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.loop_weekday)
}
inline void AppTips::set_loop_weekday(const void* value, size_t size) {
  set_has_loop_weekday();
  loop_weekday_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.loop_weekday)
}
inline ::std::string* AppTips::mutable_loop_weekday() {
  set_has_loop_weekday();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.loop_weekday)
  return loop_weekday_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppTips::release_loop_weekday() {
  clear_has_loop_weekday();
  return loop_weekday_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_allocated_loop_weekday(::std::string* loop_weekday) {
  if (loop_weekday != NULL) {
    set_has_loop_weekday();
  } else {
    clear_has_loop_weekday();
  }
  loop_weekday_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), loop_weekday);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.loop_weekday)
}

// required bytes start_datetime = 10;
inline bool AppTips::has_start_datetime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AppTips::set_has_start_datetime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AppTips::clear_has_start_datetime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AppTips::clear_start_datetime() {
  start_datetime_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_datetime();
}
inline const ::std::string& AppTips::start_datetime() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.start_datetime)
  return start_datetime_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_start_datetime(const ::std::string& value) {
  set_has_start_datetime();
  start_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.start_datetime)
}
inline void AppTips::set_start_datetime(const char* value) {
  set_has_start_datetime();
  start_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.start_datetime)
}
inline void AppTips::set_start_datetime(const void* value, size_t size) {
  set_has_start_datetime();
  start_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.start_datetime)
}
inline ::std::string* AppTips::mutable_start_datetime() {
  set_has_start_datetime();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.start_datetime)
  return start_datetime_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppTips::release_start_datetime() {
  clear_has_start_datetime();
  return start_datetime_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_allocated_start_datetime(::std::string* start_datetime) {
  if (start_datetime != NULL) {
    set_has_start_datetime();
  } else {
    clear_has_start_datetime();
  }
  start_datetime_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), start_datetime);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.start_datetime)
}

// required bytes end_datetime = 11;
inline bool AppTips::has_end_datetime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AppTips::set_has_end_datetime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AppTips::clear_has_end_datetime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AppTips::clear_end_datetime() {
  end_datetime_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_end_datetime();
}
inline const ::std::string& AppTips::end_datetime() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.end_datetime)
  return end_datetime_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_end_datetime(const ::std::string& value) {
  set_has_end_datetime();
  end_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.end_datetime)
}
inline void AppTips::set_end_datetime(const char* value) {
  set_has_end_datetime();
  end_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.end_datetime)
}
inline void AppTips::set_end_datetime(const void* value, size_t size) {
  set_has_end_datetime();
  end_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.end_datetime)
}
inline ::std::string* AppTips::mutable_end_datetime() {
  set_has_end_datetime();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.end_datetime)
  return end_datetime_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppTips::release_end_datetime() {
  clear_has_end_datetime();
  return end_datetime_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppTips::set_allocated_end_datetime(::std::string* end_datetime) {
  if (end_datetime != NULL) {
    set_has_end_datetime();
  } else {
    clear_has_end_datetime();
  }
  end_datetime_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), end_datetime);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.end_datetime)
}

// required uint32 enable = 12;
inline bool AppTips::has_enable() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AppTips::set_has_enable() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AppTips::clear_has_enable() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AppTips::clear_enable() {
  enable_ = 0u;
  clear_has_enable();
}
inline ::youmecommon::protobuf::uint32 AppTips::enable() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.enable)
  return enable_;
}
inline void AppTips::set_enable(::youmecommon::protobuf::uint32 value) {
  set_has_enable();
  enable_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.enable)
}

// required uint64 old_id = 13;
inline bool AppTips::has_old_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AppTips::set_has_old_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AppTips::clear_has_old_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AppTips::clear_old_id() {
  old_id_ = GOOGLE_ULONGLONG(0);
  clear_has_old_id();
}
inline ::youmecommon::protobuf::uint64 AppTips::old_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.old_id)
  return old_id_;
}
inline void AppTips::set_old_id(::youmecommon::protobuf::uint64 value) {
  set_has_old_id();
  old_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.old_id)
}

// optional .YOUMECommonProtocol.MsgComment comment = 14;
inline bool AppTips::has_comment() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AppTips::set_has_comment() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AppTips::clear_has_comment() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AppTips::clear_comment() {
  if (comment_ != NULL) comment_->::YOUMECommonProtocol::MsgComment::Clear();
  clear_has_comment();
}
inline const ::YOUMECommonProtocol::MsgComment& AppTips::comment() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.comment)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return comment_ != NULL ? *comment_ : *default_instance().comment_;
#else
  return comment_ != NULL ? *comment_ : *default_instance_->comment_;
#endif
}
inline ::YOUMECommonProtocol::MsgComment* AppTips::mutable_comment() {
  set_has_comment();
  if (comment_ == NULL) {
    comment_ = new ::YOUMECommonProtocol::MsgComment;
  }
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.comment)
  return comment_;
}
inline ::YOUMECommonProtocol::MsgComment* AppTips::release_comment() {
  clear_has_comment();
  ::YOUMECommonProtocol::MsgComment* temp = comment_;
  comment_ = NULL;
  return temp;
}
inline void AppTips::set_allocated_comment(::YOUMECommonProtocol::MsgComment* comment) {
  delete comment_;
  comment_ = comment;
  if (comment) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.comment)
}

// -------------------------------------------------------------------

// GetTipsRsp

// required int32 version = 1;
inline bool GetTipsRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTipsRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTipsRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTipsRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetTipsRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetTipsRsp.version)
  return version_;
}
inline void GetTipsRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetTipsRsp.version)
}

// required int32 ret = 2;
inline bool GetTipsRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTipsRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTipsRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTipsRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 GetTipsRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetTipsRsp.ret)
  return ret_;
}
inline void GetTipsRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetTipsRsp.ret)
}

// required int32 tips_cnt = 3;
inline bool GetTipsRsp::has_tips_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTipsRsp::set_has_tips_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTipsRsp::clear_has_tips_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTipsRsp::clear_tips_cnt() {
  tips_cnt_ = 0;
  clear_has_tips_cnt();
}
inline ::youmecommon::protobuf::int32 GetTipsRsp::tips_cnt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetTipsRsp.tips_cnt)
  return tips_cnt_;
}
inline void GetTipsRsp::set_tips_cnt(::youmecommon::protobuf::int32 value) {
  set_has_tips_cnt();
  tips_cnt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetTipsRsp.tips_cnt)
}

// repeated .YOUMEServiceProtocol.AppTips tips_list = 4;
inline int GetTipsRsp::tips_list_size() const {
  return tips_list_.size();
}
inline void GetTipsRsp::clear_tips_list() {
  tips_list_.Clear();
}
inline const ::YOUMEServiceProtocol::AppTips& GetTipsRsp::tips_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetTipsRsp.tips_list)
  return tips_list_.Get(index);
}
inline ::YOUMEServiceProtocol::AppTips* GetTipsRsp::mutable_tips_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetTipsRsp.tips_list)
  return tips_list_.Mutable(index);
}
inline ::YOUMEServiceProtocol::AppTips* GetTipsRsp::add_tips_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.GetTipsRsp.tips_list)
  return tips_list_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::AppTips >*
GetTipsRsp::mutable_tips_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.GetTipsRsp.tips_list)
  return &tips_list_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::AppTips >&
GetTipsRsp::tips_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.GetTipsRsp.tips_list)
  return tips_list_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5ftips_2eproto__INCLUDED
