// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_rc_add_friend.proto

#ifndef PROTOBUF_youme_5frc_5fadd_5ffriend_2eproto__INCLUDED
#define PROTOBUF_youme_5frc_5fadd_5ffriend_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
#include "youme_rc_comm.pb.h"
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto();
void protobuf_AssignDesc_youme_5frc_5fadd_5ffriend_2eproto();
void protobuf_ShutdownFile_youme_5frc_5fadd_5ffriend_2eproto();

class AddRcFriendReq;
class AddRcFriendRsp;
class RcFriendReqNotifyRsp;
class VerifyRcFriendReq;
class VerifyRcFriendRsp;

enum RC_ADD_RESULT {
  RC_ADD_REFUSED = 1,
  RC_ADD_NEED_VERIFY = 2,
  RC_ADD_AGREED = 3
};
bool RC_ADD_RESULT_IsValid(int value);
const RC_ADD_RESULT RC_ADD_RESULT_MIN = RC_ADD_REFUSED;
const RC_ADD_RESULT RC_ADD_RESULT_MAX = RC_ADD_AGREED;
const int RC_ADD_RESULT_ARRAYSIZE = RC_ADD_RESULT_MAX + 1;

// ===================================================================

class AddRcFriendReq : public ::youmecommon::protobuf::MessageLite {
 public:
  AddRcFriendReq();
  virtual ~AddRcFriendReq();

  AddRcFriendReq(const AddRcFriendReq& from);

  inline AddRcFriendReq& operator=(const AddRcFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const AddRcFriendReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AddRcFriendReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AddRcFriendReq* other);

  // implements Message ----------------------------------------------

  inline AddRcFriendReq* New() const { return New(NULL); }

  AddRcFriendReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const AddRcFriendReq& from);
  void MergeFrom(const AddRcFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddRcFriendReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const void* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional bytes verify_info = 3;
  bool has_verify_info() const;
  void clear_verify_info();
  static const int kVerifyInfoFieldNumber = 3;
  const ::std::string& verify_info() const;
  void set_verify_info(const ::std::string& value);
  void set_verify_info(const char* value);
  void set_verify_info(const void* value, size_t size);
  ::std::string* mutable_verify_info();
  ::std::string* release_verify_info();
  void set_allocated_verify_info(::std::string* verify_info);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.AddRcFriendReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_verify_info();
  inline void clear_has_verify_info();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr user_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr verify_info_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fadd_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fadd_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static AddRcFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class AddRcFriendRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  AddRcFriendRsp();
  virtual ~AddRcFriendRsp();

  AddRcFriendRsp(const AddRcFriendRsp& from);

  inline AddRcFriendRsp& operator=(const AddRcFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const AddRcFriendRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AddRcFriendRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AddRcFriendRsp* other);

  // implements Message ----------------------------------------------

  inline AddRcFriendRsp* New() const { return New(NULL); }

  AddRcFriendRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const AddRcFriendRsp& from);
  void MergeFrom(const AddRcFriendRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddRcFriendRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // optional .YOUMEServiceProtocol.RC_ADD_RESULT add_rslt = 3;
  bool has_add_rslt() const;
  void clear_add_rslt();
  static const int kAddRsltFieldNumber = 3;
  ::YOUMEServiceProtocol::RC_ADD_RESULT add_rslt() const;
  void set_add_rslt(::YOUMEServiceProtocol::RC_ADD_RESULT value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.AddRcFriendRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_add_rslt();
  inline void clear_has_add_rslt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  int add_rslt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fadd_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fadd_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static AddRcFriendRsp* default_instance_;
};
// -------------------------------------------------------------------

class RcFriendReqNotifyRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  RcFriendReqNotifyRsp();
  virtual ~RcFriendReqNotifyRsp();

  RcFriendReqNotifyRsp(const RcFriendReqNotifyRsp& from);

  inline RcFriendReqNotifyRsp& operator=(const RcFriendReqNotifyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const RcFriendReqNotifyRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RcFriendReqNotifyRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RcFriendReqNotifyRsp* other);

  // implements Message ----------------------------------------------

  inline RcFriendReqNotifyRsp* New() const { return New(NULL); }

  RcFriendReqNotifyRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const RcFriendReqNotifyRsp& from);
  void MergeFrom(const RcFriendReqNotifyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RcFriendReqNotifyRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required uint64 req_id = 2;
  bool has_req_id() const;
  void clear_req_id();
  static const int kReqIdFieldNumber = 2;
  ::youmecommon::protobuf::uint64 req_id() const;
  void set_req_id(::youmecommon::protobuf::uint64 value);

  // required .YOUMEServiceProtocol.RC_FRIEND_REQ_TYPE req_type = 3;
  bool has_req_type() const;
  void clear_req_type();
  static const int kReqTypeFieldNumber = 3;
  ::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE req_type() const;
  void set_req_type(::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE value);

  // required bytes snder_id = 4;
  bool has_snder_id() const;
  void clear_snder_id();
  static const int kSnderIdFieldNumber = 4;
  const ::std::string& snder_id() const;
  void set_snder_id(const ::std::string& value);
  void set_snder_id(const char* value);
  void set_snder_id(const void* value, size_t size);
  ::std::string* mutable_snder_id();
  ::std::string* release_snder_id();
  void set_allocated_snder_id(::std::string* snder_id);

  // required bytes recver_id = 5;
  bool has_recver_id() const;
  void clear_recver_id();
  static const int kRecverIdFieldNumber = 5;
  const ::std::string& recver_id() const;
  void set_recver_id(const ::std::string& value);
  void set_recver_id(const char* value);
  void set_recver_id(const void* value, size_t size);
  ::std::string* mutable_recver_id();
  ::std::string* release_recver_id();
  void set_allocated_recver_id(::std::string* recver_id);

  // required bytes req_snder_id = 6;
  bool has_req_snder_id() const;
  void clear_req_snder_id();
  static const int kReqSnderIdFieldNumber = 6;
  const ::std::string& req_snder_id() const;
  void set_req_snder_id(const ::std::string& value);
  void set_req_snder_id(const char* value);
  void set_req_snder_id(const void* value, size_t size);
  ::std::string* mutable_req_snder_id();
  ::std::string* release_req_snder_id();
  void set_allocated_req_snder_id(::std::string* req_snder_id);

  // required bytes req_recver_id = 7;
  bool has_req_recver_id() const;
  void clear_req_recver_id();
  static const int kReqRecverIdFieldNumber = 7;
  const ::std::string& req_recver_id() const;
  void set_req_recver_id(const ::std::string& value);
  void set_req_recver_id(const char* value);
  void set_req_recver_id(const void* value, size_t size);
  ::std::string* mutable_req_recver_id();
  ::std::string* release_req_recver_id();
  void set_allocated_req_recver_id(::std::string* req_recver_id);

  // required .YOUMEServiceProtocol.RC_FRIEND_REQ_STATE cur_state = 8;
  bool has_cur_state() const;
  void clear_cur_state();
  static const int kCurStateFieldNumber = 8;
  ::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE cur_state() const;
  void set_cur_state(::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE value);

  // optional bytes notify_msg = 9;
  bool has_notify_msg() const;
  void clear_notify_msg();
  static const int kNotifyMsgFieldNumber = 9;
  const ::std::string& notify_msg() const;
  void set_notify_msg(const ::std::string& value);
  void set_notify_msg(const char* value);
  void set_notify_msg(const void* value, size_t size);
  ::std::string* mutable_notify_msg();
  ::std::string* release_notify_msg();
  void set_allocated_notify_msg(::std::string* notify_msg);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.RcFriendReqNotifyRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_req_id();
  inline void clear_has_req_id();
  inline void set_has_req_type();
  inline void clear_has_req_type();
  inline void set_has_snder_id();
  inline void clear_has_snder_id();
  inline void set_has_recver_id();
  inline void clear_has_recver_id();
  inline void set_has_req_snder_id();
  inline void clear_has_req_snder_id();
  inline void set_has_req_recver_id();
  inline void clear_has_req_recver_id();
  inline void set_has_cur_state();
  inline void clear_has_cur_state();
  inline void set_has_notify_msg();
  inline void clear_has_notify_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::uint64 req_id_;
  ::youmecommon::protobuf::int32 version_;
  int req_type_;
  ::youmecommon::protobuf::internal::ArenaStringPtr snder_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr recver_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr req_snder_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr req_recver_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr notify_msg_;
  int cur_state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fadd_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fadd_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static RcFriendReqNotifyRsp* default_instance_;
};
// -------------------------------------------------------------------

class VerifyRcFriendReq : public ::youmecommon::protobuf::MessageLite {
 public:
  VerifyRcFriendReq();
  virtual ~VerifyRcFriendReq();

  VerifyRcFriendReq(const VerifyRcFriendReq& from);

  inline VerifyRcFriendReq& operator=(const VerifyRcFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const VerifyRcFriendReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const VerifyRcFriendReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(VerifyRcFriendReq* other);

  // implements Message ----------------------------------------------

  inline VerifyRcFriendReq* New() const { return New(NULL); }

  VerifyRcFriendReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const VerifyRcFriendReq& from);
  void MergeFrom(const VerifyRcFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VerifyRcFriendReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const void* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // required uint64 add_req_id = 3;
  bool has_add_req_id() const;
  void clear_add_req_id();
  static const int kAddReqIdFieldNumber = 3;
  ::youmecommon::protobuf::uint64 add_req_id() const;
  void set_add_req_id(::youmecommon::protobuf::uint64 value);

  // required bytes verify_info = 4;
  bool has_verify_info() const;
  void clear_verify_info();
  static const int kVerifyInfoFieldNumber = 4;
  const ::std::string& verify_info() const;
  void set_verify_info(const ::std::string& value);
  void set_verify_info(const char* value);
  void set_verify_info(const void* value, size_t size);
  ::std::string* mutable_verify_info();
  ::std::string* release_verify_info();
  void set_allocated_verify_info(::std::string* verify_info);

  // required int32 agree = 5;
  bool has_agree() const;
  void clear_agree();
  static const int kAgreeFieldNumber = 5;
  ::youmecommon::protobuf::int32 agree() const;
  void set_agree(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.VerifyRcFriendReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_add_req_id();
  inline void clear_has_add_req_id();
  inline void set_has_verify_info();
  inline void clear_has_verify_info();
  inline void set_has_agree();
  inline void clear_has_agree();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr user_id_;
  ::youmecommon::protobuf::uint64 add_req_id_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 agree_;
  ::youmecommon::protobuf::internal::ArenaStringPtr verify_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fadd_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fadd_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static VerifyRcFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class VerifyRcFriendRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  VerifyRcFriendRsp();
  virtual ~VerifyRcFriendRsp();

  VerifyRcFriendRsp(const VerifyRcFriendRsp& from);

  inline VerifyRcFriendRsp& operator=(const VerifyRcFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const VerifyRcFriendRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const VerifyRcFriendRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(VerifyRcFriendRsp* other);

  // implements Message ----------------------------------------------

  inline VerifyRcFriendRsp* New() const { return New(NULL); }

  VerifyRcFriendRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const VerifyRcFriendRsp& from);
  void MergeFrom(const VerifyRcFriendRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VerifyRcFriendRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required .YOUMEServiceProtocol.RC_ADD_RESULT add_rslt = 3;
  bool has_add_rslt() const;
  void clear_add_rslt();
  static const int kAddRsltFieldNumber = 3;
  ::YOUMEServiceProtocol::RC_ADD_RESULT add_rslt() const;
  void set_add_rslt(::YOUMEServiceProtocol::RC_ADD_RESULT value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.VerifyRcFriendRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_add_rslt();
  inline void clear_has_add_rslt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  int add_rslt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fadd_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fadd_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fadd_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static VerifyRcFriendRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AddRcFriendReq

// required int32 version = 1;
inline bool AddRcFriendReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRcFriendReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRcFriendReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRcFriendReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 AddRcFriendReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AddRcFriendReq.version)
  return version_;
}
inline void AddRcFriendReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AddRcFriendReq.version)
}

// required bytes user_id = 2;
inline bool AddRcFriendReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddRcFriendReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddRcFriendReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddRcFriendReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& AddRcFriendReq::user_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AddRcFriendReq.user_id)
  return user_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRcFriendReq::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AddRcFriendReq.user_id)
}
inline void AddRcFriendReq::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AddRcFriendReq.user_id)
}
inline void AddRcFriendReq::set_user_id(const void* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AddRcFriendReq.user_id)
}
inline ::std::string* AddRcFriendReq::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AddRcFriendReq.user_id)
  return user_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRcFriendReq::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRcFriendReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AddRcFriendReq.user_id)
}

// optional bytes verify_info = 3;
inline bool AddRcFriendReq::has_verify_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddRcFriendReq::set_has_verify_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddRcFriendReq::clear_has_verify_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddRcFriendReq::clear_verify_info() {
  verify_info_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verify_info();
}
inline const ::std::string& AddRcFriendReq::verify_info() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AddRcFriendReq.verify_info)
  return verify_info_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRcFriendReq::set_verify_info(const ::std::string& value) {
  set_has_verify_info();
  verify_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AddRcFriendReq.verify_info)
}
inline void AddRcFriendReq::set_verify_info(const char* value) {
  set_has_verify_info();
  verify_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AddRcFriendReq.verify_info)
}
inline void AddRcFriendReq::set_verify_info(const void* value, size_t size) {
  set_has_verify_info();
  verify_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AddRcFriendReq.verify_info)
}
inline ::std::string* AddRcFriendReq::mutable_verify_info() {
  set_has_verify_info();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AddRcFriendReq.verify_info)
  return verify_info_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRcFriendReq::release_verify_info() {
  clear_has_verify_info();
  return verify_info_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRcFriendReq::set_allocated_verify_info(::std::string* verify_info) {
  if (verify_info != NULL) {
    set_has_verify_info();
  } else {
    clear_has_verify_info();
  }
  verify_info_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), verify_info);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AddRcFriendReq.verify_info)
}

// -------------------------------------------------------------------

// AddRcFriendRsp

// required int32 version = 1;
inline bool AddRcFriendRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRcFriendRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRcFriendRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRcFriendRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 AddRcFriendRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AddRcFriendRsp.version)
  return version_;
}
inline void AddRcFriendRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AddRcFriendRsp.version)
}

// required int32 ret = 2;
inline bool AddRcFriendRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddRcFriendRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddRcFriendRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddRcFriendRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 AddRcFriendRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AddRcFriendRsp.ret)
  return ret_;
}
inline void AddRcFriendRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AddRcFriendRsp.ret)
}

// optional .YOUMEServiceProtocol.RC_ADD_RESULT add_rslt = 3;
inline bool AddRcFriendRsp::has_add_rslt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddRcFriendRsp::set_has_add_rslt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddRcFriendRsp::clear_has_add_rslt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddRcFriendRsp::clear_add_rslt() {
  add_rslt_ = 1;
  clear_has_add_rslt();
}
inline ::YOUMEServiceProtocol::RC_ADD_RESULT AddRcFriendRsp::add_rslt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AddRcFriendRsp.add_rslt)
  return static_cast< ::YOUMEServiceProtocol::RC_ADD_RESULT >(add_rslt_);
}
inline void AddRcFriendRsp::set_add_rslt(::YOUMEServiceProtocol::RC_ADD_RESULT value) {
  assert(::YOUMEServiceProtocol::RC_ADD_RESULT_IsValid(value));
  set_has_add_rslt();
  add_rslt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AddRcFriendRsp.add_rslt)
}

// -------------------------------------------------------------------

// RcFriendReqNotifyRsp

// required int32 version = 1;
inline bool RcFriendReqNotifyRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcFriendReqNotifyRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcFriendReqNotifyRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcFriendReqNotifyRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 RcFriendReqNotifyRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqNotifyRsp.version)
  return version_;
}
inline void RcFriendReqNotifyRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqNotifyRsp.version)
}

// required uint64 req_id = 2;
inline bool RcFriendReqNotifyRsp::has_req_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcFriendReqNotifyRsp::set_has_req_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcFriendReqNotifyRsp::clear_has_req_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcFriendReqNotifyRsp::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
  clear_has_req_id();
}
inline ::youmecommon::protobuf::uint64 RcFriendReqNotifyRsp::req_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_id)
  return req_id_;
}
inline void RcFriendReqNotifyRsp::set_req_id(::youmecommon::protobuf::uint64 value) {
  set_has_req_id();
  req_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_id)
}

// required .YOUMEServiceProtocol.RC_FRIEND_REQ_TYPE req_type = 3;
inline bool RcFriendReqNotifyRsp::has_req_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcFriendReqNotifyRsp::set_has_req_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcFriendReqNotifyRsp::clear_has_req_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcFriendReqNotifyRsp::clear_req_type() {
  req_type_ = 1;
  clear_has_req_type();
}
inline ::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE RcFriendReqNotifyRsp::req_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_type)
  return static_cast< ::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE >(req_type_);
}
inline void RcFriendReqNotifyRsp::set_req_type(::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE value) {
  assert(::YOUMEServiceProtocol::RC_FRIEND_REQ_TYPE_IsValid(value));
  set_has_req_type();
  req_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_type)
}

// required bytes snder_id = 4;
inline bool RcFriendReqNotifyRsp::has_snder_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RcFriendReqNotifyRsp::set_has_snder_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RcFriendReqNotifyRsp::clear_has_snder_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RcFriendReqNotifyRsp::clear_snder_id() {
  snder_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_snder_id();
}
inline const ::std::string& RcFriendReqNotifyRsp::snder_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqNotifyRsp.snder_id)
  return snder_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqNotifyRsp::set_snder_id(const ::std::string& value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqNotifyRsp.snder_id)
}
inline void RcFriendReqNotifyRsp::set_snder_id(const char* value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqNotifyRsp.snder_id)
}
inline void RcFriendReqNotifyRsp::set_snder_id(const void* value, size_t size) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqNotifyRsp.snder_id)
}
inline ::std::string* RcFriendReqNotifyRsp::mutable_snder_id() {
  set_has_snder_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqNotifyRsp.snder_id)
  return snder_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqNotifyRsp::release_snder_id() {
  clear_has_snder_id();
  return snder_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqNotifyRsp::set_allocated_snder_id(::std::string* snder_id) {
  if (snder_id != NULL) {
    set_has_snder_id();
  } else {
    clear_has_snder_id();
  }
  snder_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), snder_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqNotifyRsp.snder_id)
}

// required bytes recver_id = 5;
inline bool RcFriendReqNotifyRsp::has_recver_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RcFriendReqNotifyRsp::set_has_recver_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RcFriendReqNotifyRsp::clear_has_recver_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RcFriendReqNotifyRsp::clear_recver_id() {
  recver_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recver_id();
}
inline const ::std::string& RcFriendReqNotifyRsp::recver_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqNotifyRsp.recver_id)
  return recver_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqNotifyRsp::set_recver_id(const ::std::string& value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqNotifyRsp.recver_id)
}
inline void RcFriendReqNotifyRsp::set_recver_id(const char* value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqNotifyRsp.recver_id)
}
inline void RcFriendReqNotifyRsp::set_recver_id(const void* value, size_t size) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqNotifyRsp.recver_id)
}
inline ::std::string* RcFriendReqNotifyRsp::mutable_recver_id() {
  set_has_recver_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqNotifyRsp.recver_id)
  return recver_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqNotifyRsp::release_recver_id() {
  clear_has_recver_id();
  return recver_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqNotifyRsp::set_allocated_recver_id(::std::string* recver_id) {
  if (recver_id != NULL) {
    set_has_recver_id();
  } else {
    clear_has_recver_id();
  }
  recver_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), recver_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqNotifyRsp.recver_id)
}

// required bytes req_snder_id = 6;
inline bool RcFriendReqNotifyRsp::has_req_snder_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RcFriendReqNotifyRsp::set_has_req_snder_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RcFriendReqNotifyRsp::clear_has_req_snder_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RcFriendReqNotifyRsp::clear_req_snder_id() {
  req_snder_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_req_snder_id();
}
inline const ::std::string& RcFriendReqNotifyRsp::req_snder_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_snder_id)
  return req_snder_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqNotifyRsp::set_req_snder_id(const ::std::string& value) {
  set_has_req_snder_id();
  req_snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_snder_id)
}
inline void RcFriendReqNotifyRsp::set_req_snder_id(const char* value) {
  set_has_req_snder_id();
  req_snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_snder_id)
}
inline void RcFriendReqNotifyRsp::set_req_snder_id(const void* value, size_t size) {
  set_has_req_snder_id();
  req_snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_snder_id)
}
inline ::std::string* RcFriendReqNotifyRsp::mutable_req_snder_id() {
  set_has_req_snder_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_snder_id)
  return req_snder_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqNotifyRsp::release_req_snder_id() {
  clear_has_req_snder_id();
  return req_snder_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqNotifyRsp::set_allocated_req_snder_id(::std::string* req_snder_id) {
  if (req_snder_id != NULL) {
    set_has_req_snder_id();
  } else {
    clear_has_req_snder_id();
  }
  req_snder_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), req_snder_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_snder_id)
}

// required bytes req_recver_id = 7;
inline bool RcFriendReqNotifyRsp::has_req_recver_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RcFriendReqNotifyRsp::set_has_req_recver_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RcFriendReqNotifyRsp::clear_has_req_recver_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RcFriendReqNotifyRsp::clear_req_recver_id() {
  req_recver_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_req_recver_id();
}
inline const ::std::string& RcFriendReqNotifyRsp::req_recver_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_recver_id)
  return req_recver_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqNotifyRsp::set_req_recver_id(const ::std::string& value) {
  set_has_req_recver_id();
  req_recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_recver_id)
}
inline void RcFriendReqNotifyRsp::set_req_recver_id(const char* value) {
  set_has_req_recver_id();
  req_recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_recver_id)
}
inline void RcFriendReqNotifyRsp::set_req_recver_id(const void* value, size_t size) {
  set_has_req_recver_id();
  req_recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_recver_id)
}
inline ::std::string* RcFriendReqNotifyRsp::mutable_req_recver_id() {
  set_has_req_recver_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_recver_id)
  return req_recver_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqNotifyRsp::release_req_recver_id() {
  clear_has_req_recver_id();
  return req_recver_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqNotifyRsp::set_allocated_req_recver_id(::std::string* req_recver_id) {
  if (req_recver_id != NULL) {
    set_has_req_recver_id();
  } else {
    clear_has_req_recver_id();
  }
  req_recver_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), req_recver_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqNotifyRsp.req_recver_id)
}

// required .YOUMEServiceProtocol.RC_FRIEND_REQ_STATE cur_state = 8;
inline bool RcFriendReqNotifyRsp::has_cur_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RcFriendReqNotifyRsp::set_has_cur_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RcFriendReqNotifyRsp::clear_has_cur_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RcFriendReqNotifyRsp::clear_cur_state() {
  cur_state_ = 1;
  clear_has_cur_state();
}
inline ::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE RcFriendReqNotifyRsp::cur_state() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqNotifyRsp.cur_state)
  return static_cast< ::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE >(cur_state_);
}
inline void RcFriendReqNotifyRsp::set_cur_state(::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE value) {
  assert(::YOUMEServiceProtocol::RC_FRIEND_REQ_STATE_IsValid(value));
  set_has_cur_state();
  cur_state_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqNotifyRsp.cur_state)
}

// optional bytes notify_msg = 9;
inline bool RcFriendReqNotifyRsp::has_notify_msg() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RcFriendReqNotifyRsp::set_has_notify_msg() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RcFriendReqNotifyRsp::clear_has_notify_msg() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RcFriendReqNotifyRsp::clear_notify_msg() {
  notify_msg_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_notify_msg();
}
inline const ::std::string& RcFriendReqNotifyRsp::notify_msg() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcFriendReqNotifyRsp.notify_msg)
  return notify_msg_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqNotifyRsp::set_notify_msg(const ::std::string& value) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcFriendReqNotifyRsp.notify_msg)
}
inline void RcFriendReqNotifyRsp::set_notify_msg(const char* value) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcFriendReqNotifyRsp.notify_msg)
}
inline void RcFriendReqNotifyRsp::set_notify_msg(const void* value, size_t size) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcFriendReqNotifyRsp.notify_msg)
}
inline ::std::string* RcFriendReqNotifyRsp::mutable_notify_msg() {
  set_has_notify_msg();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcFriendReqNotifyRsp.notify_msg)
  return notify_msg_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcFriendReqNotifyRsp::release_notify_msg() {
  clear_has_notify_msg();
  return notify_msg_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcFriendReqNotifyRsp::set_allocated_notify_msg(::std::string* notify_msg) {
  if (notify_msg != NULL) {
    set_has_notify_msg();
  } else {
    clear_has_notify_msg();
  }
  notify_msg_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), notify_msg);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcFriendReqNotifyRsp.notify_msg)
}

// -------------------------------------------------------------------

// VerifyRcFriendReq

// required int32 version = 1;
inline bool VerifyRcFriendReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyRcFriendReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyRcFriendReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyRcFriendReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 VerifyRcFriendReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.VerifyRcFriendReq.version)
  return version_;
}
inline void VerifyRcFriendReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.VerifyRcFriendReq.version)
}

// required bytes user_id = 2;
inline bool VerifyRcFriendReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyRcFriendReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyRcFriendReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyRcFriendReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& VerifyRcFriendReq::user_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.VerifyRcFriendReq.user_id)
  return user_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyRcFriendReq::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.VerifyRcFriendReq.user_id)
}
inline void VerifyRcFriendReq::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.VerifyRcFriendReq.user_id)
}
inline void VerifyRcFriendReq::set_user_id(const void* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.VerifyRcFriendReq.user_id)
}
inline ::std::string* VerifyRcFriendReq::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.VerifyRcFriendReq.user_id)
  return user_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyRcFriendReq::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyRcFriendReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.VerifyRcFriendReq.user_id)
}

// required uint64 add_req_id = 3;
inline bool VerifyRcFriendReq::has_add_req_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyRcFriendReq::set_has_add_req_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyRcFriendReq::clear_has_add_req_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyRcFriendReq::clear_add_req_id() {
  add_req_id_ = GOOGLE_ULONGLONG(0);
  clear_has_add_req_id();
}
inline ::youmecommon::protobuf::uint64 VerifyRcFriendReq::add_req_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.VerifyRcFriendReq.add_req_id)
  return add_req_id_;
}
inline void VerifyRcFriendReq::set_add_req_id(::youmecommon::protobuf::uint64 value) {
  set_has_add_req_id();
  add_req_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.VerifyRcFriendReq.add_req_id)
}

// required bytes verify_info = 4;
inline bool VerifyRcFriendReq::has_verify_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VerifyRcFriendReq::set_has_verify_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VerifyRcFriendReq::clear_has_verify_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VerifyRcFriendReq::clear_verify_info() {
  verify_info_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verify_info();
}
inline const ::std::string& VerifyRcFriendReq::verify_info() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.VerifyRcFriendReq.verify_info)
  return verify_info_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyRcFriendReq::set_verify_info(const ::std::string& value) {
  set_has_verify_info();
  verify_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.VerifyRcFriendReq.verify_info)
}
inline void VerifyRcFriendReq::set_verify_info(const char* value) {
  set_has_verify_info();
  verify_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.VerifyRcFriendReq.verify_info)
}
inline void VerifyRcFriendReq::set_verify_info(const void* value, size_t size) {
  set_has_verify_info();
  verify_info_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.VerifyRcFriendReq.verify_info)
}
inline ::std::string* VerifyRcFriendReq::mutable_verify_info() {
  set_has_verify_info();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.VerifyRcFriendReq.verify_info)
  return verify_info_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyRcFriendReq::release_verify_info() {
  clear_has_verify_info();
  return verify_info_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyRcFriendReq::set_allocated_verify_info(::std::string* verify_info) {
  if (verify_info != NULL) {
    set_has_verify_info();
  } else {
    clear_has_verify_info();
  }
  verify_info_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), verify_info);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.VerifyRcFriendReq.verify_info)
}

// required int32 agree = 5;
inline bool VerifyRcFriendReq::has_agree() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VerifyRcFriendReq::set_has_agree() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VerifyRcFriendReq::clear_has_agree() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VerifyRcFriendReq::clear_agree() {
  agree_ = 0;
  clear_has_agree();
}
inline ::youmecommon::protobuf::int32 VerifyRcFriendReq::agree() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.VerifyRcFriendReq.agree)
  return agree_;
}
inline void VerifyRcFriendReq::set_agree(::youmecommon::protobuf::int32 value) {
  set_has_agree();
  agree_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.VerifyRcFriendReq.agree)
}

// -------------------------------------------------------------------

// VerifyRcFriendRsp

// required int32 version = 1;
inline bool VerifyRcFriendRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyRcFriendRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyRcFriendRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyRcFriendRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 VerifyRcFriendRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.VerifyRcFriendRsp.version)
  return version_;
}
inline void VerifyRcFriendRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.VerifyRcFriendRsp.version)
}

// required int32 ret = 2;
inline bool VerifyRcFriendRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyRcFriendRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyRcFriendRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyRcFriendRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 VerifyRcFriendRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.VerifyRcFriendRsp.ret)
  return ret_;
}
inline void VerifyRcFriendRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.VerifyRcFriendRsp.ret)
}

// required .YOUMEServiceProtocol.RC_ADD_RESULT add_rslt = 3;
inline bool VerifyRcFriendRsp::has_add_rslt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyRcFriendRsp::set_has_add_rslt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyRcFriendRsp::clear_has_add_rslt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyRcFriendRsp::clear_add_rslt() {
  add_rslt_ = 1;
  clear_has_add_rslt();
}
inline ::YOUMEServiceProtocol::RC_ADD_RESULT VerifyRcFriendRsp::add_rslt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.VerifyRcFriendRsp.add_rslt)
  return static_cast< ::YOUMEServiceProtocol::RC_ADD_RESULT >(add_rslt_);
}
inline void VerifyRcFriendRsp::set_add_rslt(::YOUMEServiceProtocol::RC_ADD_RESULT value) {
  assert(::YOUMEServiceProtocol::RC_ADD_RESULT_IsValid(value));
  set_has_add_rslt();
  add_rslt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.VerifyRcFriendRsp.add_rslt)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

#ifndef SWIG
namespace youmecommon {
namespace protobuf {

template <> struct is_proto_enum< ::YOUMEServiceProtocol::RC_ADD_RESULT> : ::youmecommon::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5frc_5fadd_5ffriend_2eproto__INCLUDED
