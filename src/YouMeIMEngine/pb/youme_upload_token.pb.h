// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_upload_token.proto

#ifndef PROTOBUF_youme_5fupload_5ftoken_2eproto__INCLUDED
#define PROTOBUF_youme_5fupload_5ftoken_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <YouMeCommon/pb/youme_comm.pb.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5fupload_5ftoken_2eproto();
void protobuf_AssignDesc_youme_5fupload_5ftoken_2eproto();
void protobuf_ShutdownFile_youme_5fupload_5ftoken_2eproto();

class GetUploadTokenReq;
class GetUploadTokenRsp;

// ===================================================================

class GetUploadTokenReq : public ::youmecommon::protobuf::MessageLite {
 public:
  GetUploadTokenReq();
  virtual ~GetUploadTokenReq();

  GetUploadTokenReq(const GetUploadTokenReq& from);

  inline GetUploadTokenReq& operator=(const GetUploadTokenReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetUploadTokenReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUploadTokenReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUploadTokenReq* other);

  // implements Message ----------------------------------------------

  inline GetUploadTokenReq* New() const { return New(NULL); }

  GetUploadTokenReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetUploadTokenReq& from);
  void MergeFrom(const GetUploadTokenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetUploadTokenReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 file_size = 2;
  bool has_file_size() const;
  void clear_file_size();
  static const int kFileSizeFieldNumber = 2;
  ::youmecommon::protobuf::int32 file_size() const;
  void set_file_size(::youmecommon::protobuf::int32 value);

  // required string file_md5 = 3;
  bool has_file_md5() const;
  void clear_file_md5();
  static const int kFileMd5FieldNumber = 3;
  const ::std::string& file_md5() const;
  void set_file_md5(const ::std::string& value);
  void set_file_md5(const char* value);
  void set_file_md5(const char* value, size_t size);
  ::std::string* mutable_file_md5();
  ::std::string* release_file_md5();
  void set_allocated_file_md5(::std::string* file_md5);

  // required string file_suffix = 4;
  bool has_file_suffix() const;
  void clear_file_suffix();
  static const int kFileSuffixFieldNumber = 4;
  const ::std::string& file_suffix() const;
  void set_file_suffix(const ::std::string& value);
  void set_file_suffix(const char* value);
  void set_file_suffix(const char* value, size_t size);
  ::std::string* mutable_file_suffix();
  ::std::string* release_file_suffix();
  void set_allocated_file_suffix(::std::string* file_suffix);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetUploadTokenReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_file_size();
  inline void clear_has_file_size();
  inline void set_has_file_md5();
  inline void clear_has_file_md5();
  inline void set_has_file_suffix();
  inline void clear_has_file_suffix();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 file_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr file_md5_;
  ::youmecommon::protobuf::internal::ArenaStringPtr file_suffix_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fupload_5ftoken_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fupload_5ftoken_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fupload_5ftoken_2eproto();
  friend void protobuf_ShutdownFile_youme_5fupload_5ftoken_2eproto();

  void InitAsDefaultInstance();
  static GetUploadTokenReq* default_instance_;
};
// -------------------------------------------------------------------

class GetUploadTokenRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  GetUploadTokenRsp();
  virtual ~GetUploadTokenRsp();

  GetUploadTokenRsp(const GetUploadTokenRsp& from);

  inline GetUploadTokenRsp& operator=(const GetUploadTokenRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetUploadTokenRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetUploadTokenRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetUploadTokenRsp* other);

  // implements Message ----------------------------------------------

  inline GetUploadTokenRsp* New() const { return New(NULL); }

  GetUploadTokenRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetUploadTokenRsp& from);
  void MergeFrom(const GetUploadTokenRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetUploadTokenRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required string token = 3;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 3;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string download_url = 4;
  bool has_download_url() const;
  void clear_download_url();
  static const int kDownloadUrlFieldNumber = 4;
  const ::std::string& download_url() const;
  void set_download_url(const ::std::string& value);
  void set_download_url(const char* value);
  void set_download_url(const char* value, size_t size);
  ::std::string* mutable_download_url();
  ::std::string* release_download_url();
  void set_allocated_download_url(::std::string* download_url);

  // repeated .YOUMECommonProtocol.NameValue headers = 5;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 5;
  const ::YOUMECommonProtocol::NameValue& headers(int index) const;
  ::YOUMECommonProtocol::NameValue* mutable_headers(int index);
  ::YOUMECommonProtocol::NameValue* add_headers();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >*
      mutable_headers();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >&
      headers() const;

  // optional uint32 bucket_type = 6;
  bool has_bucket_type() const;
  void clear_bucket_type();
  static const int kBucketTypeFieldNumber = 6;
  ::youmecommon::protobuf::uint32 bucket_type() const;
  void set_bucket_type(::youmecommon::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetUploadTokenRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_download_url();
  inline void clear_has_download_url();
  inline void set_has_bucket_type();
  inline void clear_has_bucket_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::internal::ArenaStringPtr token_;
  ::youmecommon::protobuf::internal::ArenaStringPtr download_url_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue > headers_;
  ::youmecommon::protobuf::uint32 bucket_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fupload_5ftoken_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fupload_5ftoken_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fupload_5ftoken_2eproto();
  friend void protobuf_ShutdownFile_youme_5fupload_5ftoken_2eproto();

  void InitAsDefaultInstance();
  static GetUploadTokenRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUploadTokenReq

// required int32 version = 1;
inline bool GetUploadTokenReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUploadTokenReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUploadTokenReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUploadTokenReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetUploadTokenReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetUploadTokenReq.version)
  return version_;
}
inline void GetUploadTokenReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetUploadTokenReq.version)
}

// required int32 file_size = 2;
inline bool GetUploadTokenReq::has_file_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUploadTokenReq::set_has_file_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUploadTokenReq::clear_has_file_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUploadTokenReq::clear_file_size() {
  file_size_ = 0;
  clear_has_file_size();
}
inline ::youmecommon::protobuf::int32 GetUploadTokenReq::file_size() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetUploadTokenReq.file_size)
  return file_size_;
}
inline void GetUploadTokenReq::set_file_size(::youmecommon::protobuf::int32 value) {
  set_has_file_size();
  file_size_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetUploadTokenReq.file_size)
}

// required string file_md5 = 3;
inline bool GetUploadTokenReq::has_file_md5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUploadTokenReq::set_has_file_md5() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUploadTokenReq::clear_has_file_md5() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUploadTokenReq::clear_file_md5() {
  file_md5_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_md5();
}
inline const ::std::string& GetUploadTokenReq::file_md5() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetUploadTokenReq.file_md5)
  return file_md5_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenReq::set_file_md5(const ::std::string& value) {
  set_has_file_md5();
  file_md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetUploadTokenReq.file_md5)
}
inline void GetUploadTokenReq::set_file_md5(const char* value) {
  set_has_file_md5();
  file_md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetUploadTokenReq.file_md5)
}
inline void GetUploadTokenReq::set_file_md5(const char* value, size_t size) {
  set_has_file_md5();
  file_md5_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetUploadTokenReq.file_md5)
}
inline ::std::string* GetUploadTokenReq::mutable_file_md5() {
  set_has_file_md5();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetUploadTokenReq.file_md5)
  return file_md5_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetUploadTokenReq::release_file_md5() {
  clear_has_file_md5();
  return file_md5_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenReq::set_allocated_file_md5(::std::string* file_md5) {
  if (file_md5 != NULL) {
    set_has_file_md5();
  } else {
    clear_has_file_md5();
  }
  file_md5_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), file_md5);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetUploadTokenReq.file_md5)
}

// required string file_suffix = 4;
inline bool GetUploadTokenReq::has_file_suffix() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUploadTokenReq::set_has_file_suffix() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUploadTokenReq::clear_has_file_suffix() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUploadTokenReq::clear_file_suffix() {
  file_suffix_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_suffix();
}
inline const ::std::string& GetUploadTokenReq::file_suffix() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetUploadTokenReq.file_suffix)
  return file_suffix_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenReq::set_file_suffix(const ::std::string& value) {
  set_has_file_suffix();
  file_suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetUploadTokenReq.file_suffix)
}
inline void GetUploadTokenReq::set_file_suffix(const char* value) {
  set_has_file_suffix();
  file_suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetUploadTokenReq.file_suffix)
}
inline void GetUploadTokenReq::set_file_suffix(const char* value, size_t size) {
  set_has_file_suffix();
  file_suffix_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetUploadTokenReq.file_suffix)
}
inline ::std::string* GetUploadTokenReq::mutable_file_suffix() {
  set_has_file_suffix();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetUploadTokenReq.file_suffix)
  return file_suffix_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetUploadTokenReq::release_file_suffix() {
  clear_has_file_suffix();
  return file_suffix_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenReq::set_allocated_file_suffix(::std::string* file_suffix) {
  if (file_suffix != NULL) {
    set_has_file_suffix();
  } else {
    clear_has_file_suffix();
  }
  file_suffix_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), file_suffix);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetUploadTokenReq.file_suffix)
}

// -------------------------------------------------------------------

// GetUploadTokenRsp

// required int32 version = 1;
inline bool GetUploadTokenRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUploadTokenRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUploadTokenRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUploadTokenRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetUploadTokenRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetUploadTokenRsp.version)
  return version_;
}
inline void GetUploadTokenRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetUploadTokenRsp.version)
}

// required int32 ret = 2;
inline bool GetUploadTokenRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUploadTokenRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUploadTokenRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUploadTokenRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 GetUploadTokenRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetUploadTokenRsp.ret)
  return ret_;
}
inline void GetUploadTokenRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetUploadTokenRsp.ret)
}

// required string token = 3;
inline bool GetUploadTokenRsp::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUploadTokenRsp::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUploadTokenRsp::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUploadTokenRsp::clear_token() {
  token_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& GetUploadTokenRsp::token() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetUploadTokenRsp.token)
  return token_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenRsp::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetUploadTokenRsp.token)
}
inline void GetUploadTokenRsp::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetUploadTokenRsp.token)
}
inline void GetUploadTokenRsp::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetUploadTokenRsp.token)
}
inline ::std::string* GetUploadTokenRsp::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetUploadTokenRsp.token)
  return token_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetUploadTokenRsp::release_token() {
  clear_has_token();
  return token_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenRsp::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetUploadTokenRsp.token)
}

// required string download_url = 4;
inline bool GetUploadTokenRsp::has_download_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUploadTokenRsp::set_has_download_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUploadTokenRsp::clear_has_download_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUploadTokenRsp::clear_download_url() {
  download_url_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_download_url();
}
inline const ::std::string& GetUploadTokenRsp::download_url() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetUploadTokenRsp.download_url)
  return download_url_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenRsp::set_download_url(const ::std::string& value) {
  set_has_download_url();
  download_url_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetUploadTokenRsp.download_url)
}
inline void GetUploadTokenRsp::set_download_url(const char* value) {
  set_has_download_url();
  download_url_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetUploadTokenRsp.download_url)
}
inline void GetUploadTokenRsp::set_download_url(const char* value, size_t size) {
  set_has_download_url();
  download_url_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetUploadTokenRsp.download_url)
}
inline ::std::string* GetUploadTokenRsp::mutable_download_url() {
  set_has_download_url();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetUploadTokenRsp.download_url)
  return download_url_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetUploadTokenRsp::release_download_url() {
  clear_has_download_url();
  return download_url_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenRsp::set_allocated_download_url(::std::string* download_url) {
  if (download_url != NULL) {
    set_has_download_url();
  } else {
    clear_has_download_url();
  }
  download_url_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), download_url);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetUploadTokenRsp.download_url)
}

// repeated .YOUMECommonProtocol.NameValue headers = 5;
inline int GetUploadTokenRsp::headers_size() const {
  return headers_.size();
}
inline void GetUploadTokenRsp::clear_headers() {
  headers_.Clear();
}
inline const ::YOUMECommonProtocol::NameValue& GetUploadTokenRsp::headers(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetUploadTokenRsp.headers)
  return headers_.Get(index);
}
inline ::YOUMECommonProtocol::NameValue* GetUploadTokenRsp::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetUploadTokenRsp.headers)
  return headers_.Mutable(index);
}
inline ::YOUMECommonProtocol::NameValue* GetUploadTokenRsp::add_headers() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.GetUploadTokenRsp.headers)
  return headers_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >*
GetUploadTokenRsp::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.GetUploadTokenRsp.headers)
  return &headers_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >&
GetUploadTokenRsp::headers() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.GetUploadTokenRsp.headers)
  return headers_;
}

// optional uint32 bucket_type = 6;
inline bool GetUploadTokenRsp::has_bucket_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetUploadTokenRsp::set_has_bucket_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetUploadTokenRsp::clear_has_bucket_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetUploadTokenRsp::clear_bucket_type() {
  bucket_type_ = 0u;
  clear_has_bucket_type();
}
inline ::youmecommon::protobuf::uint32 GetUploadTokenRsp::bucket_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetUploadTokenRsp.bucket_type)
  return bucket_type_;
}
inline void GetUploadTokenRsp::set_bucket_type(::youmecommon::protobuf::uint32 value) {
  set_has_bucket_type();
  bucket_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetUploadTokenRsp.bucket_type)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5fupload_5ftoken_2eproto__INCLUDED
