// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_tips.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "youme_tips.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

void protobuf_ShutdownFile_youme_5ftips_2eproto() {
  delete AppTips::default_instance_;
  delete GetTipsRsp::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_youme_5ftips_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_youme_5ftips_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::YOUMECommonProtocol::protobuf_AddDesc_youme_5fcomm_2eproto();
  AppTips::default_instance_ = new AppTips();
  GetTipsRsp::default_instance_ = new GetTipsRsp();
  AppTips::default_instance_->InitAsDefaultInstance();
  GetTipsRsp::default_instance_->InitAsDefaultInstance();
  ::youmecommon::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_youme_5ftips_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_youme_5ftips_2eproto_once_);
void protobuf_AddDesc_youme_5ftips_2eproto() {
  ::youmecommon::protobuf::GoogleOnceInit(&protobuf_AddDesc_youme_5ftips_2eproto_once_,
                 &protobuf_AddDesc_youme_5ftips_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_youme_5ftips_2eproto {
  StaticDescriptorInitializer_youme_5ftips_2eproto() {
    protobuf_AddDesc_youme_5ftips_2eproto();
  }
} static_descriptor_initializer_youme_5ftips_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int AppTips::kTipsIdFieldNumber;
const int AppTips::kChannelIdFieldNumber;
const int AppTips::kTitleFieldNumber;
const int AppTips::kTipsTypeFieldNumber;
const int AppTips::kLoopTypeFieldNumber;
const int AppTips::kContentFieldNumber;
const int AppTips::kLinkKeywordsFieldNumber;
const int AppTips::kLinkAddrFieldNumber;
const int AppTips::kLoopWeekdayFieldNumber;
const int AppTips::kStartDatetimeFieldNumber;
const int AppTips::kEndDatetimeFieldNumber;
const int AppTips::kEnableFieldNumber;
const int AppTips::kOldIdFieldNumber;
const int AppTips::kCommentFieldNumber;
#endif  // !_MSC_VER

AppTips::AppTips()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YOUMEServiceProtocol.AppTips)
}

void AppTips::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  comment_ = const_cast< ::YOUMECommonProtocol::MsgComment*>(
      ::YOUMECommonProtocol::MsgComment::internal_default_instance());
#else
  comment_ = const_cast< ::YOUMECommonProtocol::MsgComment*>(&::YOUMECommonProtocol::MsgComment::default_instance());
#endif
}

AppTips::AppTips(const AppTips& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YOUMEServiceProtocol.AppTips)
}

void AppTips::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  tips_id_ = GOOGLE_ULONGLONG(0);
  channel_id_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  tips_type_ = 0;
  loop_type_ = 0;
  content_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  link_keywords_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  link_addr_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  loop_weekday_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  start_datetime_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  end_datetime_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  enable_ = 0u;
  old_id_ = GOOGLE_ULONGLONG(0);
  comment_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppTips::~AppTips() {
  // @@protoc_insertion_point(destructor:YOUMEServiceProtocol.AppTips)
  SharedDtor();
}

void AppTips::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  link_keywords_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  link_addr_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  loop_weekday_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  start_datetime_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  end_datetime_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete comment_;
  }
}

void AppTips::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AppTips& AppTips::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_youme_5ftips_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_youme_5ftips_2eproto();
#endif
  return *default_instance_;
}

AppTips* AppTips::default_instance_ = NULL;

AppTips* AppTips::New(::youmecommon::protobuf::Arena* arena) const {
  AppTips* n = new AppTips;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppTips::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AppTips*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(tips_type_, loop_type_);
    tips_id_ = GOOGLE_ULONGLONG(0);
    if (has_channel_id()) {
      channel_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_title()) {
      title_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_link_keywords()) {
      link_keywords_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_link_addr()) {
      link_addr_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 16128u) {
    if (has_loop_weekday()) {
      loop_weekday_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_start_datetime()) {
      start_datetime_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_end_datetime()) {
      end_datetime_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    enable_ = 0u;
    old_id_ = GOOGLE_ULONGLONG(0);
    if (has_comment()) {
      if (comment_ != NULL) comment_->::YOUMECommonProtocol::MsgComment::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AppTips::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YOUMEServiceProtocol.AppTips)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 tips_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::uint64, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tips_id_)));
          set_has_tips_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_channel_id;
        break;
      }

      // required bytes channel_id = 2;
      case 2: {
        if (tag == 18) {
         parse_channel_id:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_channel_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_title;
        break;
      }

      // required bytes title = 3;
      case 3: {
        if (tag == 26) {
         parse_title:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_title()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_tips_type;
        break;
      }

      // required int32 tips_type = 4;
      case 4: {
        if (tag == 32) {
         parse_tips_type:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tips_type_)));
          set_has_tips_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_loop_type;
        break;
      }

      // required int32 loop_type = 5;
      case 5: {
        if (tag == 40) {
         parse_loop_type:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loop_type_)));
          set_has_loop_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_content;
        break;
      }

      // required bytes content = 6;
      case 6: {
        if (tag == 50) {
         parse_content:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_link_keywords;
        break;
      }

      // required bytes link_keywords = 7;
      case 7: {
        if (tag == 58) {
         parse_link_keywords:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_link_keywords()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_link_addr;
        break;
      }

      // required bytes link_addr = 8;
      case 8: {
        if (tag == 66) {
         parse_link_addr:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_link_addr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_weekday;
        break;
      }

      // required bytes loop_weekday = 9;
      case 9: {
        if (tag == 74) {
         parse_loop_weekday:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_loop_weekday()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_start_datetime;
        break;
      }

      // required bytes start_datetime = 10;
      case 10: {
        if (tag == 82) {
         parse_start_datetime:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_datetime()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_end_datetime;
        break;
      }

      // required bytes end_datetime = 11;
      case 11: {
        if (tag == 90) {
         parse_end_datetime:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_datetime()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_enable;
        break;
      }

      // required uint32 enable = 12;
      case 12: {
        if (tag == 96) {
         parse_enable:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::uint32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enable_)));
          set_has_enable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_old_id;
        break;
      }

      // required uint64 old_id = 13;
      case 13: {
        if (tag == 104) {
         parse_old_id:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::uint64, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &old_id_)));
          set_has_old_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_comment;
        break;
      }

      // optional .YOUMECommonProtocol.MsgComment comment = 14;
      case 14: {
        if (tag == 114) {
         parse_comment:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_comment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YOUMEServiceProtocol.AppTips)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YOUMEServiceProtocol.AppTips)
  return false;
#undef DO_
}

void AppTips::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YOUMEServiceProtocol.AppTips)
  // required uint64 tips_id = 1;
  if (has_tips_id()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tips_id(), output);
  }

  // required bytes channel_id = 2;
  if (has_channel_id()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->channel_id(), output);
  }

  // required bytes title = 3;
  if (has_title()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->title(), output);
  }

  // required int32 tips_type = 4;
  if (has_tips_type()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(4, this->tips_type(), output);
  }

  // required int32 loop_type = 5;
  if (has_loop_type()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(5, this->loop_type(), output);
  }

  // required bytes content = 6;
  if (has_content()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->content(), output);
  }

  // required bytes link_keywords = 7;
  if (has_link_keywords()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->link_keywords(), output);
  }

  // required bytes link_addr = 8;
  if (has_link_addr()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->link_addr(), output);
  }

  // required bytes loop_weekday = 9;
  if (has_loop_weekday()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->loop_weekday(), output);
  }

  // required bytes start_datetime = 10;
  if (has_start_datetime()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->start_datetime(), output);
  }

  // required bytes end_datetime = 11;
  if (has_end_datetime()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->end_datetime(), output);
  }

  // required uint32 enable = 12;
  if (has_enable()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteUInt32(12, this->enable(), output);
  }

  // required uint64 old_id = 13;
  if (has_old_id()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteUInt64(13, this->old_id(), output);
  }

  // optional .YOUMECommonProtocol.MsgComment comment = 14;
  if (has_comment()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      14, *this->comment_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YOUMEServiceProtocol.AppTips)
}

int AppTips::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_tips_id()) {
    // required uint64 tips_id = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt64Size(
        this->tips_id());
  }

  if (has_channel_id()) {
    // required bytes channel_id = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->channel_id());
  }

  if (has_title()) {
    // required bytes title = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->title());
  }

  if (has_tips_type()) {
    // required int32 tips_type = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->tips_type());
  }

  if (has_loop_type()) {
    // required int32 loop_type = 5;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->loop_type());
  }

  if (has_content()) {
    // required bytes content = 6;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  if (has_link_keywords()) {
    // required bytes link_keywords = 7;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->link_keywords());
  }

  if (has_link_addr()) {
    // required bytes link_addr = 8;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->link_addr());
  }

  if (has_loop_weekday()) {
    // required bytes loop_weekday = 9;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->loop_weekday());
  }

  if (has_start_datetime()) {
    // required bytes start_datetime = 10;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->start_datetime());
  }

  if (has_end_datetime()) {
    // required bytes end_datetime = 11;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->end_datetime());
  }

  if (has_enable()) {
    // required uint32 enable = 12;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
        this->enable());
  }

  if (has_old_id()) {
    // required uint64 old_id = 13;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt64Size(
        this->old_id());
  }

  return total_size;
}
int AppTips::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00001fff) ^ 0x00001fff) == 0) {  // All required fields are present.
    // required uint64 tips_id = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt64Size(
        this->tips_id());

    // required bytes channel_id = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->channel_id());

    // required bytes title = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->title());

    // required int32 tips_type = 4;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->tips_type());

    // required int32 loop_type = 5;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->loop_type());

    // required bytes content = 6;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->content());

    // required bytes link_keywords = 7;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->link_keywords());

    // required bytes link_addr = 8;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->link_addr());

    // required bytes loop_weekday = 9;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->loop_weekday());

    // required bytes start_datetime = 10;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->start_datetime());

    // required bytes end_datetime = 11;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::BytesSize(
        this->end_datetime());

    // required uint32 enable = 12;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt32Size(
        this->enable());

    // required uint64 old_id = 13;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::UInt64Size(
        this->old_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .YOUMECommonProtocol.MsgComment comment = 14;
  if (has_comment()) {
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->comment_);
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppTips::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const AppTips*>(&from));
}

void AppTips::MergeFrom(const AppTips& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tips_id()) {
      set_tips_id(from.tips_id());
    }
    if (from.has_channel_id()) {
      set_has_channel_id();
      channel_id_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
    }
    if (from.has_title()) {
      set_has_title();
      title_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (from.has_tips_type()) {
      set_tips_type(from.tips_type());
    }
    if (from.has_loop_type()) {
      set_loop_type(from.loop_type());
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (from.has_link_keywords()) {
      set_has_link_keywords();
      link_keywords_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_keywords_);
    }
    if (from.has_link_addr()) {
      set_has_link_addr();
      link_addr_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_addr_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_loop_weekday()) {
      set_has_loop_weekday();
      loop_weekday_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.loop_weekday_);
    }
    if (from.has_start_datetime()) {
      set_has_start_datetime();
      start_datetime_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_datetime_);
    }
    if (from.has_end_datetime()) {
      set_has_end_datetime();
      end_datetime_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_datetime_);
    }
    if (from.has_enable()) {
      set_enable(from.enable());
    }
    if (from.has_old_id()) {
      set_old_id(from.old_id());
    }
    if (from.has_comment()) {
      mutable_comment()->::YOUMECommonProtocol::MsgComment::MergeFrom(from.comment());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void AppTips::CopyFrom(const AppTips& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppTips::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001fff) != 0x00001fff) return false;

  if (has_comment()) {
    if (!this->comment_->IsInitialized()) return false;
  }
  return true;
}

void AppTips::Swap(AppTips* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppTips::InternalSwap(AppTips* other) {
  std::swap(tips_id_, other->tips_id_);
  channel_id_.Swap(&other->channel_id_);
  title_.Swap(&other->title_);
  std::swap(tips_type_, other->tips_type_);
  std::swap(loop_type_, other->loop_type_);
  content_.Swap(&other->content_);
  link_keywords_.Swap(&other->link_keywords_);
  link_addr_.Swap(&other->link_addr_);
  loop_weekday_.Swap(&other->loop_weekday_);
  start_datetime_.Swap(&other->start_datetime_);
  end_datetime_.Swap(&other->end_datetime_);
  std::swap(enable_, other->enable_);
  std::swap(old_id_, other->old_id_);
  std::swap(comment_, other->comment_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string AppTips::GetTypeName() const {
  return "YOUMEServiceProtocol.AppTips";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppTips

// required uint64 tips_id = 1;
bool AppTips::has_tips_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppTips::set_has_tips_id() {
  _has_bits_[0] |= 0x00000001u;
}
void AppTips::clear_has_tips_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppTips::clear_tips_id() {
  tips_id_ = GOOGLE_ULONGLONG(0);
  clear_has_tips_id();
}
 ::youmecommon::protobuf::uint64 AppTips::tips_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.tips_id)
  return tips_id_;
}
 void AppTips::set_tips_id(::youmecommon::protobuf::uint64 value) {
  set_has_tips_id();
  tips_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.tips_id)
}

// required bytes channel_id = 2;
bool AppTips::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppTips::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
void AppTips::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppTips::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
 const ::std::string& AppTips::channel_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.channel_id)
  return channel_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.channel_id)
}
 void AppTips::set_channel_id(const char* value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.channel_id)
}
 void AppTips::set_channel_id(const void* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.channel_id)
}
 ::std::string* AppTips::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.channel_id)
  return channel_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AppTips::release_channel_id() {
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.channel_id)
}

// required bytes title = 3;
bool AppTips::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppTips::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void AppTips::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void AppTips::clear_title() {
  title_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
 const ::std::string& AppTips::title() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.title)
  return title_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.title)
}
 void AppTips::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.title)
}
 void AppTips::set_title(const void* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.title)
}
 ::std::string* AppTips::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.title)
  return title_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AppTips::release_title() {
  clear_has_title();
  return title_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.title)
}

// required int32 tips_type = 4;
bool AppTips::has_tips_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AppTips::set_has_tips_type() {
  _has_bits_[0] |= 0x00000008u;
}
void AppTips::clear_has_tips_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void AppTips::clear_tips_type() {
  tips_type_ = 0;
  clear_has_tips_type();
}
 ::youmecommon::protobuf::int32 AppTips::tips_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.tips_type)
  return tips_type_;
}
 void AppTips::set_tips_type(::youmecommon::protobuf::int32 value) {
  set_has_tips_type();
  tips_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.tips_type)
}

// required int32 loop_type = 5;
bool AppTips::has_loop_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AppTips::set_has_loop_type() {
  _has_bits_[0] |= 0x00000010u;
}
void AppTips::clear_has_loop_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void AppTips::clear_loop_type() {
  loop_type_ = 0;
  clear_has_loop_type();
}
 ::youmecommon::protobuf::int32 AppTips::loop_type() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.loop_type)
  return loop_type_;
}
 void AppTips::set_loop_type(::youmecommon::protobuf::int32 value) {
  set_has_loop_type();
  loop_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.loop_type)
}

// required bytes content = 6;
bool AppTips::has_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AppTips::set_has_content() {
  _has_bits_[0] |= 0x00000020u;
}
void AppTips::clear_has_content() {
  _has_bits_[0] &= ~0x00000020u;
}
void AppTips::clear_content() {
  content_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
 const ::std::string& AppTips::content() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.content)
  return content_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.content)
}
 void AppTips::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.content)
}
 void AppTips::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.content)
}
 ::std::string* AppTips::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.content)
  return content_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AppTips::release_content() {
  clear_has_content();
  return content_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.content)
}

// required bytes link_keywords = 7;
bool AppTips::has_link_keywords() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AppTips::set_has_link_keywords() {
  _has_bits_[0] |= 0x00000040u;
}
void AppTips::clear_has_link_keywords() {
  _has_bits_[0] &= ~0x00000040u;
}
void AppTips::clear_link_keywords() {
  link_keywords_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link_keywords();
}
 const ::std::string& AppTips::link_keywords() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.link_keywords)
  return link_keywords_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_link_keywords(const ::std::string& value) {
  set_has_link_keywords();
  link_keywords_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.link_keywords)
}
 void AppTips::set_link_keywords(const char* value) {
  set_has_link_keywords();
  link_keywords_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.link_keywords)
}
 void AppTips::set_link_keywords(const void* value, size_t size) {
  set_has_link_keywords();
  link_keywords_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.link_keywords)
}
 ::std::string* AppTips::mutable_link_keywords() {
  set_has_link_keywords();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.link_keywords)
  return link_keywords_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AppTips::release_link_keywords() {
  clear_has_link_keywords();
  return link_keywords_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_allocated_link_keywords(::std::string* link_keywords) {
  if (link_keywords != NULL) {
    set_has_link_keywords();
  } else {
    clear_has_link_keywords();
  }
  link_keywords_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), link_keywords);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.link_keywords)
}

// required bytes link_addr = 8;
bool AppTips::has_link_addr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AppTips::set_has_link_addr() {
  _has_bits_[0] |= 0x00000080u;
}
void AppTips::clear_has_link_addr() {
  _has_bits_[0] &= ~0x00000080u;
}
void AppTips::clear_link_addr() {
  link_addr_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link_addr();
}
 const ::std::string& AppTips::link_addr() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.link_addr)
  return link_addr_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_link_addr(const ::std::string& value) {
  set_has_link_addr();
  link_addr_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.link_addr)
}
 void AppTips::set_link_addr(const char* value) {
  set_has_link_addr();
  link_addr_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.link_addr)
}
 void AppTips::set_link_addr(const void* value, size_t size) {
  set_has_link_addr();
  link_addr_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.link_addr)
}
 ::std::string* AppTips::mutable_link_addr() {
  set_has_link_addr();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.link_addr)
  return link_addr_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AppTips::release_link_addr() {
  clear_has_link_addr();
  return link_addr_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_allocated_link_addr(::std::string* link_addr) {
  if (link_addr != NULL) {
    set_has_link_addr();
  } else {
    clear_has_link_addr();
  }
  link_addr_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), link_addr);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.link_addr)
}

// required bytes loop_weekday = 9;
bool AppTips::has_loop_weekday() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void AppTips::set_has_loop_weekday() {
  _has_bits_[0] |= 0x00000100u;
}
void AppTips::clear_has_loop_weekday() {
  _has_bits_[0] &= ~0x00000100u;
}
void AppTips::clear_loop_weekday() {
  loop_weekday_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_loop_weekday();
}
 const ::std::string& AppTips::loop_weekday() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.loop_weekday)
  return loop_weekday_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_loop_weekday(const ::std::string& value) {
  set_has_loop_weekday();
  loop_weekday_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.loop_weekday)
}
 void AppTips::set_loop_weekday(const char* value) {
  set_has_loop_weekday();
  loop_weekday_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.loop_weekday)
}
 void AppTips::set_loop_weekday(const void* value, size_t size) {
  set_has_loop_weekday();
  loop_weekday_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.loop_weekday)
}
 ::std::string* AppTips::mutable_loop_weekday() {
  set_has_loop_weekday();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.loop_weekday)
  return loop_weekday_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AppTips::release_loop_weekday() {
  clear_has_loop_weekday();
  return loop_weekday_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_allocated_loop_weekday(::std::string* loop_weekday) {
  if (loop_weekday != NULL) {
    set_has_loop_weekday();
  } else {
    clear_has_loop_weekday();
  }
  loop_weekday_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), loop_weekday);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.loop_weekday)
}

// required bytes start_datetime = 10;
bool AppTips::has_start_datetime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void AppTips::set_has_start_datetime() {
  _has_bits_[0] |= 0x00000200u;
}
void AppTips::clear_has_start_datetime() {
  _has_bits_[0] &= ~0x00000200u;
}
void AppTips::clear_start_datetime() {
  start_datetime_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_datetime();
}
 const ::std::string& AppTips::start_datetime() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.start_datetime)
  return start_datetime_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_start_datetime(const ::std::string& value) {
  set_has_start_datetime();
  start_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.start_datetime)
}
 void AppTips::set_start_datetime(const char* value) {
  set_has_start_datetime();
  start_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.start_datetime)
}
 void AppTips::set_start_datetime(const void* value, size_t size) {
  set_has_start_datetime();
  start_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.start_datetime)
}
 ::std::string* AppTips::mutable_start_datetime() {
  set_has_start_datetime();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.start_datetime)
  return start_datetime_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AppTips::release_start_datetime() {
  clear_has_start_datetime();
  return start_datetime_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_allocated_start_datetime(::std::string* start_datetime) {
  if (start_datetime != NULL) {
    set_has_start_datetime();
  } else {
    clear_has_start_datetime();
  }
  start_datetime_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), start_datetime);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.start_datetime)
}

// required bytes end_datetime = 11;
bool AppTips::has_end_datetime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void AppTips::set_has_end_datetime() {
  _has_bits_[0] |= 0x00000400u;
}
void AppTips::clear_has_end_datetime() {
  _has_bits_[0] &= ~0x00000400u;
}
void AppTips::clear_end_datetime() {
  end_datetime_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_end_datetime();
}
 const ::std::string& AppTips::end_datetime() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.end_datetime)
  return end_datetime_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_end_datetime(const ::std::string& value) {
  set_has_end_datetime();
  end_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.end_datetime)
}
 void AppTips::set_end_datetime(const char* value) {
  set_has_end_datetime();
  end_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.AppTips.end_datetime)
}
 void AppTips::set_end_datetime(const void* value, size_t size) {
  set_has_end_datetime();
  end_datetime_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.AppTips.end_datetime)
}
 ::std::string* AppTips::mutable_end_datetime() {
  set_has_end_datetime();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.end_datetime)
  return end_datetime_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AppTips::release_end_datetime() {
  clear_has_end_datetime();
  return end_datetime_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AppTips::set_allocated_end_datetime(::std::string* end_datetime) {
  if (end_datetime != NULL) {
    set_has_end_datetime();
  } else {
    clear_has_end_datetime();
  }
  end_datetime_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), end_datetime);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.end_datetime)
}

// required uint32 enable = 12;
bool AppTips::has_enable() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void AppTips::set_has_enable() {
  _has_bits_[0] |= 0x00000800u;
}
void AppTips::clear_has_enable() {
  _has_bits_[0] &= ~0x00000800u;
}
void AppTips::clear_enable() {
  enable_ = 0u;
  clear_has_enable();
}
 ::youmecommon::protobuf::uint32 AppTips::enable() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.enable)
  return enable_;
}
 void AppTips::set_enable(::youmecommon::protobuf::uint32 value) {
  set_has_enable();
  enable_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.enable)
}

// required uint64 old_id = 13;
bool AppTips::has_old_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void AppTips::set_has_old_id() {
  _has_bits_[0] |= 0x00001000u;
}
void AppTips::clear_has_old_id() {
  _has_bits_[0] &= ~0x00001000u;
}
void AppTips::clear_old_id() {
  old_id_ = GOOGLE_ULONGLONG(0);
  clear_has_old_id();
}
 ::youmecommon::protobuf::uint64 AppTips::old_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.old_id)
  return old_id_;
}
 void AppTips::set_old_id(::youmecommon::protobuf::uint64 value) {
  set_has_old_id();
  old_id_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.AppTips.old_id)
}

// optional .YOUMECommonProtocol.MsgComment comment = 14;
bool AppTips::has_comment() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void AppTips::set_has_comment() {
  _has_bits_[0] |= 0x00002000u;
}
void AppTips::clear_has_comment() {
  _has_bits_[0] &= ~0x00002000u;
}
void AppTips::clear_comment() {
  if (comment_ != NULL) comment_->::YOUMECommonProtocol::MsgComment::Clear();
  clear_has_comment();
}
const ::YOUMECommonProtocol::MsgComment& AppTips::comment() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.AppTips.comment)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return comment_ != NULL ? *comment_ : *default_instance().comment_;
#else
  return comment_ != NULL ? *comment_ : *default_instance_->comment_;
#endif
}
::YOUMECommonProtocol::MsgComment* AppTips::mutable_comment() {
  set_has_comment();
  if (comment_ == NULL) {
    comment_ = new ::YOUMECommonProtocol::MsgComment;
  }
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.AppTips.comment)
  return comment_;
}
::YOUMECommonProtocol::MsgComment* AppTips::release_comment() {
  clear_has_comment();
  ::YOUMECommonProtocol::MsgComment* temp = comment_;
  comment_ = NULL;
  return temp;
}
void AppTips::set_allocated_comment(::YOUMECommonProtocol::MsgComment* comment) {
  delete comment_;
  comment_ = comment;
  if (comment) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.AppTips.comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int GetTipsRsp::kVersionFieldNumber;
const int GetTipsRsp::kRetFieldNumber;
const int GetTipsRsp::kTipsCntFieldNumber;
const int GetTipsRsp::kTipsListFieldNumber;
#endif  // !_MSC_VER

GetTipsRsp::GetTipsRsp()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YOUMEServiceProtocol.GetTipsRsp)
}

void GetTipsRsp::InitAsDefaultInstance() {
}

GetTipsRsp::GetTipsRsp(const GetTipsRsp& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YOUMEServiceProtocol.GetTipsRsp)
}

void GetTipsRsp::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  ret_ = 0;
  tips_cnt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetTipsRsp::~GetTipsRsp() {
  // @@protoc_insertion_point(destructor:YOUMEServiceProtocol.GetTipsRsp)
  SharedDtor();
}

void GetTipsRsp::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void GetTipsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GetTipsRsp& GetTipsRsp::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_youme_5ftips_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_youme_5ftips_2eproto();
#endif
  return *default_instance_;
}

GetTipsRsp* GetTipsRsp::default_instance_ = NULL;

GetTipsRsp* GetTipsRsp::New(::youmecommon::protobuf::Arena* arena) const {
  GetTipsRsp* n = new GetTipsRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTipsRsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetTipsRsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(version_, ret_);
    tips_cnt_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  tips_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetTipsRsp::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YOUMEServiceProtocol.GetTipsRsp)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 version = 1;
      case 1: {
        if (tag == 8) {
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // required int32 ret = 2;
      case 2: {
        if (tag == 16) {
         parse_ret:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tips_cnt;
        break;
      }

      // required int32 tips_cnt = 3;
      case 3: {
        if (tag == 24) {
         parse_tips_cnt:
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::youmecommon::protobuf::int32, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tips_cnt_)));
          set_has_tips_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tips_list;
        break;
      }

      // repeated .YOUMEServiceProtocol.AppTips tips_list = 4;
      case 4: {
        if (tag == 34) {
         parse_tips_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_tips_list:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tips_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_tips_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YOUMEServiceProtocol.GetTipsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YOUMEServiceProtocol.GetTipsRsp)
  return false;
#undef DO_
}

void GetTipsRsp::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YOUMEServiceProtocol.GetTipsRsp)
  // required int32 version = 1;
  if (has_version()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // required int32 ret = 2;
  if (has_ret()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }

  // required int32 tips_cnt = 3;
  if (has_tips_cnt()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteInt32(3, this->tips_cnt(), output);
  }

  // repeated .YOUMEServiceProtocol.AppTips tips_list = 4;
  for (unsigned int i = 0, n = this->tips_list_size(); i < n; i++) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->tips_list(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YOUMEServiceProtocol.GetTipsRsp)
}

int GetTipsRsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_version()) {
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  if (has_ret()) {
    // required int32 ret = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  if (has_tips_cnt()) {
    // required int32 tips_cnt = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->tips_cnt());
  }

  return total_size;
}
int GetTipsRsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 version = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->version());

    // required int32 ret = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());

    // required int32 tips_cnt = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::Int32Size(
        this->tips_cnt());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .YOUMEServiceProtocol.AppTips tips_list = 4;
  total_size += 1 * this->tips_list_size();
  for (int i = 0; i < this->tips_list_size(); i++) {
    total_size +=
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tips_list(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTipsRsp::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const GetTipsRsp*>(&from));
}

void GetTipsRsp::MergeFrom(const GetTipsRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  tips_list_.MergeFrom(from.tips_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_tips_cnt()) {
      set_tips_cnt(from.tips_cnt());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void GetTipsRsp::CopyFrom(const GetTipsRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTipsRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::youmecommon::protobuf::internal::AllAreInitialized(this->tips_list())) return false;
  return true;
}

void GetTipsRsp::Swap(GetTipsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTipsRsp::InternalSwap(GetTipsRsp* other) {
  std::swap(version_, other->version_);
  std::swap(ret_, other->ret_);
  std::swap(tips_cnt_, other->tips_cnt_);
  tips_list_.UnsafeArenaSwap(&other->tips_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GetTipsRsp::GetTypeName() const {
  return "YOUMEServiceProtocol.GetTipsRsp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetTipsRsp

// required int32 version = 1;
bool GetTipsRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetTipsRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void GetTipsRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetTipsRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
 ::youmecommon::protobuf::int32 GetTipsRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetTipsRsp.version)
  return version_;
}
 void GetTipsRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetTipsRsp.version)
}

// required int32 ret = 2;
bool GetTipsRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetTipsRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
void GetTipsRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetTipsRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::youmecommon::protobuf::int32 GetTipsRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetTipsRsp.ret)
  return ret_;
}
 void GetTipsRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetTipsRsp.ret)
}

// required int32 tips_cnt = 3;
bool GetTipsRsp::has_tips_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetTipsRsp::set_has_tips_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
void GetTipsRsp::clear_has_tips_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetTipsRsp::clear_tips_cnt() {
  tips_cnt_ = 0;
  clear_has_tips_cnt();
}
 ::youmecommon::protobuf::int32 GetTipsRsp::tips_cnt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetTipsRsp.tips_cnt)
  return tips_cnt_;
}
 void GetTipsRsp::set_tips_cnt(::youmecommon::protobuf::int32 value) {
  set_has_tips_cnt();
  tips_cnt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetTipsRsp.tips_cnt)
}

// repeated .YOUMEServiceProtocol.AppTips tips_list = 4;
int GetTipsRsp::tips_list_size() const {
  return tips_list_.size();
}
void GetTipsRsp::clear_tips_list() {
  tips_list_.Clear();
}
const ::YOUMEServiceProtocol::AppTips& GetTipsRsp::tips_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetTipsRsp.tips_list)
  return tips_list_.Get(index);
}
::YOUMEServiceProtocol::AppTips* GetTipsRsp::mutable_tips_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetTipsRsp.tips_list)
  return tips_list_.Mutable(index);
}
::YOUMEServiceProtocol::AppTips* GetTipsRsp::add_tips_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.GetTipsRsp.tips_list)
  return tips_list_.Add();
}
::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::AppTips >*
GetTipsRsp::mutable_tips_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.GetTipsRsp.tips_list)
  return &tips_list_;
}
const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::AppTips >&
GetTipsRsp::tips_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.GetTipsRsp.tips_list)
  return tips_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)
