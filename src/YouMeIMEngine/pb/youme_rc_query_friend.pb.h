// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_rc_query_friend.proto

#ifndef PROTOBUF_youme_5frc_5fquery_5ffriend_2eproto__INCLUDED
#define PROTOBUF_youme_5frc_5fquery_5ffriend_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "youme_rc_comm.pb.h"
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5frc_5fquery_5ffriend_2eproto();
void protobuf_AssignDesc_youme_5frc_5fquery_5ffriend_2eproto();
void protobuf_ShutdownFile_youme_5frc_5fquery_5ffriend_2eproto();

class QueryRcFriendByUserNameReq;
class QueryRcFriendByUserNameRsp;
class QueryRcFriendByUserNicknameReq;
class QueryRcFriendByUserNicknameRsp;

// ===================================================================

class QueryRcFriendByUserNameReq : public ::youmecommon::protobuf::MessageLite {
 public:
  QueryRcFriendByUserNameReq();
  virtual ~QueryRcFriendByUserNameReq();

  QueryRcFriendByUserNameReq(const QueryRcFriendByUserNameReq& from);

  inline QueryRcFriendByUserNameReq& operator=(const QueryRcFriendByUserNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const QueryRcFriendByUserNameReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const QueryRcFriendByUserNameReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(QueryRcFriendByUserNameReq* other);

  // implements Message ----------------------------------------------

  inline QueryRcFriendByUserNameReq* New() const { return New(NULL); }

  QueryRcFriendByUserNameReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const QueryRcFriendByUserNameReq& from);
  void MergeFrom(const QueryRcFriendByUserNameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryRcFriendByUserNameReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const void* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // required int32 start_idx = 3;
  bool has_start_idx() const;
  void clear_start_idx();
  static const int kStartIdxFieldNumber = 3;
  ::youmecommon::protobuf::int32 start_idx() const;
  void set_start_idx(::youmecommon::protobuf::int32 value);

  // required int32 len = 4;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 4;
  ::youmecommon::protobuf::int32 len() const;
  void set_len(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.QueryRcFriendByUserNameReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_start_idx();
  inline void clear_has_start_idx();
  inline void set_has_len();
  inline void clear_has_len();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr user_id_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 start_idx_;
  ::youmecommon::protobuf::int32 len_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fquery_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fquery_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fquery_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fquery_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static QueryRcFriendByUserNameReq* default_instance_;
};
// -------------------------------------------------------------------

class QueryRcFriendByUserNameRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  QueryRcFriendByUserNameRsp();
  virtual ~QueryRcFriendByUserNameRsp();

  QueryRcFriendByUserNameRsp(const QueryRcFriendByUserNameRsp& from);

  inline QueryRcFriendByUserNameRsp& operator=(const QueryRcFriendByUserNameRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const QueryRcFriendByUserNameRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const QueryRcFriendByUserNameRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(QueryRcFriendByUserNameRsp* other);

  // implements Message ----------------------------------------------

  inline QueryRcFriendByUserNameRsp* New() const { return New(NULL); }

  QueryRcFriendByUserNameRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const QueryRcFriendByUserNameRsp& from);
  void MergeFrom(const QueryRcFriendByUserNameRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryRcFriendByUserNameRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required int32 list_cnt = 3;
  bool has_list_cnt() const;
  void clear_list_cnt();
  static const int kListCntFieldNumber = 3;
  ::youmecommon::protobuf::int32 list_cnt() const;
  void set_list_cnt(::youmecommon::protobuf::int32 value);

  // repeated .YOUMEServiceProtocol.RcFriendBriefInfo user_list = 4;
  int user_list_size() const;
  void clear_user_list();
  static const int kUserListFieldNumber = 4;
  const ::YOUMEServiceProtocol::RcFriendBriefInfo& user_list(int index) const;
  ::YOUMEServiceProtocol::RcFriendBriefInfo* mutable_user_list(int index);
  ::YOUMEServiceProtocol::RcFriendBriefInfo* add_user_list();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >*
      mutable_user_list();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >&
      user_list() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_list_cnt();
  inline void clear_has_list_cnt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo > user_list_;
  ::youmecommon::protobuf::int32 list_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fquery_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fquery_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fquery_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fquery_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static QueryRcFriendByUserNameRsp* default_instance_;
};
// -------------------------------------------------------------------

class QueryRcFriendByUserNicknameReq : public ::youmecommon::protobuf::MessageLite {
 public:
  QueryRcFriendByUserNicknameReq();
  virtual ~QueryRcFriendByUserNicknameReq();

  QueryRcFriendByUserNicknameReq(const QueryRcFriendByUserNicknameReq& from);

  inline QueryRcFriendByUserNicknameReq& operator=(const QueryRcFriendByUserNicknameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const QueryRcFriendByUserNicknameReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const QueryRcFriendByUserNicknameReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(QueryRcFriendByUserNicknameReq* other);

  // implements Message ----------------------------------------------

  inline QueryRcFriendByUserNicknameReq* New() const { return New(NULL); }

  QueryRcFriendByUserNicknameReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const QueryRcFriendByUserNicknameReq& from);
  void MergeFrom(const QueryRcFriendByUserNicknameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryRcFriendByUserNicknameReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const void* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // required int32 start_idx = 3;
  bool has_start_idx() const;
  void clear_start_idx();
  static const int kStartIdxFieldNumber = 3;
  ::youmecommon::protobuf::int32 start_idx() const;
  void set_start_idx(::youmecommon::protobuf::int32 value);

  // required int32 len = 4;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 4;
  ::youmecommon::protobuf::int32 len() const;
  void set_len(::youmecommon::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_start_idx();
  inline void clear_has_start_idx();
  inline void set_has_len();
  inline void clear_has_len();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr nickname_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 start_idx_;
  ::youmecommon::protobuf::int32 len_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fquery_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fquery_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fquery_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fquery_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static QueryRcFriendByUserNicknameReq* default_instance_;
};
// -------------------------------------------------------------------

class QueryRcFriendByUserNicknameRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  QueryRcFriendByUserNicknameRsp();
  virtual ~QueryRcFriendByUserNicknameRsp();

  QueryRcFriendByUserNicknameRsp(const QueryRcFriendByUserNicknameRsp& from);

  inline QueryRcFriendByUserNicknameRsp& operator=(const QueryRcFriendByUserNicknameRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const QueryRcFriendByUserNicknameRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const QueryRcFriendByUserNicknameRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(QueryRcFriendByUserNicknameRsp* other);

  // implements Message ----------------------------------------------

  inline QueryRcFriendByUserNicknameRsp* New() const { return New(NULL); }

  QueryRcFriendByUserNicknameRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const QueryRcFriendByUserNicknameRsp& from);
  void MergeFrom(const QueryRcFriendByUserNicknameRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryRcFriendByUserNicknameRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required int32 list_cnt = 3;
  bool has_list_cnt() const;
  void clear_list_cnt();
  static const int kListCntFieldNumber = 3;
  ::youmecommon::protobuf::int32 list_cnt() const;
  void set_list_cnt(::youmecommon::protobuf::int32 value);

  // repeated .YOUMEServiceProtocol.RcFriendBriefInfo user_list = 4;
  int user_list_size() const;
  void clear_user_list();
  static const int kUserListFieldNumber = 4;
  const ::YOUMEServiceProtocol::RcFriendBriefInfo& user_list(int index) const;
  ::YOUMEServiceProtocol::RcFriendBriefInfo* mutable_user_list(int index);
  ::YOUMEServiceProtocol::RcFriendBriefInfo* add_user_list();
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >*
      mutable_user_list();
  const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >&
      user_list() const;

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_list_cnt();
  inline void clear_has_list_cnt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo > user_list_;
  ::youmecommon::protobuf::int32 list_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5frc_5fquery_5ffriend_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5frc_5fquery_5ffriend_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5frc_5fquery_5ffriend_2eproto();
  friend void protobuf_ShutdownFile_youme_5frc_5fquery_5ffriend_2eproto();

  void InitAsDefaultInstance();
  static QueryRcFriendByUserNicknameRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryRcFriendByUserNameReq

// required int32 version = 1;
inline bool QueryRcFriendByUserNameReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryRcFriendByUserNameReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryRcFriendByUserNameReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryRcFriendByUserNameReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNameReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.version)
  return version_;
}
inline void QueryRcFriendByUserNameReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.version)
}

// required bytes user_id = 2;
inline bool QueryRcFriendByUserNameReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryRcFriendByUserNameReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryRcFriendByUserNameReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryRcFriendByUserNameReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QueryRcFriendByUserNameReq::user_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.user_id)
  return user_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRcFriendByUserNameReq::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.user_id)
}
inline void QueryRcFriendByUserNameReq::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.user_id)
}
inline void QueryRcFriendByUserNameReq::set_user_id(const void* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.user_id)
}
inline ::std::string* QueryRcFriendByUserNameReq::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.user_id)
  return user_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRcFriendByUserNameReq::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRcFriendByUserNameReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.user_id)
}

// required int32 start_idx = 3;
inline bool QueryRcFriendByUserNameReq::has_start_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryRcFriendByUserNameReq::set_has_start_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryRcFriendByUserNameReq::clear_has_start_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryRcFriendByUserNameReq::clear_start_idx() {
  start_idx_ = 0;
  clear_has_start_idx();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNameReq::start_idx() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.start_idx)
  return start_idx_;
}
inline void QueryRcFriendByUserNameReq::set_start_idx(::youmecommon::protobuf::int32 value) {
  set_has_start_idx();
  start_idx_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.start_idx)
}

// required int32 len = 4;
inline bool QueryRcFriendByUserNameReq::has_len() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryRcFriendByUserNameReq::set_has_len() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryRcFriendByUserNameReq::clear_has_len() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryRcFriendByUserNameReq::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNameReq::len() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.len)
  return len_;
}
inline void QueryRcFriendByUserNameReq::set_len(::youmecommon::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNameReq.len)
}

// -------------------------------------------------------------------

// QueryRcFriendByUserNameRsp

// required int32 version = 1;
inline bool QueryRcFriendByUserNameRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryRcFriendByUserNameRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryRcFriendByUserNameRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryRcFriendByUserNameRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNameRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.version)
  return version_;
}
inline void QueryRcFriendByUserNameRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.version)
}

// required int32 ret = 2;
inline bool QueryRcFriendByUserNameRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryRcFriendByUserNameRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryRcFriendByUserNameRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryRcFriendByUserNameRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNameRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.ret)
  return ret_;
}
inline void QueryRcFriendByUserNameRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.ret)
}

// required int32 list_cnt = 3;
inline bool QueryRcFriendByUserNameRsp::has_list_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryRcFriendByUserNameRsp::set_has_list_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryRcFriendByUserNameRsp::clear_has_list_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryRcFriendByUserNameRsp::clear_list_cnt() {
  list_cnt_ = 0;
  clear_has_list_cnt();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNameRsp::list_cnt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.list_cnt)
  return list_cnt_;
}
inline void QueryRcFriendByUserNameRsp::set_list_cnt(::youmecommon::protobuf::int32 value) {
  set_has_list_cnt();
  list_cnt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.list_cnt)
}

// repeated .YOUMEServiceProtocol.RcFriendBriefInfo user_list = 4;
inline int QueryRcFriendByUserNameRsp::user_list_size() const {
  return user_list_.size();
}
inline void QueryRcFriendByUserNameRsp::clear_user_list() {
  user_list_.Clear();
}
inline const ::YOUMEServiceProtocol::RcFriendBriefInfo& QueryRcFriendByUserNameRsp::user_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.user_list)
  return user_list_.Get(index);
}
inline ::YOUMEServiceProtocol::RcFriendBriefInfo* QueryRcFriendByUserNameRsp::mutable_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.user_list)
  return user_list_.Mutable(index);
}
inline ::YOUMEServiceProtocol::RcFriendBriefInfo* QueryRcFriendByUserNameRsp::add_user_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.user_list)
  return user_list_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >*
QueryRcFriendByUserNameRsp::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.user_list)
  return &user_list_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >&
QueryRcFriendByUserNameRsp::user_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.QueryRcFriendByUserNameRsp.user_list)
  return user_list_;
}

// -------------------------------------------------------------------

// QueryRcFriendByUserNicknameReq

// required int32 version = 1;
inline bool QueryRcFriendByUserNicknameReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryRcFriendByUserNicknameReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryRcFriendByUserNicknameReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryRcFriendByUserNicknameReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNicknameReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.version)
  return version_;
}
inline void QueryRcFriendByUserNicknameReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.version)
}

// required bytes nickname = 2;
inline bool QueryRcFriendByUserNicknameReq::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryRcFriendByUserNicknameReq::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryRcFriendByUserNicknameReq::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryRcFriendByUserNicknameReq::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& QueryRcFriendByUserNicknameReq::nickname() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.nickname)
  return nickname_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRcFriendByUserNicknameReq::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.nickname)
}
inline void QueryRcFriendByUserNicknameReq::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.nickname)
}
inline void QueryRcFriendByUserNicknameReq::set_nickname(const void* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.nickname)
}
inline ::std::string* QueryRcFriendByUserNicknameReq::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.nickname)
  return nickname_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRcFriendByUserNicknameReq::release_nickname() {
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRcFriendByUserNicknameReq::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.nickname)
}

// required int32 start_idx = 3;
inline bool QueryRcFriendByUserNicknameReq::has_start_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryRcFriendByUserNicknameReq::set_has_start_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryRcFriendByUserNicknameReq::clear_has_start_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryRcFriendByUserNicknameReq::clear_start_idx() {
  start_idx_ = 0;
  clear_has_start_idx();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNicknameReq::start_idx() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.start_idx)
  return start_idx_;
}
inline void QueryRcFriendByUserNicknameReq::set_start_idx(::youmecommon::protobuf::int32 value) {
  set_has_start_idx();
  start_idx_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.start_idx)
}

// required int32 len = 4;
inline bool QueryRcFriendByUserNicknameReq::has_len() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryRcFriendByUserNicknameReq::set_has_len() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryRcFriendByUserNicknameReq::clear_has_len() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryRcFriendByUserNicknameReq::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNicknameReq::len() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.len)
  return len_;
}
inline void QueryRcFriendByUserNicknameReq::set_len(::youmecommon::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNicknameReq.len)
}

// -------------------------------------------------------------------

// QueryRcFriendByUserNicknameRsp

// required int32 version = 1;
inline bool QueryRcFriendByUserNicknameRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryRcFriendByUserNicknameRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryRcFriendByUserNicknameRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryRcFriendByUserNicknameRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNicknameRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.version)
  return version_;
}
inline void QueryRcFriendByUserNicknameRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.version)
}

// required int32 ret = 2;
inline bool QueryRcFriendByUserNicknameRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryRcFriendByUserNicknameRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryRcFriendByUserNicknameRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryRcFriendByUserNicknameRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNicknameRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.ret)
  return ret_;
}
inline void QueryRcFriendByUserNicknameRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.ret)
}

// required int32 list_cnt = 3;
inline bool QueryRcFriendByUserNicknameRsp::has_list_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryRcFriendByUserNicknameRsp::set_has_list_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryRcFriendByUserNicknameRsp::clear_has_list_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryRcFriendByUserNicknameRsp::clear_list_cnt() {
  list_cnt_ = 0;
  clear_has_list_cnt();
}
inline ::youmecommon::protobuf::int32 QueryRcFriendByUserNicknameRsp::list_cnt() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.list_cnt)
  return list_cnt_;
}
inline void QueryRcFriendByUserNicknameRsp::set_list_cnt(::youmecommon::protobuf::int32 value) {
  set_has_list_cnt();
  list_cnt_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.list_cnt)
}

// repeated .YOUMEServiceProtocol.RcFriendBriefInfo user_list = 4;
inline int QueryRcFriendByUserNicknameRsp::user_list_size() const {
  return user_list_.size();
}
inline void QueryRcFriendByUserNicknameRsp::clear_user_list() {
  user_list_.Clear();
}
inline const ::YOUMEServiceProtocol::RcFriendBriefInfo& QueryRcFriendByUserNicknameRsp::user_list(int index) const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.user_list)
  return user_list_.Get(index);
}
inline ::YOUMEServiceProtocol::RcFriendBriefInfo* QueryRcFriendByUserNicknameRsp::mutable_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.user_list)
  return user_list_.Mutable(index);
}
inline ::YOUMEServiceProtocol::RcFriendBriefInfo* QueryRcFriendByUserNicknameRsp::add_user_list() {
  // @@protoc_insertion_point(field_add:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.user_list)
  return user_list_.Add();
}
inline ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >*
QueryRcFriendByUserNicknameRsp::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.user_list)
  return &user_list_;
}
inline const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMEServiceProtocol::RcFriendBriefInfo >&
QueryRcFriendByUserNicknameRsp::user_list() const {
  // @@protoc_insertion_point(field_list:YOUMEServiceProtocol.QueryRcFriendByUserNicknameRsp.user_list)
  return user_list_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5frc_5fquery_5ffriend_2eproto__INCLUDED
