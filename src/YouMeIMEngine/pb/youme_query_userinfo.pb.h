// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_query_userinfo.proto

#ifndef PROTOBUF_youme_5fquery_5fuserinfo_2eproto__INCLUDED
#define PROTOBUF_youme_5fquery_5fuserinfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "youme_rcuserinfo.pb.h"
// @@protoc_insertion_point(includes)

namespace YOUMEServiceProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_youme_5fquery_5fuserinfo_2eproto();
void protobuf_AssignDesc_youme_5fquery_5fuserinfo_2eproto();
void protobuf_ShutdownFile_youme_5fquery_5fuserinfo_2eproto();

class GetRcUserInfoReq;
class GetRcUserInfoRsp;
class RcUserInfoUpdateNotifyRsp;

// ===================================================================

class GetRcUserInfoReq : public ::youmecommon::protobuf::MessageLite {
 public:
  GetRcUserInfoReq();
  virtual ~GetRcUserInfoReq();

  GetRcUserInfoReq(const GetRcUserInfoReq& from);

  inline GetRcUserInfoReq& operator=(const GetRcUserInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetRcUserInfoReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRcUserInfoReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRcUserInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetRcUserInfoReq* New() const { return New(NULL); }

  GetRcUserInfoReq* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetRcUserInfoReq& from);
  void MergeFrom(const GetRcUserInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRcUserInfoReq* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const void* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetRcUserInfoReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr user_id_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fquery_5fuserinfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fquery_5fuserinfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fquery_5fuserinfo_2eproto();
  friend void protobuf_ShutdownFile_youme_5fquery_5fuserinfo_2eproto();

  void InitAsDefaultInstance();
  static GetRcUserInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class GetRcUserInfoRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  GetRcUserInfoRsp();
  virtual ~GetRcUserInfoRsp();

  GetRcUserInfoRsp(const GetRcUserInfoRsp& from);

  inline GetRcUserInfoRsp& operator=(const GetRcUserInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const GetRcUserInfoRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetRcUserInfoRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetRcUserInfoRsp* other);

  // implements Message ----------------------------------------------

  inline GetRcUserInfoRsp* New() const { return New(NULL); }

  GetRcUserInfoRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const GetRcUserInfoRsp& from);
  void MergeFrom(const GetRcUserInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRcUserInfoRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::youmecommon::protobuf::int32 ret() const;
  void set_ret(::youmecommon::protobuf::int32 value);

  // required .YOUMEServiceProtocol.RcUserInfo user_info = 3;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 3;
  const ::YOUMEServiceProtocol::RcUserInfo& user_info() const;
  ::YOUMEServiceProtocol::RcUserInfo* mutable_user_info();
  ::YOUMEServiceProtocol::RcUserInfo* release_user_info();
  void set_allocated_user_info(::YOUMEServiceProtocol::RcUserInfo* user_info);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.GetRcUserInfoRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_user_info();
  inline void clear_has_user_info();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::int32 version_;
  ::youmecommon::protobuf::int32 ret_;
  ::YOUMEServiceProtocol::RcUserInfo* user_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fquery_5fuserinfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fquery_5fuserinfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fquery_5fuserinfo_2eproto();
  friend void protobuf_ShutdownFile_youme_5fquery_5fuserinfo_2eproto();

  void InitAsDefaultInstance();
  static GetRcUserInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class RcUserInfoUpdateNotifyRsp : public ::youmecommon::protobuf::MessageLite {
 public:
  RcUserInfoUpdateNotifyRsp();
  virtual ~RcUserInfoUpdateNotifyRsp();

  RcUserInfoUpdateNotifyRsp(const RcUserInfoUpdateNotifyRsp& from);

  inline RcUserInfoUpdateNotifyRsp& operator=(const RcUserInfoUpdateNotifyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const RcUserInfoUpdateNotifyRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RcUserInfoUpdateNotifyRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RcUserInfoUpdateNotifyRsp* other);

  // implements Message ----------------------------------------------

  inline RcUserInfoUpdateNotifyRsp* New() const { return New(NULL); }

  RcUserInfoUpdateNotifyRsp* New(::youmecommon::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::youmecommon::protobuf::MessageLite& from);
  void CopyFrom(const RcUserInfoUpdateNotifyRsp& from);
  void MergeFrom(const RcUserInfoUpdateNotifyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::youmecommon::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::youmecommon::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RcUserInfoUpdateNotifyRsp* other);
  private:
  inline ::youmecommon::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::youmecommon::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::youmecommon::protobuf::int32 version() const;
  void set_version(::youmecommon::protobuf::int32 value);

  // required bytes snder_id = 2;
  bool has_snder_id() const;
  void clear_snder_id();
  static const int kSnderIdFieldNumber = 2;
  const ::std::string& snder_id() const;
  void set_snder_id(const ::std::string& value);
  void set_snder_id(const char* value);
  void set_snder_id(const void* value, size_t size);
  ::std::string* mutable_snder_id();
  ::std::string* release_snder_id();
  void set_allocated_snder_id(::std::string* snder_id);

  // required bytes recver_id = 3;
  bool has_recver_id() const;
  void clear_recver_id();
  static const int kRecverIdFieldNumber = 3;
  const ::std::string& recver_id() const;
  void set_recver_id(const ::std::string& value);
  void set_recver_id(const char* value);
  void set_recver_id(const void* value, size_t size);
  ::std::string* mutable_recver_id();
  ::std::string* release_recver_id();
  void set_allocated_recver_id(::std::string* recver_id);

  // optional bytes notify_msg = 4;
  bool has_notify_msg() const;
  void clear_notify_msg();
  static const int kNotifyMsgFieldNumber = 4;
  const ::std::string& notify_msg() const;
  void set_notify_msg(const ::std::string& value);
  void set_notify_msg(const char* value);
  void set_notify_msg(const void* value, size_t size);
  ::std::string* mutable_notify_msg();
  ::std::string* release_notify_msg();
  void set_allocated_notify_msg(::std::string* notify_msg);

  // @@protoc_insertion_point(class_scope:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_snder_id();
  inline void clear_has_snder_id();
  inline void set_has_recver_id();
  inline void clear_has_recver_id();
  inline void set_has_notify_msg();
  inline void clear_has_notify_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::youmecommon::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::youmecommon::protobuf::Arena* _arena_ptr_;

  ::youmecommon::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::youmecommon::protobuf::internal::ArenaStringPtr snder_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr recver_id_;
  ::youmecommon::protobuf::internal::ArenaStringPtr notify_msg_;
  ::youmecommon::protobuf::int32 version_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_youme_5fquery_5fuserinfo_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_youme_5fquery_5fuserinfo_2eproto();
  #endif
  friend void protobuf_AssignDesc_youme_5fquery_5fuserinfo_2eproto();
  friend void protobuf_ShutdownFile_youme_5fquery_5fuserinfo_2eproto();

  void InitAsDefaultInstance();
  static RcUserInfoUpdateNotifyRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRcUserInfoReq

// required int32 version = 1;
inline bool GetRcUserInfoReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRcUserInfoReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRcUserInfoReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRcUserInfoReq::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetRcUserInfoReq::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcUserInfoReq.version)
  return version_;
}
inline void GetRcUserInfoReq::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcUserInfoReq.version)
}

// required bytes user_id = 2;
inline bool GetRcUserInfoReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRcUserInfoReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRcUserInfoReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRcUserInfoReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& GetRcUserInfoReq::user_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcUserInfoReq.user_id)
  return user_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRcUserInfoReq::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcUserInfoReq.user_id)
}
inline void GetRcUserInfoReq::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.GetRcUserInfoReq.user_id)
}
inline void GetRcUserInfoReq::set_user_id(const void* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.GetRcUserInfoReq.user_id)
}
inline ::std::string* GetRcUserInfoReq::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetRcUserInfoReq.user_id)
  return user_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRcUserInfoReq::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRcUserInfoReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetRcUserInfoReq.user_id)
}

// -------------------------------------------------------------------

// GetRcUserInfoRsp

// required int32 version = 1;
inline bool GetRcUserInfoRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRcUserInfoRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRcUserInfoRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRcUserInfoRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 GetRcUserInfoRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcUserInfoRsp.version)
  return version_;
}
inline void GetRcUserInfoRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcUserInfoRsp.version)
}

// required int32 ret = 2;
inline bool GetRcUserInfoRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRcUserInfoRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRcUserInfoRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRcUserInfoRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::youmecommon::protobuf::int32 GetRcUserInfoRsp::ret() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcUserInfoRsp.ret)
  return ret_;
}
inline void GetRcUserInfoRsp::set_ret(::youmecommon::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.GetRcUserInfoRsp.ret)
}

// required .YOUMEServiceProtocol.RcUserInfo user_info = 3;
inline bool GetRcUserInfoRsp::has_user_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRcUserInfoRsp::set_has_user_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRcUserInfoRsp::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRcUserInfoRsp::clear_user_info() {
  if (user_info_ != NULL) user_info_->::YOUMEServiceProtocol::RcUserInfo::Clear();
  clear_has_user_info();
}
inline const ::YOUMEServiceProtocol::RcUserInfo& GetRcUserInfoRsp::user_info() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.GetRcUserInfoRsp.user_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return user_info_ != NULL ? *user_info_ : *default_instance().user_info_;
#else
  return user_info_ != NULL ? *user_info_ : *default_instance_->user_info_;
#endif
}
inline ::YOUMEServiceProtocol::RcUserInfo* GetRcUserInfoRsp::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) {
    user_info_ = new ::YOUMEServiceProtocol::RcUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.GetRcUserInfoRsp.user_info)
  return user_info_;
}
inline ::YOUMEServiceProtocol::RcUserInfo* GetRcUserInfoRsp::release_user_info() {
  clear_has_user_info();
  ::YOUMEServiceProtocol::RcUserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline void GetRcUserInfoRsp::set_allocated_user_info(::YOUMEServiceProtocol::RcUserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.GetRcUserInfoRsp.user_info)
}

// -------------------------------------------------------------------

// RcUserInfoUpdateNotifyRsp

// required int32 version = 1;
inline bool RcUserInfoUpdateNotifyRsp::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcUserInfoUpdateNotifyRsp::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcUserInfoUpdateNotifyRsp::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcUserInfoUpdateNotifyRsp::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::youmecommon::protobuf::int32 RcUserInfoUpdateNotifyRsp::version() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.version)
  return version_;
}
inline void RcUserInfoUpdateNotifyRsp::set_version(::youmecommon::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.version)
}

// required bytes snder_id = 2;
inline bool RcUserInfoUpdateNotifyRsp::has_snder_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcUserInfoUpdateNotifyRsp::set_has_snder_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcUserInfoUpdateNotifyRsp::clear_has_snder_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcUserInfoUpdateNotifyRsp::clear_snder_id() {
  snder_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_snder_id();
}
inline const ::std::string& RcUserInfoUpdateNotifyRsp::snder_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.snder_id)
  return snder_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcUserInfoUpdateNotifyRsp::set_snder_id(const ::std::string& value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.snder_id)
}
inline void RcUserInfoUpdateNotifyRsp::set_snder_id(const char* value) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.snder_id)
}
inline void RcUserInfoUpdateNotifyRsp::set_snder_id(const void* value, size_t size) {
  set_has_snder_id();
  snder_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.snder_id)
}
inline ::std::string* RcUserInfoUpdateNotifyRsp::mutable_snder_id() {
  set_has_snder_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.snder_id)
  return snder_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcUserInfoUpdateNotifyRsp::release_snder_id() {
  clear_has_snder_id();
  return snder_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcUserInfoUpdateNotifyRsp::set_allocated_snder_id(::std::string* snder_id) {
  if (snder_id != NULL) {
    set_has_snder_id();
  } else {
    clear_has_snder_id();
  }
  snder_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), snder_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.snder_id)
}

// required bytes recver_id = 3;
inline bool RcUserInfoUpdateNotifyRsp::has_recver_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcUserInfoUpdateNotifyRsp::set_has_recver_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcUserInfoUpdateNotifyRsp::clear_has_recver_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcUserInfoUpdateNotifyRsp::clear_recver_id() {
  recver_id_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recver_id();
}
inline const ::std::string& RcUserInfoUpdateNotifyRsp::recver_id() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.recver_id)
  return recver_id_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcUserInfoUpdateNotifyRsp::set_recver_id(const ::std::string& value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.recver_id)
}
inline void RcUserInfoUpdateNotifyRsp::set_recver_id(const char* value) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.recver_id)
}
inline void RcUserInfoUpdateNotifyRsp::set_recver_id(const void* value, size_t size) {
  set_has_recver_id();
  recver_id_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.recver_id)
}
inline ::std::string* RcUserInfoUpdateNotifyRsp::mutable_recver_id() {
  set_has_recver_id();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.recver_id)
  return recver_id_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcUserInfoUpdateNotifyRsp::release_recver_id() {
  clear_has_recver_id();
  return recver_id_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcUserInfoUpdateNotifyRsp::set_allocated_recver_id(::std::string* recver_id) {
  if (recver_id != NULL) {
    set_has_recver_id();
  } else {
    clear_has_recver_id();
  }
  recver_id_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), recver_id);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.recver_id)
}

// optional bytes notify_msg = 4;
inline bool RcUserInfoUpdateNotifyRsp::has_notify_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RcUserInfoUpdateNotifyRsp::set_has_notify_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RcUserInfoUpdateNotifyRsp::clear_has_notify_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RcUserInfoUpdateNotifyRsp::clear_notify_msg() {
  notify_msg_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_notify_msg();
}
inline const ::std::string& RcUserInfoUpdateNotifyRsp::notify_msg() const {
  // @@protoc_insertion_point(field_get:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.notify_msg)
  return notify_msg_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcUserInfoUpdateNotifyRsp::set_notify_msg(const ::std::string& value) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.notify_msg)
}
inline void RcUserInfoUpdateNotifyRsp::set_notify_msg(const char* value) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.notify_msg)
}
inline void RcUserInfoUpdateNotifyRsp::set_notify_msg(const void* value, size_t size) {
  set_has_notify_msg();
  notify_msg_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.notify_msg)
}
inline ::std::string* RcUserInfoUpdateNotifyRsp::mutable_notify_msg() {
  set_has_notify_msg();
  // @@protoc_insertion_point(field_mutable:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.notify_msg)
  return notify_msg_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcUserInfoUpdateNotifyRsp::release_notify_msg() {
  clear_has_notify_msg();
  return notify_msg_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcUserInfoUpdateNotifyRsp::set_allocated_notify_msg(::std::string* notify_msg) {
  if (notify_msg != NULL) {
    set_has_notify_msg();
  } else {
    clear_has_notify_msg();
  }
  notify_msg_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), notify_msg);
  // @@protoc_insertion_point(field_set_allocated:YOUMEServiceProtocol.RcUserInfoUpdateNotifyRsp.notify_msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMEServiceProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youme_5fquery_5fuserinfo_2eproto__INCLUDED
